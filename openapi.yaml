openapi: 3.0.1
info:
  version: 4.0.0
  title: Linode API
  x-logo: {
    url: 'https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_medium.png',
    backgroundColor: '#fafafa'
  }
  description: |
    This is Linode's next generation API. The API was designed around the concepts of REST and does
    its best to conform to a RESTful model whenever possible. When not possible the goal was to be
    as intuitive as possible.

    Another design goal of the Linode API was to give developers the power to manipulate all Linode
    services through code as easily as they can through the Linode Manager UI.

    With this API, it is now not only possible to create a new Linode, but also enable backups,
    add it to a Nodebalancer, attach Block Storage Volumes, create backup snapshots, imagize its
    disk for mass deployment of more Linodes, and so much more.

    Additionally, as an administrator on an account, you can now use the API to create new users and
    control the level of access they have to the services on your account.

    Finally, one of the most powerful features of this version of Linode's API is the ability to
    allow third-party applications control of your account through the OAuth 2 protocol. All Linode
    service endpoints allow four levels of access: __view__, __create__, __modify__, __delete__.
    Developers now have the capability to create their own exciting new services on top of Linode's
    world-class infrastructure.
  contact:
    name: Linode
    url: https://www.linode.com
servers:
- url: https://api.linode.com/v4
paths:
  /account:
    x-linode-cli-command: account
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: View Account
      description: >
        This endpoint returns the contact and billing information related to
        your Account.
      operationId: getAccount
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a single Account object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account
    put:
      x-linode-grant: read_write
      tags:
      - account
      summary: Update Account
      description: >
        This endpoint allows you to update contact and billing information
        related to your Account.
      operationId: updateAccount
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Update contact and billing information.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          description: The updated Account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "address_1": "123 Main St.",
                "address_2": "Suite 101",
                "city": "Philadelphia",
                "company": "My Company, LLC",
                "country": "US",
                "email": "jsmith@mycompany.com",
                "first_name": "John",
                "last_name": "Smith",
                "phone": "555-555-1212",
                "state": "PA",
                "zip": 19102,
                }
              }' \
              https://api.linode.com/v4/account
  /account/credit-card:
    x-linode-cli-command: account
    post:
      x-linode-grant: read_write
      tags:
      - account
      summary: Add/Edit Credit Card
      description: >
        This endpoint allows you to add/edit credit card information to your Account.

        Only one credit card can be associated with your Account, so using this
        endpoint will overwrite your card information with the
        new credit card.
      operationId: createCreditCard
      x-linode-cli-action: update-card
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Update the credit card information associated with your Account.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCard'
      responses:
        '200':
          description: Credit Card updated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                  "credit_card": 4111111111111111,
                  "expiry_month": 11,
                  "expiry_year": 2020
                }' \
                https://api.linode.com/v4/account/credit-card
  /account/events:
    x-linode-cli-command: events
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - account
      summary: List Events
      description: >
         This endpoint returns a collection of Event objects representing
         actions taken on your Account. The events returned depends on your
         grants.
      operationId: getEvents
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - events:read_only
      responses:
        '200':
          description: Returns a paginated lists of Event objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Event'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account/events
  /account/events/{eventId}:
    x-linode-cli-command: events
    parameters:
      - name: eventId
        in: path
        description: The ID of the Event.
        required: true
        schema:
          type: integer
          format: int32
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: View Event
      description: Returns a single Event object.
      operationId: getEvent
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - events:read_only
      responses:
        '200':
          description: An Event object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/account/events/123
  /account/events/{eventId}/read:
    x-linode-cli-command: events
    parameters:
      - name: eventId
        in: path
        description: The ID of the Event to designate as read.
        required: true
        schema:
          type: integer
          format: int32
    post:
      x-linode-grant: read_write
      tags:
      - account
      summary: Mark Event as Read
      description: Marks Event as read.
      operationId: eventRead
      x-linode-cli-action: mark-read
      security:
      - personalAccessToken: []
      - oauth:
        - events:read_write
      responses:
        '200':
          description: Event read.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/events/123/read
  /account/events/{eventId}/seen:
    x-linode-cli-command: events
    parameters:
      - name: eventId
        in: path
        description: The ID of the Event to designate as seen.
        required: true
        schema:
          type: integer
          format: int32
    post:
      x-linode-grant: read_write
      tags:
      - account
      summary: Mark Event as Seen
      description: >
        Marks all Events up to and including this Event by ID as seen.
      operationId: eventSeen
      x-linode-cli-action: mark-seen
      security:
      - personalAccessToken: []
      - oauth:
        - events:read_only
      responses:
        '200':
          description: Events seen.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/events/123/seen
  /account/invoices:
    x-linode-cli-command: account
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - account
      summary: List Invoices
      description: >
        This endpoint returns a paginated list of invoices against your Account.
      operationId: getInvoices
      x-linode-cli-action: invoices-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a paginated list of Invoice objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Invoice'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/invoices
  /account/invoices/{invoiceId}:
    x-linode-cli-command: account
    parameters:
      - name: invoiceId
        in: path
        description: The ID of the Invoice.
        required: true
        schema:
          type: integer
          format: int32
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: View Invoice
      description: Returns a single Invoice object.
      operationId: getInvoice
      x-linode-cli-action: invoice-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: An Invoice object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/invoices/123
  /account/invoices/{invoiceId}/items:
    x-linode-cli-command: account
    parameters:
      - name: invoiceId
        in: path
        description: The ID of the Invoice.
        required: true
        schema:
          type: integer
          format: int32
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - account
      summary: List Invoice Items
      description: Returns a paginated list of Invoice items.
      operationId: getInvoiceItems
      x-linode-cli-action: invoice-items
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of InvoiceItem objects
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/InvoiceItem'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/invoices/123/items
  /account/notifications:
    x-linode-cli-command: notifications
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: List Notifications
      description: >
        This endpoint returns a collection of Notification objects representing
        important, often time-sensitive items related to your account.

        You cannot interact directly with Notifications, and it will disappear
        when the circumstances causing the Notification have been resolved. For
        example, if you have an important ticket open, you must respond to the
        ticket to dismiss the Notification.
      operationId: getNotifications
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a paginated list of Notification objects.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Notification'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/notifications
  /account/oauth-clients:
    x-linode-cli-command: account
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - account
      summary: List OAuth Clients
      description: >
        Returns a paginated list of OAuth Clients registered to your account.  OAuth
        Clients allow users to log into applications you write or host using their
        Linode account, and may allow them to grant some level of access to their
        Linodes or other entities to your application.
      operationId: getClients
      x-linode-cli-action: clients-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of OAuth Clients.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/oauth-clients
    post:
      tags:
      - account
      summary: Create OAuth Client
      description: >
        Create a new OAuth Client, which can be used to allow users to login to
        your own applications using their Linode account, and optionally grant
        your application some amount of access to their Linodes or other entities.
      operationId: createClient
      x-linode-cli-action: client-create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the OAuth Client to create.
        content:
          application/json:
            schema:
              required:
              - label
              - redirect_uri
              allOf:
              - $ref: '#/components/schemas/OAuthClient'
              - type: object
                properties:
                  public:
                    type: boolean
                    description: Whether to create a public or private client.
                    example: false
      responses:
        '200':
          description: Client created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "redirect_uri": "https://example.org/oauth/callback",
                    "label": "Example App",
                    "public": false
                }' \
                https://api.linode.com/v4/account/oauth-clients
  /account/oauth-clients/{clientId}:
    parameters:
      - name: clientId
        in: path
        description: The OAuth Client ID to look up.
        required: true
        schema:
          type: string
    x-linode-cli-command: account
    get:
      tags:
      - account
      summary: View OAuth Client
      description: >
        Returns information about a single OAuth client.
      operationId: getClient
      x-linode-cli-action: client-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Information about the requested client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c
    put:
      tags:
      - account
      summary: Update OAuth Client
      description: >
        Update information about an OAuth Client on your account.  This can be
        especially useful to update the redirect_uri of your client in the event
        that the callback url changed in your application.
      operationId: updateClient
      x-linode-cli-action: client-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The fields to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClient'
      responses:
        '200':
          description: Client updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "redirect_uri": "https://example.org/oauth/callback",
                "label": "Example App"
                }
              }' \
              https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c
    delete:
      tags:
      - account
      summary: Delete OAuth Client
      description: >
        Deletes an OAuth Client registered with Linode.  The Client ID and
        Client Secret will no longer be accepted by https://login.linode.com,
        and all tokens issued to this client will be invalidated (meaning that
        if your application was using a token, it will no longer work).
      operationId: deleteClient
      x-linode-cli-action: client-delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Client deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c
  /account/oauth-clients/{clientId}/reset-secret:
    x-linode-cli-command: account
    parameters:
      - name: clientId
        in: path
        description: The OAuth Client ID to look up.
        required: true
        schema:
          type: string
    post:
      tags:
      - account
      summary: Reset OAuth Client Secret
      description: >
        Resets the OAuth Client Secret for a client you own, and returns the
        OAuth Client with the plaintext secret.  This secret is not supposed to
        be publicly known or disclosed anywhere.  This can be used to generate
        a new secret in case the one you have has been leaked, or to get a new
        secret if you lost the original.  The old secret is expired immediately,
        and logins to your client with the old secret will fail.
      operationId: resetClientSecret
      x-linode-cli-action: client-reset-secret
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Client Secret reset successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/reset-secret
  /account/oauth-clients/{clientId}/thumbnail:
    x-linode-cli-command: account
    parameters:
      - name: clientId
        in: path
        description: The OAuth Client ID to look up.
        required: true
        schema:
          type: string
    get:
      tags:
      - account
      summary: View OAuth Client Thumbnail
      description: >
        Returns the thumbnail for this OAuth Client.  This is a
        publicly-viewable endpoint, and can be accessed without authentication.
      operationId: getClientThumbnail
      x-linode-cli-action: client-thumbnail
      responses:
        '200':
          description: The client's thumbnail.
          content:
            image/png:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/thumbnail > thumbnail.png
    put:
      tags:
      - account
      summary: Update OAuth Client Thumbnail
      description: >
        Upload a thumbnail for a client you own.  You must upload an image file
        that will be returned when the thumbnail is retrieved.  This image will
        be publicly-viewable.
      operationId: setClientThumbnail
      x-linode-cli-action: update-client-thumbnail
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The image to set as the thumbnail.
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Thumbnail updated successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: image/png" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT \
              --data-binary "/path/to/image"
              https://api.linode.com/v4/account/oauth-clients/edc6790ea9db4d224c5c/thumbnail

  /account/payments:
    x-linode-cli-command: account
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      x-linode-grant: read_only
      tags:
      - account
      summary: List Payments
      description: >
        This endpoint returns a paginated list of Payments made on this Account.
      operationId: getPayments
      x-linode-cli-action: payments-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a paginated list of Payment objects.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Payment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/payments
    post:
      x-linode-grant: read_write
      tags:
      - account
      summary: Make Payment
      description: >
        This endpoint allows you to make a payment to your Account
        via credit card. This will charge your credit card the requested amount.
      operationId: createPayment
      x-linode-cli-action: payment-create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the payment you are making.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment made.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Payment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "cvv": "123",
                    "usd": "120.50"
                }' \
                https://api.linode.com/v4/account/payments
  /account/payments/{paymentId}:
    x-linode-cli-command: account
    parameters:
    - name: paymentId
      in: path
      description: The ID of the Payment to look up.
      required: true
      schema:
        type: integer
        format: int32
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: View Payment
      description: >
        Returns information about a specific Payment.
      operationId: getPayment
      x-linode-cli-action: payment-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A Payment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/payments/123
  /account/payments/paypal:
    x-linode-cli-command: account
    post:
      x-linode-grant: read_only
      tags:
      - account
      summary: Stage PayPal Payment
      description: >
        This begins the process of submitting a payment via PayPal. After calling
         this endpoint, you must take the resulting `payment_id` along with
         the `payer_id` from your PayPal account, and POST to
        `/account/payments/paypal-execute` to complete the payment.
      operationId: createPayPalPayment
      x-linode-cli-action: paypal-start
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: >
          The amount to submit as payment via PayPal.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPal'
      responses:
        '200':
          description: PayPal payment staged.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayPalExecute'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "usd": "120.50",
                    "redirect_url": "https://example.org",
                    "cancel_url": "https://example.org"
                }' \
                https://api.linode.com/v4/account/payments/paypal
  /account/payment/paypal/execute:
    x-linode-cli-command: account
    post:
      x-linode-grant: read_write
      tags:
      - account
      summary: Execute Staged/Approved PayPal Payment
      description: >
        Given a PaymentID and PayerID - as generated by PayPal during the
        transaction authorization process - this endpoint executes the payment
        to capture the funds and credit your Linode account.
      operationId: executePayPalPayment
      x-linode-cli-action: paypal-execute
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: >
          The details of the payment to execute.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPalExecute'
      responses:
        '200':
          description: PayPal payment executed.
          content:
            application/json:
             schema:
               type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "payment_id": "PAY-1234567890ABCDEFGHIJKLMN",
                    "payer_id": "ABCDEFGHIJKLM"
                }' \
                https://api.linode.com/v4/account/payments/paypal
  /account/settings:
    x-linode-cli-command: account
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: View Account Settings
      description: >
        This endpoint returns information related to
        your Account settings: Managed service subscription, Longview
        subscription, and network helper.
      operationId: getAccountSettings
      x-linode-cli-action: settings
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a single Account settings object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/settings
    put:
      x-linode-grant: read_write
      tags:
      - account
      summary: Update Account Settings
      description: >
        This endpoint allows you to update your Account settings.
      operationId: updateAccountSettings
      x-linode-cli-action: settings-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Update Account settings information.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSettings'
      responses:
        '200':
          description: The updated Account settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "network_helper": true,
                    "longview_subscription": "longview-10"
                }' \
                https://api.linode.com/v4/account/settings
  /account/transfer:
    x-linode-cli-command: account
    get:
      x-linode-grant: read_only
      tags:
      - account
      summary: View Network Utilization
      description: >
        This endpoint returns a Transfer object showing your network utilization,
        in GB, for the current month.
      operationId: getTransfer
      x-linode-cli-action: transfer
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a Transfer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/transfer
  /account/users:
    x-linode-cli-command: users
    get:
      x-linode-grant: unrestricted only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - account
      summary: List Users
      description: >
        Returns a paginated list of Users on your account.  Users may access all
        or part of your account based on their restricted status and grants.  An
        unrestricted user may access everything on the account, whereas restricted
        user may only access entities or perform actions they've been given specific
        grants to.
      operationId: getUsers
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of Users.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/users
    post:
      x-linode-grant: unrestricted only
      tags:
      - account
      summary: Create User
      description: >
        Creates a new User on your account.  Once created, the user will be
        able to log in and access portions of your account.  Access is
        determined by whether or not they are restricted, and what grants they
        have been given.
      operationId: createUser
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the User to create.
        content:
          application/json:
            schema:
              required:
              - username
              - email
              - password
              allOf:
              - $ref: '#/components/schemas/User'
              - type: object
                properties:
                  email:
                    type: string
                    format: email
                    description: >
                      The new user's email address.
                    example: example_user@linode.com
                  password:
                    type: string
                    description: >
                      The password this user will user to log in.
                    example: hunter7
      responses:
        '200':
          description: New user created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X POST -d '{
                    "username": "example_user",
                    "email": "person@place.com",
                    "restricted": true
                }' \
                https://api.linode.com/v4/account/users
  /account/users/{username}:
    x-linode-cli-command: users
    parameters:
      - name: username
        in: path
        description: The username to look up.
        required: true
        schema:
          type: string
    get:
      x-linode-grant: unrestricted only
      tags:
      - account
      summary: View User
      description: >
        Returns information about a single user on your account.
      operationId: getUser
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The requested User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/users/example_user
    put:
      x-linode-grant: unrestricted only
      tags:
      - account
      summary: Update User
      description: >
        Update information about a user on your account.  This can be used to
        change the restricted status of a user.  When making a user restricted,
        no grants will be configured by default and you must then set up grants
        in order for the user to access anything on the account.
      operationId: updateUser
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The information to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "email": "person@place.com",
                    "restricted": true
                }' \
                https://api.linode.com/v4/account/users/example_user
    delete:
      x-linode-grant: unrestricted only
      tags:
      - account
      summary: Delete User
      description: >
        Deletes a user.  The deleted user will be immediately logged out and
        may no longer log in or perform any actions.  All grants that user had
        will be lost.
      operationId: deleteUser
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/account/users/example_user
  /account/users/{username}/grants:
    x-linode-cli-command: users
    parameters:
      - name: username
        in: path
        description: The username to look up.
        required: true
        schema:
          type: string
    get:
      x-linode-grant: unrestricted only
      tags:
      - account
      summary: View User's Grants
      description: >
        Returns the full grants structure for this user.  This includes all
        entities on the account alongside what level of access this user has
        to each of them.  Individual users may view their own grants at the
        `/profile/grants` endpoint, but will not see entities that they have
        no access to.
      operationId: getUserGrants
      x-linode-cli-action: grants
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The user's grants.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantsResponse'
        '204':
          description: >
            This is an unrestricted user, and therefore has no grants to return.
            This user may access everything on the account and perform all actions.
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/account/users/example_user/grants
    put:
      x-linode-grant: unrestricted only
      tags:
      - account
      summary: Update User's Grants
      description: >
        Update the grants a user has.  This can be used to give a user access
        to new entities or actions, or take access away.  You do not need to
        include the grant for every entity on the account in this request; any
        that are not included will remain unchanged.
      operationId: updateUserGrants
      x-linode-cli-action: update-grants
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The grants to update.  Omitted grants will be left unchanged.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantsResponse'
      responses:
        '200':
          description: Grants updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Content-Type: application/json" \
                -H "Authorization: Bearer $TOKEN" \
                -X PUT -d '{
                    "global": {
                      "add_linodes": true,
                      "add_nodebalancers": false,
                      "add_domains": true,
                      "add_longview": false,
                      "add_stackscripts": true,
                      "longview_subscription": true,
                      "add_images": true,
                      "add_volumes": true,
                      "account_access": "read_only",
                      "cancel_account": false
                    },
                    "domain": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      }
                    ],
                    "image": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      }
                    ],
                    "linode": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      },
                      {
                        "id": 234,
                        "permissions": "read_write"
                      },
                      {
                        "id": 345,
                        "permissions": "read_only"
                      },
                    ],
                    "longview": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      },
                      {
                        "id": 234,
                        "permissions": "read_write"
                      }
                    ],
                    "nodebalancer": [
                      {
                        "id": 123,
                        "permissions": "read_write"
                      }
                    ],
                    "stackscript": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      },
                      {
                        "id": 124,
                        "permissions": "read_write"
                      }
                    ],
                    "volume": [
                      {
                        "id": 123,
                        "permissions": "read_only"
                      }
                    ]
                }' \
                https://api.linode.com/v4/account/users/example_user/grants
  /domains:
    x-linode-cli-command: domains
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - domains
      summary: View Domains
      description: >
        This is a collection of domains that you have registered in Linode's DNS
        Manager.  Linode is not a registrar, and in order for these to work you
        must own the domains and point your registrar at Linode's nameservers.
      operationId: getDomains
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_only
      responses:
        '200':
          description: |
            A paginated list of Domains you have registered.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Domain'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                https://api.linode.com/v4/domains
    post:
      x-linode-grant: add_domains
      tags:
      - domains
      summary: Create Domain
      description: >
        Adds a new domain to Linode's DNS Manager.  Linode is not a registrar, and
        you must own the domain before adding it here.  Be sure to point your
        registrar to Linode's nameservers so that the records hosted here are
        used.
      operationId: createDomain
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_write
      requestBody:
        description: Information about the domain you are registering.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '200':
          description: |
            Domain added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                  "domain": "example.com",
                  "type": "master",
                  "soa_email": "admin@example.com",
                  "description": "Example Description",
                  "refresh_sec": 14400,
                  "retry_sec": 3600,
                  "expire_sec": 604800,
                  "ttl_sec": 3600,
                  "status": "active",
                  "master_ips": ["127.0.0.1","255.255.255.1","123.123.123.7"],
                  "axfr_ips": ["44.55.66.77"],
                  "display_group": "Example Display Group"
              }' \
              https://api.linode.com/v4/domains
  /domains/{domainId}:
    x-linode-cli-command: domains
    parameters:
      - name: domainId
        in: path
        description: The ID of the Domain to access.
        required: true
        schema:
          type: integer
          format: int32
    get:
      x-linode-grant: read_only
      tags:
      - domains
      summary: View Domain
      description: >
        This is a single domain that you have registered in Linode's DNS Manager.
        Linode is not a registrar, and in order for this domain record to work you
        must own the domain and point your registrar at Linode's nameservers.
      operationId: getDomain
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_only
      responses:
        '200':
          description: |
            A single domain in Linode's DNS Manager.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/domains/123
    put:
      x-linode-grant: read_write
      tags:
      - domains
      summary: Update Domain
      description: |
        Update information about a domain in Linode's DNS Manager.
      operationId: updateDomain
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_write
      requestBody:
        description: The Domain information to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '200':
          description: Domain update successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                  "domain": "example.com",
                  "type": "master",
                  "soa_email": "admin@example.com",
                  "description": "Example Description",
                  "refresh_sec": 14400,
                  "retry_sec": 3600,
                  "expire_sec": 604800,
                  "ttl_sec": 3600,
                  "status": "active",
                  "master_ips": ["127.0.0.1","255.255.255.1","123.123.123.7"],
                  "axfr_ips": ["44.55.66.77"],
                  "display_group": "Example Display Group"
              }' \
              https://api.linode.com/v4/domains/123
    delete:
      x-linode-grant: read_write
      tags:
      - domains
      summary: Delete Domain
      description: >
        Deletes a domain from Linode's DNS Manager.  The domain will be removed
        from Linode's nameservers shortly after this operation completes.  This
        also deletes all associated Domain Records.
      operationId: deleteDomain
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_write
      responses:
        '200':
          description: Domain deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
        - lang: Shell
          source: >
            curl -H "Authorization: Bearer $TOKEN" \
                -X DELETE \
                https://api.linode.com/v4/domains/123
  /domains/{domainId}/records:
    x-linode-cli-command: domains
    parameters:
    - name: domainId
      in: path
      description: The ID of the domain we are accessing records for.
      required: true
      schema:
        type: integer
    get:
      x-linode-grant: read_only
      tags:
      - domains
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_only
      summary: List Domain Records
      description: |
        Returns a paginated list of records configured on a domain in Linode's
        DNS Manager.
      operationId: getDomainRecords
      x-linode-cli-action: records-list
      responses:
        '200':
          description: A list of domain records.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/DomainRecord'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/domains/123/records
    post:
      x-linode-grant: read_write
      tags:
      - domains
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_write
      summary: Create Domain Record
      description: >
        Adds a new domain record to the zonefile this domain represents.
      operationId: createDomainRecord
      x-linode-cli-action: records-create
      requestBody:
        description: >
          Information about the new record to add.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRecord'
      responses:
        '200':
          description: Domain record created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRecord'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "type": "A",
                "name": "test",
                "target": "12.34.56.78",
                "priority": 50,
                "weight": 50,
                "port": 80,
                "service": null,
                "protocol": null,
                "ttl_sec": 604800
              }' \
              https://api.linode.com/v4/domains/123/records
  /domains/{domainId}/records/{recordId}:
    x-linode-cli-command: domains
    parameters:
    - name: domainId
      in: path
      description: The ID of the domain whose record you are accessing.
      required: true
      schema:
        type: integer
    - name: recordId
      in: path
      description: The ID of the record you are accessing.
      required: true
      schema:
        type: integer
    get:
      x-linode-grant: read_only
      tags:
      - domains
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_only
      summary: View Domain Record
      description: |
        View a single record on this domain.
      operationId: getDomainRecord
      x-linode-cli-action: records-view
      responses:
        '200':
          description: A domain record object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRecord'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/domains/123/records/234
    put:
      x-linode-grant: read_write
      tags:
      - domains
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_write
      summary: Update Domain Record
      description: |
        Update a single record on this domain.
      operationId: updateDomainRecord
      x-linode-cli-action: records-update
      requestBody:
        description: The values to change.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRecord'
      responses:
        '200':
          description: Domain record updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainRecord'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "type": "A",
                "name": "test",
                "target": "12.34.56.78",
                "priority": 50,
                "weight": 50,
                "port": 80,
                "service": null,
                "protocol": null,
                "ttl_sec": 604800,
                "tag": null
              }' \
              https://api.linode.com/v4/domains/123/records/234
    delete:
      x-linode-grant: read_write
      tags:
      - domains
      security:
      - personalAccessToken: []
      - oauth:
        - domains:read_write
      summary: Delete Domain Record
      description: |
        Deletes a record on this domain.
      operationId: deleteDomainRecord
      x-linode-cli-action: records-delete
      responses:
        '200':
          description: Record deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/domains/123/records/234
  /images:
    x-linode-cli-command: images
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - images
      summary: List Images
      description: >
        Returns a paginated list of Images. This list includes public Images and
        your private Images. You can call this enpoint without authentication
        to get all of the public Images.
      operationId: getImages
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - images:read_only
      responses:
        '200':
          description: A paginated list of Images.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/ImagePublic'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/images
    post:
      x-linode-grant: read_write
      tags:
      - images
      summary: Create Image
      description: >
        Creates a new private gold-master Image from a Linode Disk. There is no
        additional charge to store Images for Linode users, with a limit of 2GB
        per Image and 3 Images per account.
      operationId: createImage
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - images:read_write
      requestBody:
        description: Information about the Image to create.
        content:
          application/json:
            schema:
              required:
              - disk_id
              allOf:
              - $ref: '#/components/schemas/ImagePrivate'
              - type: object
              properties:
                disk_id:
                  type: integer
                  format: int32
                  description: >
                     The ID of the Linode Disk that this Image will be
                     created from.
                  example: 42
                label:
                  type: string
                  description: >
                    A short title of the Image. Defaults to the label of the
                    Disk it is being created from if not provided.
                description:
                  type: string
                  description: >
                    A detailed description of the Image.
      responses:
        '200':
          description: New private Image created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePrivate'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "disk_id": 123,
                "label": "this_is_a_label",
                "description": "A longer description of the image"
              }' \
              https://api.linode.com/v4/images
  /images/{imageId}:
    x-linode-cli-command: images
    parameters:
    - name: imageId
      in: path
      description: ID of the gold-master image to look up.
      required: true
      schema:
        type: string
    get:
      tags:
      - images
      summary: View Image
      description: >
        Get information about a single image.
      operationId: getImage
      x-linode-cli-action: view
      responses:
        '200':
          description: A single image object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePrivate'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/images/linode/debian9
    put:
      x-linode-grant: read_write
      tags:
      - images
      summary: Update Image
      description: >
        This allows you to update an private Image that you have permission to
        `read_write`.
      operationId: updateImage
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - images:read_write
      requestBody:
        description: >
          Any field that is not marked as `readOnly` may not be updated. If any
          updated field fails to pass validation, the image will not be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagePrivate'
      responses:
        '200':
          description: The updated image.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePrivate'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "id": "private/67848373",
                "label": "My gold-master image",
                "created": "2018-01-01T00:01:01",
                "created_by": "somename",
                "deprecated": false,
                "description": "The detailed description of my Image.",
                "is_public": false,
                "size": 2500,
                "type": "manual",
                "vendor": null
              }' \
              https://api.linode.com/v4/images/private/67848373
    delete:
      x-linode-grant: read_write
      tags:
      - images
      summary: Delete Image
      description: |
        Deletes an Image you have permission to `read_write`. Deleting an image is a destructive
        process and cannot be undone. Only private Images are deletable.
      operationId: deleteImage
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - images:read_write
      responses:
        '200':
          description: Delete successful
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/images/private/67848373
  /linode/instances:
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      summary: List Linodes
      description: >
        Returns a paginated list of Linodes you have permission to view.
      tags:
      - Linode Instances
      operationId: getLinodeInstances
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: Returns a list of all Linodes on your account.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances
    post:
      x-linode-charge: true
      x-linode-grant: add_linodes
      summary: Create Linode
      description: |
        This endpoint allows you to create a new Linode server on your account. In order for this
        request to complete successfully, your user must have the `add_linodes` grant. Creating a
        new Linode will incur a charge on your account.

        Linodes can be created using one of the available types. See `GET /linode/types` to get more
        information about each type's specs and cost.

        Linodes can be created in any one of our available regions, see `GET /regions` for a list
        of available regions you deploy your Linode in.

        Linodes can be created in a number of ways:

        - Using a Linode Linux Distribution image or an image you created based on another Linode
          - The Linode will be `running` after it completes `provisioning`
          - A default config with two disks, one being a 512 swap disk, is created
            - `swap_size` can be used to customize the swap disk size
          - Requires a `password` be supplied to use for the root user's account
          - It is recommended to supply ssh keys for the root user using the `authorized_keys` field

        - Using one of your own StackScripts or a public StackScript
          - The Linode will be `running` after it completes `provisioning`
          - Requires a compatible Linode Linux Distribution `image` to be supplied
            - see `GET /linode/stackscript/{stackscriptId}` for compatible images
          - Requires a `root_pass` be supplied to use for the root user's account
          - It is recommended to supply ssh keys for the root user using the `authorized_keys` field

        - Using one of your other Linode's backups
          - The Linode will be `running` after it completes `provisioning`
          - The disks and config will match that of the Linode that was backed up
          - The `root_pass` will match that of the Linode that was backed up

        - Create an empty Linode
          - The Linode will remain `offline` and must be manually started
            - see `POST /linode/instances/{linodeId}/boot`
          - Disks and Configs must be created manually
          - This is only recommended for advanced use-cases
      tags:
      - Linode Instances
      operationId: createLinodeInstance
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The requested initial state of a new Linode.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - type
              - region
              allOf:
              - $ref: '#/components/schemas/LinodeRequest'
              - $ref: '#/components/schemas/LinodeBase'
              properties:
                backup_id:
                  type: integer
                  title: The ID of a Linode Backup
                  example: 1234
                  description: |
                    A Backup ID from another Linode's available backups. Your user must have
                    `read_write` access to that Linode, the backup must have a `status` of
                    `successful`, and the Linode must be deployed to the same `region` as the backup.
                    See `GET /linode/instances/{linodeId}/backups` for a Linode's available backups.

                    This field and the `image` field are mutually exclusive.
                backups_enabled:
                  type: boolean
                  title: If Backups should be enabled.
                  description: |
                    If this field is set to `true`, the created Linode will automatically be
                    enrolled in the Linode Backup service. This will incur an additional charge.
                    The cost for the Backup service is dependent on the type of Linode deployed.

                    Backup pricing is included in the response from `GET /linodes/types`
                swap_size:
                  type: integer
                  title: Swap Disk size in MB
                  example: 512
                  description: >
                    When deploying from an Image, this field is optional, otherwise it is ignored.
                    This is used to set the Swap Disk size for the newly created Linode.
                  default: 512
      responses:
        '200':
          description: >
            A new Linode is being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "backup_id": 1234,
                "backups_enabled": true,
                "swap_size": 512,
                "image": "linode/debian9",
                "root_pass": "aComplexP@ssword",
                "authorized_keys": [
                  "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
                ],
                "booted": true,
                "label": "linode123",
                "type": "g5-standard-2",
                "region": "us-east",
                "group": "Linode-Group"
              }' \
              https://api.linode.com/v4/linode/instances
  /linode/instances/{linodeId}:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      tags:
      - Linode Instances
      summary: View Linode
      description: Get a specific Linode by ID.
      operationId: getLinodeInstance
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: Returns a single Linode object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
          links:
            boot:
              $ref: '#/components/links/bootLinode'
            reboot:
              $ref: '#/components/links/rebootLinode'
            shutdown:
              $ref: '#/components/links/shutdownLinode'
            update:
              $ref: '#/components/links/updateLinode'
            delete:
              $ref: '#/components/links/deleteLinode'
            rebuild:
              $ref: '#/components/links/rebuildLinode'
            mutate:
              $ref: '#/components/links/mutateLinode'
            resize:
              $ref: '#/components/links/resizeLinode'
            rescue:
              $ref: '#/components/links/rescueLinode'
            clone:
              $ref: '#/components/links/cloneLinode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123
    put:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Update Linode
      description: >
        This allows you to update a Linode that you have permission to `read_write`.
      operationId: updateLinodeInstance
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: >
          Any field that is not marked as `readOnly` may be updated. Fields that are marked
          `readOnly` will be ignored. If any updated field fails to pass validation, the Linode will
          not be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Linode'
      responses:
        '200':
          description: The updated Linode.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "linode123",
                "group": "Linode-Group",
                "alerts": {
                  "cpu": 90,
                  "network_in": 10,
                  "network_out": 10,
                  "transfer_quota": 80,
                  "io": 10000
                },
                "backups": {
                  "schedule": {
                    "day": "Saturday",
                    "window": "W22"
                  }
                },
                "type": "g5-standard-2",
                "region": "us-east"
              }' \
              https://api.linode.com/v4/linode/instances/123
    delete:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Delete Linode
      description: |
        Deletes a Linode you have permission to `read_write`. Deleting a Linode is a destructive
        process and cannot be undone. Additionally, deleting a Linode:

        * Gives up any IP addresses the Linode was assigned
        * Deletes all disks, backups, configs, etc.
        * Stops billing for the Linode and its associated services. You will be billed for time used
          within the billing period the Linode was active.
      operationId: deleteLinodeInstance
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: Delete successful
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/linode/instances/123
  /linode/instances/{linodeId}/backups:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode the backups belong to.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      summary: List Backups
      description: >
        Returns information about this Linode's available backups.
      tags:
      - Linode Instances
      operationId: getBackups
      x-linode-cli-action: backups
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: A collection of the specified Linode's available backups.
          content:
            application/json:
              schema:
                type: object
                properties:
                  automatic:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/components/schemas/Backup'
                      - type: object
                        properties:
                          type:
                            type: string
                            example: automatic
                  snapshot:
                    type: object
                    properties:
                      in_progress:
                        $ref: '#/components/schemas/Backup'
                      current:
                        $ref: '#/components/schemas/Backup'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/backups
    post:
      x-linode-grant: read_write
      summary: Create Snapshot
      description: >
        Creates a snapshot backup of a Linode. WARNING: If you already have a
        snapshot this is a destructive operation. The previous snapshot will be
        deleted.
      tags:
      - Linode Instances
      operationId: createSnapshot
      x-linode-cli-action: snapshot
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The label for the new snapshot.
        required: true
        content:
          application/json:
            schema:
              required:
              - label
              type: object
              properties:
                label:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: SnapshotLabel
      responses:
        '200':
          description: Snapshot was successfully taken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "MyNewSnapshot"
              }' \
              https://api.linode.com/v4/linode/instances/123/backups
  /linode/instances/{linodeId}/backups/cancel:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode to cancel backup service for.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Cancel Backups
      description: >
        Cancels the backup service on the given Linode.
      tags:
      - Linode Instances
      operationId: cancelBackups
      x-linode-cli-action: backups-cancel
      security:
      - personalAccessToken: []
      - oauth:
        - linode:read_write
      responses:
        '200':
          description: Backup service was cancelled for the specified Linode.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/linode/instances/123/backups/cancel
  /linode/instances/{linodeId}/backups/enable:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode to enable backup service for.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Enable Backups
      description: >
        Enables backups for the specified Linode.
      tags:
      - Linode Instances
      operationId: enableBackups
      x-linode-cli-action: backups-enable
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: Backup service was enabled.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/linode/instances/123/backups/enable
  /linode/instances/{linodeId}/backups/{backupId}:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode the backup belongs to.
      required: true
      schema:
        type: integer
    - name: backupId
      in: path
      description: The ID of the backup to look up.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      summary: View Backup
      description: >
        Return information about a backup.
      tags:
      - Linode Instances
      operationId: getBackup
      x-linode-cli-action: backup-show
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: A single Linode backup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/backups/123456
  /linode/instances/{linodeId}/backups/{backupId}/restore:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode that the backup belongs to.
      required: true
      schema:
        type: integer
    - name: backupId
      in: path
      description: The ID of the backup to restore.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Restore Backup
      description: >
        Restores a Linode's backup to the specified Linode.
      tags:
      - Linode Instances
      operationId: restoreBackup
      x-linode-cli-action: backup-restore
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: Parameters to provide when restoring the backup.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - linode_id
              properties:
                linode_id:
                  type: integer
                  format: int32
                  description: >
                    The ID of the Linode to restore a backup to.
                  example: 123456
                overwrite:
                  type: boolean
                  description: >
                    If true, deletes all disks and configs on the target Linode
                    before restoring.
                  example: true
      responses:
        '200':
          description: Restore from backup was initiated.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "linode_id": 123456,
                "overwrite": true
              }' \
              https://api.linode.com/v4/linode/instances/123/backups/123456/restore
  /linode/instances/{linodeId}/boot:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode to boot
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Boot Linode
      description: |
        Boots a Linode you have permission to modify.  If no parameters are given, a config profile
        will be chosen for this boot based on the following criteria:

        * If there is only one config profile for this Linode, it will be used.
        * If there is more than one config profile, the last booted config will be used.
        * If there is more than one config profile and none were the last to be booted, because the
          Linode was never booted or the last booted config was deleted, an error will be returned.
      tags:
      - Linode Instances
      operationId: bootLinodeInstance
      x-linode-cli-action: boot
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: Optional configuration to boot into (see above).
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                config_id:
                  type: integer
                  format: int32
                  description: >
                    The Linode Config ID to boot into.  If omitted, we will attempt to select a
                    config to use (this will do the right thing in most cases).
                  example: null
      responses:
        '200':
          description: Boot started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/linode/instances/123/boot
  /linode/instances/{linodeId}/clone:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to clone.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-charge: true
      x-linode-grant: add_linodes
      summary: Clone Linode
      description: >
        You can clone your Linode's existing disks or configuration profiles to
        another Linode on your account. In order for this request to complete
        successfully, your user must have the `add_linodes` grant. Cloning to a
        new Linode will incur a charge on your account.

        If cloning to an existing Linode, any actions currently running or
        queued must be completed first before you can clone to it.
      tags:
      - Linode Instances
      operationId: cloneLinodeInstance
      x-linode-cli-action: clone
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:create
      requestBody:
        description: The requested state your Linode will be cloned into.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                region:
                  type: string
                  title: The Region a Linode is deploy to.
                  description: >
                    This is the location where the Linode will be deployed.

                    To view all available regions you can deploy with see
                    `GET /regions`.

                    * Region can only be provided when cloning to a new Linode.
                type:
                  type: string
                  title: The Linode service plan type.
                  description: |
                    A Linode's type determines what resources are available to
                    it, including disk space, memory, and virtual cpus. The
                    amounts available to a specific Linode are returned as
                    `specs` on the Linode object.

                    To view all available Linode `types` you can deploy with
                    see `GET /linode/types`.

                    * Type can only be provided wen cloning to a new Linode.
                linode_id:
                  type: integer
                  title: Target clone's Linode ID.
                  description: >
                    If an existing Linode is to be the target for the clone,
                    the ID of that Linode.
                label:
                  type: string
                  title: Label for the target Linode.
                  description: >
                    The label to assign this Linode when cloning to a new Linode.

                    * Can only be provided when cloning to a new Linode.
                    * Defaults to "linode".
                group:
                  type: string
                  title: The group this Linode is in.
                  description: >
                    A label used to group Linodes for display. Linodes are not
                    required to have a group.
                backups_enabled:
                  type: boolean
                  title: If Backups should be enabled.
                  description: |
                    If this field is set to `true`, the created Linode will
                    automatically be enrolled in the Linode Backup service. This
                    will incur an additional charge. The cost for the Backup
                    service is dependent on the type of Linode deployed.

                    Backup pricing is included in the response from
                    `GET /linodes/types`.

                    * Can only be included when cloning to a new Linode.
                disks:
                  type: array
                  title: List of disk IDs to include.
                  description: >
                    All disks attached to configs will be cloned from the
                    source Linode if not provided.
                configs:
                  type: array
                  title: List of config IDs to include.
                  description: >
                    All configs attached to will be cloned from the source
                    Linode if not provided.
      responses:
        '200':
          description: Clone started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "region": "string",
                "type": "string",
                "linode_id": 0,
                "label": "string",
                "group": "string",
                "backups_enabled": true,
                "disks": [],
                "configs": []
              }' \
              https://api.linode.com/v4/linode/instances/123/clone
  /linode/instances/{linodeId}/configs:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up configuration profiles for.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - Linode Instances
      summary: List Configuration Profiles
      description: |
        Lists configuration profiles associated with a Linode.
      operationId: getLinodeConfigs
      x-linode-cli-action: configs-list
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: >
            Returns an array of configuration profiles associated with this Linode.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/LinodeConfig'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/configs
    post:
      tags:
      - Linode Instances
      summary: Create Configuration Profile
      description: >
        Adds a new configuration profile to a Linode.
      operationId: addLinodeConfig
      x-linode-cli-action: config-create
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: >
          The parameters to set when creating the configuration profile.

          This determines which kernel, devices, how much memory, etc. a Linode boots with.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinodeConfig'
      responses:
        '200':
          description: |
            A configuration profile was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "kernel": "linode/latest-64bit",
                "comments": "This is my main Config",
                "memory_limit": 2048,
                "root_device_ro": false,
                "run_level": "default",
                "virt_mode": "paravirt",
                "helpers": {
                  "updatedb_disabled": true,
                  "distro": true,
                  "modules_dep": true,
                  "network": true,
                  "devtmpfs_automount": false
                },
                "label": "My Config",
                "devices": {
                  "sda": {
                    "disk_id": 123456,
                    "volume_id": null
                  },
                  "sdb": {
                    "disk_id": 123457,
                    "volume_id": null
                  }
                }
              }' \
              https://api.linode.com/v4/linode/instances/123/configs
  /linode/instances/{linodeId}/configs/{configId}:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode whose configuration profile to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: configId
      in: path
      description: The ID of the configuration profile to look up.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    get:
      tags:
      - Linode Instances
      x-linode-grant: read_only
      summary: View Configuration Profile
      description: >
        Returns information about a specific configuration profile.
      operationId: getLinodeConfig
      x-linode-cli-action: config-view
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: A configuration profile object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/configs/23456
    put:
      x-linode-grant: read_write
      summary: Update Configuration Profile
      description: >
        Updates the parameters of a single configuration profile.
      tags:
      - Linode Instances
      operationId: updateLinodeConfig
      x-linode-cli-action: config-update
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The configuration profile parameters to modify.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinodeConfig'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "kernel": "linode/latest-64bit",
                "comments": "This is my main Config",
                "memory_limit": 2048,
                "root_device_ro": false,
                "run_level": "default",
                "virt_mode": "paravirt",
                "helpers": {
                  "updatedb_disabled": true,
                  "distro": true,
                  "modules_dep": true,
                  "network": true,
                  "devtmpfs_automount": false
                },
                "label": "My Config",
                "devices": {
                  "sda": {
                    "disk_id": 123456,
                    "volume_id": null
                  },
                  "sdb": {
                    "disk_id": 123457,
                    "volume_id": null
                  }
                }
              }' \
              https://api.linode.com/v4/linode/instances/123/configs/23456
      responses:
        '200':
          description: Configuration profile successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Delete Configuration Profile
      description: >
        Deletes the specified configuration profile from the specified Linode.
      x-linode-grant: read_write
      tags:
      - Linode Instances
      operationId: deleteLinodeConfig
      x-linode-cli-action: config-delete
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: >
            Configuration profile successfully deleted.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/linode/instances/123/configs/23456
  /linode/instances/{linodeId}/disks:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - Linode Instances
      summary: List Disks
      description: >
        View Disk information for disks associated with this Linode.
      operationId: getLinodeDisks
      x-linode-cli-action: disk-list
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: Returns a paginated list of disks associated with this Linode.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/disks
    post:
      tags:
      - Linode Instances
      summary: Create Disk
      description: >
        Adds a new disk to a Linode. You can optionally create a disk
        from an image (see `GET /images` for a list of available public images,
        or use one of your own), and optionally provide a StackScript to deploy
        with this Disk.
      operationId: addLinodeDisk
      x-linode-cli-action: disk-create
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: >
          The parameters to set when creating the disk.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskRequest'
      responses:
        '200':
          description: Disk created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "Debian 9 Disk",
                "image": "linode/debian9",
                "authorized_keys": [
                  "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
                ],
                "root_pass": "aComplexP@ssword",
              }' \
              https://api.linode.com/v4/linode/instances/123/disks
  /linode/instances/{linodeId}/disks/{diskId}:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: diskId
      in: path
      description: ID of the Disk to look up.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      tags:
      - Linode Instances
      summary: View Disk
      description: >
        View Disk information for a disk associated with this Linode.
      operationId: getLinodeDisk
      x-linode-cli-action: disk-view
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: Returns a single Disk object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/disks/25674
    put:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Update Disk
      description: >
        This allows you to update a Disk that you have permission to `read_write`.
      operationId: updateDisk
      x-linode-cli-action: disk-update
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: >
          Updates the parameters of a single Disk.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disk'
      responses:
        '200':
          description: The updated Disk.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "Debian 9 Disk"
              }' \
              https://api.linode.com/v4/linode/instances/123/disks/25674
    delete:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Delete Disk
      description: |
        Deletes a Disk you have permission to `read_write`. Deleting a Disk is a
        destructive process and cannot be undone.
      operationId: deleteDisk
      x-linode-cli-action: disk-delete
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: Delete successful
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/linode/instances/123/disks/25674
  /linode/instances/{linodeId}/disks/{diskId}/password:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: diskId
      in: path
      description: ID of the Disk to look up.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Reset Disk Root Password
      description: >
        This endpoint allows you to reset the password of a disk you have
        permission to `read_write`.
      operationId: resetDiskPassword
      x-linode-cli-action: disk-reset-password
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The new password.
        required: true
        content:
          application/json:
            schema:
              required:
              - password
              properties:
                password:
                  type: string
                  title: The root password for the Disk.
                  description: >
                    The new root password for the OS installed on this Disk.

                    The password must contain at least two of these four
                    character classes:

                      * lowercase letters
                      * uppercase letters
                      * numbers
                      * punctuation
                  minLength: 6
                  maxLength: 128
                  example: another@complex^Password123
      responses:
        '200':
          description: Returns a single Disk object.
          content:
            application/json:
              schema:
               type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "password": "another@complex^Password123"
              }' \
              https://api.linode.com/v4/linode/instances/123/disks/25674/password
  /linode/instances/{linodeId}/disks/{diskId}/resize:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: diskId
      in: path
      description: ID of the Disk to look up.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Resize Disk
      description: >
        This endpoint allows you to resize a disk you have
        permission to `read_write`.

        The Linode this Disk is attached to must be shut down for resizing to
        take effect.

        If you are resizing the Disk to a smaller size, it cannot be made smaller
        than what is required by the total size of the files current on the Disk.
      operationId: resizeDisk
      x-linode-cli-action: disk-resize
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The new size of the Disk.
        required: true
        content:
          application/json:
            schema:
              required:
              - password
              properties:
                size:
                  type: string
                  title: The requested size of the Disk.
                  description: >
                    The desired size of the disk, in MB.

                    The Linode this Disk is attached to must be shut down for
                    resizing to take effect.
                  minimum: 1
                  example: 2048
      responses:
        '200':
          description: Returns a single Disk object.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "size": 2048
              }' \
              https://api.linode.com/v4/linode/instances/123/disks/25674/resize
  /linode/instances/{linodeId}/ips:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      tags:
      - Linode Instances
      summary: List Networking Information
      description: >
        Returns networking information for a single Linode.
      operationId: getLinodeIPs
      x-linode-cli-action: ips
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: Requested Linode's networking configuration.
          content:
            application/json:
              schema:
                properties:
                  ipv4:
                    type: object
                    description: >
                      Information about this Linode's IPv4 addresses
                    readOnly: true
                    properties:
                      public:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPAddress'
                        description: >
                          A list of public IP Address objects belonging to this Linode.
                        readOnly: true
                      private:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPAddressPrivate'
                        description: >
                          A list of private IP Address objects belonging to this Linode.
                        readOnly: true
                      shared:
                        type: array
                        items:
                          type: object
                        description: >
                          A list of IP Address objects that are shared with this Linode
                          (this Linode may bring up the address, but does not own it).
                        readOnly: true
                  ipv6:
                    type: object
                    description: >
                      Information about this Linode's IPv6 addresses.
                    readOnly: true
                    properties:
                      link_local:
                        $ref: '#/components/schemas/IPAddressV6LinkLocal'
                      slaac:
                        $ref: '#/components/schemas/IPAddressV6Slaac'
                      global:
                        type: array
                        items:
                          type: string
                        description: >
                          A list of global pools or ranges this Linode may bring up.
                        readOnly: true
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              https://api.linode.com/v4/linode/instances/123/ips
    post:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Allocate IPv4 Address
      description: >
        Allocate a public or private IPv4 address to a Linode.
        Public IP Addresses, over and above the one included with each Linode,
        incur an additional monthly charge. If you need an additional Public
        IP Address you must request one - please open a ticket.
        One may not add more than one private IPv4 address to a single Linode.
      operationId: addLinodeIP
      x-linode-cli-action: ip-add
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: Information about the address you are creating.
        required: true
        content:
          application/json:
            schema:
              required:
              - type
              - public
              properties:
                type:
                  type: string
                  enum:
                  - ipv4
                  description: >
                    The type of address you are requesting. Right now, only
                    ipv4 addresses may be allocated through this endpoint.
                  example: ipv4
                public:
                  type: boolean
                  description: >
                    Whether to create a public or private IPv4 address.
                  example: true
      responses:
        '200':
          description: IP address was successfully allocated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "type": "ipv4",
                "public": true
              }' \
              https://api.linode.com/v4/linode/instances/123/ips
  /linode/instances/{linodeId}/ips/{address}:
    parameters:
    - name: linodeId
      in: path
      description: The ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: address
      in: path
      description: The IP address to look up.
      required: true
      schema:
        type: string
        format: ip
    x-linode-cli-command: linodes
    get:
      x-linode-grant: read_only
      tags:
      - Linode Instances
      summary: View IP Address
      description: >
        View information about the specified IP address associated
        with the specified Linode.
      operationId: getLinodeIP
      x-linode-cli-action: ip-view
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: A single IP address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141
    put:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Update IP Address
      description: >
        Manage a particular IP Address associated with this Linode.
        Currently only allows setting/resetting reverse DNS.
      operationId: updateLinodeIP
      x-linode-cli-action: ip-update
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The information to update for the IP address.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IPAddress'
              - type: object
              properties:
                rdns:
                  type: string
                  example: linode.com
      responses:
        '200':
          description: The updated IP address record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "rdns": "test.example.org"
              }' \
              https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141
    delete:
      x-linode-grant: read_write
      tags:
      - Linode Instances
      summary: Delete IPv4 Address
      description: >
        Delete a public IPv4 address associated with this Linode. This will
        fail if it is the Linode's last remaining IP address. Private
        IPv4 addresses cannot be removed via this endpoint.
      operationId: removeLinodeIP
      x-linode-cli-action: ip-delete
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: IP address successfully removed.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/linode/instances/123/ips/97.107.143.141
  /linode/kernels:
    x-linode-cli-command: kernels
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - Linode Instances
      summary: List Kernels
      description: |
        Lists available kernels.
      operationId: getKernels
      x-linode-cli-action: list
      responses:
        '200':
          description: Returns a list of kernels.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Kernel'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/kernels
  /linode/kernels/{kernelId}:
    parameters:
    - name: kernelId
      in: path
      description: ID of the kernel to look up.
      required: true
      schema:
        type: string
    x-linode-cli-command: kernels
    get:
      tags:
      - Linode Instances
      summary: View Kernel
      description: >
        Get information about a single kernel.
      operationId: getKernel
      x-linode-cli-action: view
      responses:
        '200':
          description: A single Kernel object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kernel'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/kernels/linode/latest-64bit
  /linode/instances/{linodeId}/mutate:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to mutate.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Upgrade Linode
      description: >
        Linodes created with now-deprecated types are entitled to a free
        upgrade to the next generation. A mutating Linode will be allocated any new
        resources the upgraded type provides, and will be subsequently restarted
        if it was currently running.

        If any actions are currently running or queued, those actions must be
        completed first before you can initiate a mutate.
      tags:
      - Linode Instances
      operationId: mutateLinodeInstance
      x-linode-cli-action: upgrade
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: Mutate started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/linode/instances/123/mutate
  /linode/instances/{linodeId}/reboot:
    parameters:
    - name: linodeId
      in: path
      description: ID of the linode to reboot.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Reboot Linode
      description: >
        Reboots a Linode you have permission to modify. If any actions are currently running or
        queued, those actions must be completed first before you can initiate a reboot.
      tags:
      - Linode Instances
      operationId: rebootLinodeInstance
      x-linode-cli-action: reboot
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: Reboot started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/linode/instances/123/reboot
  /linode/instances/{linodeId}/rebuild:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to rebuild.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Rebuild Linode
      description: >
        This endpoint allows you to rebuild a Linode if you have the `read_write`
        permission for it. If any actions are currently running or queued,
        those actions must be completed first before you can initiate a rebuild.

        A rebuild will first shut down the Linode, delete all disks and configs
        on the Linode, and then deploy a new `image` to the Linode with the given
        attributes. Additionally:

          * Requires an `image` be supplied.
          * Requires a `root_pass` be supplied to use for the root user's account.
          * It is recommended to supply ssh keys for the root user using the
            `authorized_keys` field.
      tags:
      - Linode Instances
      operationId: rebuildLinodeInstance
      x-linode-cli-action: rebuild
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The requested state your Linode will be rebuilt into.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - image
              - root_pass
              allOf:
              - $ref: '#/components/schemas/LinodeRequest'
              properties:
                image:
                  type: string
                root_pass:
                  type: string
      responses:
        '200':
          description: Rebuild started.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Linode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "image": "linode/debian9",
                "root_pass": "aComplexP@ssword",
                "authorized_keys": [
                  "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
                ],
                "booted": true
              }' \
              https://api.linode.com/v4/linode/instances/123/rebuild
  /linode/instances/{linodeId}/rescue:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to rescue.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Boot Linode into Rescue Mode
      description: >
        Rescue Mode is a safe environment for performing many system recovery
        and disk management tasks. Rescue Mode is based on the Finnix recovery
        distribution, a self-contained and bootable Linux distribution. You can
        also use Rescue Mode for tasks other than disaster recovery, such as
        formatting disks to use different filesystems, copying data between
        disks, and downloading files from a disk via SSH and SFTP.

        * Note that "sdh" is reserved and unavailable during rescue.
      tags:
      - Linode Instances
      operationId: rescueLinodeInstance
      x-linode-cli-action: rescue
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: Optional object of devices to be mounted.
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                devices:
                  $ref: '#/components/schemas/RescueDevices'
      responses:
        '200':
          description: Rescue started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "devices": {
                  "sda": {
                    "disk_id": 124458,
                    "volume_id": null
                  },
                  "sdb": {
                    "disk_id": null,
                    "volume_id": null
                  }
                }
              }' \
              https://api.linode.com/v4/linode/instances/123/rescue
  /linode/instances/{linodeId}/resize:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to resize.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Resize Linode
      description: >
        Resizes a Linode you have the `read_write` permission to a different
        type. If any actions are currently running or queued, those actions must
        be completed first before you can initiate a resize. Additionally, the
        following criteria must be met in order to resize a Linode:

          * Any pending free upgrades to the Linode's current type must be performed
          before a resize can occur.
          * The Linode must not have a pending migration.
          * Your account cannot have an outstanding balance.
          * The Linode must not have more disk allocation than the new type allows.
            * In that situation, you must first delete or resize the disk to be smaller.
      tags:
      - Linode Instances
      operationId: resizeLinodeInstance
      x-linode-cli-action: resize
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      requestBody:
        description: The type your current Linode will resize to.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - type
              properties:
                type:
                  $ref: '#/components/schemas/LinodeBase/properties/type'
      responses:
        '200':
          description: Resize started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "type": "g5-standard-2"
              }' \
              https://api.linode.com/v4/linode/instances/123/resize
  /linode/instances/{linodeId}/shutdown:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to shutdown.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: linodes
    post:
      x-linode-grant: read_write
      summary: Shut Down Linode
      description: >
        Shuts down a Linode you have permission to modify. If any actions are currently running or
        queued, those actions must be completed first before you can initiate a shutdown.
      tags:
      - Linode Instances
      operationId: shutdownLinodeInstance
      x-linode-cli-action: shutdown
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_write
      responses:
        '200':
          description: Shutdown started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/linode/instances/123/shutdown
  /linode/instances/{linodeId}/stats:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    get:
      tags:
      - Linode Instances
      summary: View Current Month Statistics
      description: >
        This endpoint returns CPU, IO, IPv4, and IPv6 statistics for your Linode
        for the past 24 hours.
      operationId: getLinodeStats
      x-linode-cli-action: stats
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read_only
      responses:
        '200':
          description: The Linode's stats for the past 24 hours.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeStats'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/stats
  /linode/instances/{linodeId}/stats/{year}/{month}:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: year
      in: path
      description: Numeric value representing the year to look up.
      required: true
      schema:
        type: integer
        format: int32
    - name: month
      in: path
      description: Numeric value representing the month to look up.
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 12
    x-linode-cli-command: linodes
    get:
      tags:
      - Linode Instances
      summary: View Statistics (year/month)
      description: >
        This endpoint returns statistics for a specific month. The year/month
        values must be either a date in the past, or the current month. If the
        current month, statistics will be retrieved for the past 30 days.
      operationId: getLinodeStatsByYearMonth
      x-linode-cli-action: stats-month
      security:
      - personalAccessToken: []
      - oauth:
        - linodes_read_only
      responses:
        '200':
          description: The Linode's statistics for the requested period.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeStats'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/stats/2018/01
  /linode/instances/{linodeId}/volumes:
    parameters:
    - name: linodeId
      in: path
      description: ID of the Linode to look up.
      required: true
      schema:
        type: integer
    x-linode-cli-command: linodes
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - Linode Instances
      summary: List Linode's Volumes
      description: >
        View Block Storage Volumes attached to this Linode.
      operationId: getLinodeVolumes
      x-linode-cli-action: volumes
      security:
      - personalAccessToken: []
      - oauth:
        - linodes:read
      responses:
        '200':
          description: >
            Returns an array of Block Storage Volumes attached to this Linode.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Volume'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/instances/123/volumes
  /linode/stackscripts:
    x-linode-cli-command: stackscripts
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - Linode Stackscripts
      summary: List StackScripts
      description: >
        Returns a list of publicly available StackScripts. If the request is
        authenticated, the list also includes private StackScripts the user has
        permissions to view.
      operationId: getStackScripts
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - stackscripts:read_only
      responses:
        '200':
          description: >
            A list of publicly available StackScripts, including private
            StackScripts owned by the user if the request is authenticated.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/stackscripts
    post:
      x-linode-grant: add_stackscripts
      tags:
      - Linode Stackscripts
      summary: Create StackScript
      description: >
        This endpoint allows you to add a new StackScript to your account.
      operationId: addStackScript
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
         - stackscripts:read_write
      requestBody:
        description: The properties to set for the new StackScript.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackScript'
      responses:
        '200':
          description: StackScript successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "a-stackscript",
                "description": "This StackScript installs and configures MySQL",
                "images": [
                  "linode/debian9",
                  "linode/debian8"
                ],
                "is_public": true,
                "rev_note": "Set up MySQL",
                "script": "#!/bin/bash"
              }' \
              https://api.linode.com/v4/linode/stackscripts
  /linode/stackscripts/{stackscriptId}:
    parameters:
    - name: stackscriptId
      in: path
      description: The ID of the StackScript to look up.
      required: true
      schema:
        type: string
    x-linode-cli-command: stackscripts
    get:
      x-linode-grant: read_only
      tags:
      - Linode Stackscripts
      summary: View StackScript
      description: >
        This endpoint returns all of the information about a specified
        StackScript, including the contents of the script.
      operationId: getStackScript
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - stackscripts:read_only
      responses:
        '200':
          description: A single StackScript.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/stackscripts/1337
    put:
      x-linode-grant: read_write
      tags:
      - Linode Stackscripts
      summary: Update StackScript
      description: >
        This endpoint allows you to modify a StackScript. Setting a
        StackScript to public is a permanent change.
      operationId: updateStackScript
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - stackscripts:read_write
      responses:
        '200':
          description: StackScript was successfully modified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackScript'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "a-stackscript",
                "description": "This StackScript installs and configures MySQL",
                "images": [
                  "linode/debian9",
                  "linode/debian8"
                ],
                "is_public": true,
                "rev_note": "Set up MySQL",
                "script": "#!/bin/bash"
              }' \
              https://api.linode.com/v4/linode/stackscripts/1337
    delete:
      x-linode-grant: read_write
      tags:
      - Linode Stackscripts
      summary: Delete StackScript
      description: >
        This endpoint allows you to permanently delete a specific StackScript.
        You cannot delete a public StackScript.
      operationId: deleteStackScript
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - stackscripts:read_write
      responses:
        '200':
          description: StackScript was deleted.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/linode/stackscripts/1337
  /linode/types:
    x-linode-cli-command: linodes
    get:
      tags:
      - Linode Types
      summary: List Types
      description: >
        Returns collection of Linode types, including pricing and
        specifications for each type. These are used when creating or resizing
        Linodes.
      operationId: getLinodeTypes
      x-linode-cli-action: types
      responses:
        '200':
          description: A collection of Linode types.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/LinodeType'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/types
  /linode/types/{typeId}:
    parameters:
    - name: typeId
      in: path
      description: The ID of the Linode type to look up.
      required: true
      schema:
        type: string
    x-linode-cli-command: linodes
    get:
      tags:
      - Linode Types
      summary: View Type
      description: >
        Returns information about a specific Linode type, including pricing and
        specifications. This is used when creating or resizing a Linode.
      operationId: getLinodeType
      x-linode-cli-action: view
      responses:
        '200':
          description: A single Linode type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinodeType'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/linode/types/g5-standard-2
  /longview/clients:
    x-linode-cli-command: longview
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - longview
      summary: List Longview Clients
      description: >
        Returns a paginated list of Longview Clients you have access
        to.  Longview Clients are used to monitor stats on your servers
        with the help of the Longview Client application.
      operationId: getLongviewClients
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - longview:read_only
      responses:
        '200':
          description: A paginated list of Longview Clients.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/longview/clients
    post:
      x-linode-grant: add_longview
      tags:
      - longview
      summary: Create Longview Client
      description: >
        Create a new Longview Client.  This client will not begin monitoring
        the status of one of your servers until you configure the Longview
        Client application on your server using the returning `install_code`
        and `api_key`.
      operationId: createLongviewClient
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - longview:read_write
      requestBody:
        description: Information about the LongviewClient to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongviewClient'
      responses:
        '200':
          description: Longview Client created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "client789"
              }' \
              https://api.linode.com/v4/longview/clients
  /longview/clients/{clientId}:
    parameters:
    - name: clientId
      in: path
      required: true
      description: The Longview Client ID to access.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: longview
    get:
      x-linode-grant: read_only
      tags:
      - longview
      summary: View Longview Client
      description: >
        Returns a single Longview Client you can access.
      operationId: getLongviewClient
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - longview:read_only
      responses:
        '200':
          description: The requested Longview Client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/longview/clients/789
    put:
      x-linode-grant: read_write
      tags:
      - longview
      summary: Update Longview Client
      description: >
        Updates a Longview Client.  This cannot update how it monitors your
        server - use the Longview Client application on your server for
        monitoring configuration.
      operationId: updateLongviewClient
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - longview:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongviewClient'
      responses:
        '200':
          description: Longview Client updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewClient'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "client789"
              }' \
              https://api.linode.com/v4/longview/clients/789
    delete:
      x-linode-grant: read_write
      tags:
      - longview
      summary: Delete Longview Client
      description: >
        Deletes a Longview Client from your account.  All information stored
        for this client will be lost.  This _does not_ uninstall the Longview
        Client application for your server - you must do that manually.
      operationId: deleteLongviewClient
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - longview:read_write
      responses:
        '200':
          description: Longview Client deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/longview/clients/789
  /longview/subscriptions:
    x-linode-cli-command: longview
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - longview
      summary: List Longview Subscriptions
      description: >
        Returns a paginated list of available Longview Subscriptions. This is
        a public endpoint, and requires no authentication.
      operationId: getLongviewSubscriptions
      x-linode-cli-action: subscriptions
      responses:
        '200':
          description: A paginated list of Longview Subscriptions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/LongviewSubscription'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/longview/subscriptions
  /longview/subscriptions/{subscriptionId}:
    parameters:
    - name: subscriptionId
      in: path
      required: true
      description: The Longview Subscription to look up.
      schema:
        type: string
    x-linode-cli-command: longview
    get:
      tags:
      - longview
      summary: View Longview Subscription
      description: >
        Returns a single LongviewSubscription object.  This is a public
        endpoint and requires no authentication.
      operationId: getLongviewSubscription
      x-linode-cli-action: subscription
      responses:
        '200':
          description: The requested Longview Subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongviewSubscription'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/longview/subscriptions/longview-10
  /managed/contacts:
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
      - managed
      summary: List Managed Contacts
      description: >
        Returns a paginated list of Managed Contacts on your account.
      operationId: getManagedContacts
      x-linode-cli-action: contacts-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of ManagedContacts
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagedContact'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/contacts
    post:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Create Managed Contact
      description: >
        Creates a new Managed Contact.  A Managed Contact is someone Linode
        special forces can contact in the course of attempting to resolve an issue
        with a Managed Service.
      operationId: createManagedContact
      x-linode-cli-action: contact-create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the contact to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedContact'
      responses:
        '200':
          description: Contact created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedContact'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "name": "John Doe",
                "email": "john.doe@example.org",
                "phone": {
                  "primary": "123-456-7890",
                  "secondary": null
                },
                "group": "on-call"
              }' \
              https://api.linode.com/v4/managed/contacts
  /managed/contacts/{contactId}:
    parameters:
    - name: contactId
      in: path
      required: true
      description: The ID of the contact to access.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: View Managed Contact
      description: >
        Returns a single Managed Contact.
      operationId: getManagedContact
      x-linode-cli-action: contact-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: The requested Managed Contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedContact'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/contacts/567
    put:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Update Managed Contact
      description: >
        Updates information about a Managed Contact.
      operationId: updateManagedContact
      x-linode-cli-action: contact-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedContact'
      responses:
        '200':
          description: Contact updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedContact'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "name": "John Doe",
                "email": "john.doe@example.org",
                "phone": {
                  "primary": "123-456-7890",
                  "secondary": null
                },
                "group": "on-call"
              }' \
              https://api.linode.com/v4/managed/contacts/567
    delete:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Delete Managed Contact
      description: >
        Deletes a Managed Contact.
      operationId: deleteManagedContact
      x-linode-cli-action: contact-delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Contact deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/managed/contacts/567
  /managed/credentials:
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
      - managed
      summary: List Managed Credentials
      description: >
        Returns a paginated list of Managed Credentials on your account.
      operationId: getManagedCredentials
      x-linode-cli-action: credentials-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of ManagedCredentials
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagedCredential'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/credentials
    post:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Create Managed Credential
      description: >
        Creates a new Managed Credential.  A Managed Credential is stored securely
        to allow Linode special forces to access your Managed Services and resolve
        issues.
      operationId: createManagedCredential
      x-linode-cli-action: credential-create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the credential to create.
        content:
          application/json:
            schema:
              required:
              - label
              allOf:
              - $ref: '#/components/schemas/ManagedCredential'
              - type: object
                properties:
                  username:
                    type: string
                    minLength: 0
                    maxLength: 5000
                    description: >
                      The username to use when accessing the Managed Service.
                    example: johndoe
                  password:
                    type: string
                    minLength: 0
                    maxLength: 5000
                    description: >
                      The password to use when accessing the Managed Service.
                    example: s3cur3P@ssw0rd
      responses:
        '200':
          description: Credential created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCredential'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "prod-password-1",
                "username": "johndoe",
                "password": "s3cur3P@ssw0rd"
              }' \
              https://api.linode.com/v4/managed/credentials
  /managed/credentials/{credentialId}:
    parameters:
    - name: credentialId
      in: path
      required: true
      description: The ID of the credential to access.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: View Managed Credential
      description: >
        Returns a single Managed Credential.
      operationId: getManagedCredential
      x-linode-cli-action: credential-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: The requested Managed Credential.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCredential'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/credentials/9991
    put:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Update Managed Credential
      description: >
        Updates information about a Managed Credential.
      operationId: updateManagedCredential
      x-linode-cli-action: credential-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCredential'
      responses:
        '200':
          description: Credential updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCredential'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "prod-password-1"
              }' \
              https://api.linode.com/v4/managed/credentials/9991
    delete:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Delete Managed Credential
      description: >
        Deletes a Managed Credential.  Linode special forces will no longer
        have access to this credential when attempting to resolve issues.
      operationId: deleteManagedCredential
      x-linode-cli-action: credential-delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Credential deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/managed/credentials/9991
  /managed/issues:
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
      - managed
      summary: List Managed Issues
      description: >
        Returns a paginated list of recent and ongoing issues detected on your
        Managed Services.
      operationId: getManagedIssues
      x-linode-cli-action: issues
      security:
        - personalAccessToken: []
        - oauth:
            - account:read_only
      responses:
        '200':
          description: >
            A paginated list of open or ongoing Managed Issues.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagedIssue'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/issues
  /managed/issues/{issueId}:
    parameters:
    - name: issueId
      in: path
      required: true
      description: The issue to look up.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: View Managed Issue
      description: >
        Returns a single issue that is impacting or did impact one of your
        Managed Services.
      operationId: getManagedIssue
      x-linode-cli-action: issue
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The requested issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedIssue'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/issues/823
  /managed/linode-settings:
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
      - managed
      summary: List Managed Linode Settings
      description: >
        Returns a paginated list of Managed settings for your Linodes.  There will
        be one entry per Linode on your account.
      operationId: getManagedLinodeSettings
      x-linode-cli-action: linode-settings
      security:
        - personalAccessToken: []
        - oauth:
            - account:read_only
      responses:
        '200':
          description: >
            A paginated list of Managed settings for your Linodes.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagedLinodeSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/linode-settings
  /managed/linode-settings/{linodeId}:
    parameters:
    - name: linodeId
      in: path
      required: true
      description: The Linode ID whose settings we are accessing.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: View Linode's Managed Settings
      description: >
        Returns a single Linode's Managed settings.
      operationId: getManagedLinodeSetting
      x-linode-cli-action: linode-setting
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The requested Linode's Managed settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedLinodeSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/linode-settings/123
    put:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Update Linode's Managed Settings
      description: >
        Updates a single Linode's Managed settings.
      operationId: updateManagedLinodeSetting
      x-linode-cli-action: linode-setting-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The settings to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedLinodeSettings'
      responses:
        '200':
          description: Settings updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedLinodeSettings'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "ssh": {
                  "access": true,
                  "user": "linode",
                  "ip": "12.34.56.789",
                  "port": 22
                }
              }' \
              https://api.linode.com/v4/managed/linode-settings/123
  /managed/services:
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: List Managed Services
      description: >
        Returns a paginated list of Managed Services on your account.  These
        are the services Linode Managed is monitoring and will report and attempt
        to resolve issues with.
      operationId: getManagedServices
      x-linode-cli-action: services-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of Managed Services
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ManagedService'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/services
    post:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Create Managed Service
      description: >
        Creates a new Managed Service.  Linode Managed will being monitoring this
        service and reporting and attempting to resolve any issues.
      operationId: createManagedService
      x-linode-cli-action: service-create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the service to monitor.
        content:
          application/json:
            schema:
              required:
              - label
              allOf:
              - $ref: '#/components/schemas/ManagedService'
      responses:
        '200':
          description: Service created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedService'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "service_type": "URL",
                "label": "prod-1",
                "address": "https://example.org",
                "timeout": 30,
                "body": "it worked",
                "consultation_group": "on-call",
                "notes": "The service name is my-cool-application",
                "credentials": [
                  9991
                ]
              }' \
              https://api.linode.com/v4/managed/services
  /managed/services/{serviceId}:
    parameters:
    - name: serviceId
      in: path
      required: true
      description: The ID of the Managed Service to access.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: View Managed Service
      description: >
        Returns information about a single Managed Service on your account.
      operationId: getManagedService
      x-linode-cli-action: service-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The requested Managed Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedService'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/managed/services/9994
    put:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Update Managed Service
      description: >
        Updates information about a Managed Service.
      operationId: updateManagedService
      x-linode-cli-action: service-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedService'
      responses:
        '200':
          description: Service updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedService'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "service_type": "URL",
                "label": "prod-1",
                "address": "https://example.org",
                "timeout": 30,
                "body": "it worked",
                "consultation_group": "on-call",
                "notes": "The service name is my-cool-application",
                "credentials": [
                  9991
                ]
              }' \
              https://api.linode.com/v4/managed/services/9994
    delete:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Delete Managed Service
      description: >
        Deletes a Managed Service.  This service will no longer be monitored by
        Linode Managed.
      operationId: deleteManagedService
      x-linode-cli-action: service-delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Service deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/managed/services/9994
  /managed/services/{serviceId}/disable:
    parameters:
    - name: serviceId
      in: path
      required: true
      description: The ID of the Managed Service to disable.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Disable Managed Service
      description: >
        Temporarily disables monitoring of a Managed Service.
      operationId: disableManagedService
      x-linode-cli-action: service-disable
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Service disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedService'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/managed/services/9994/disable
  /managed/services/{serviceId}/enable:
    parameters:
    - name: serviceId
      in: path
      required: true
      description: The ID of the Managed Service to enable.
      schema:
        type: integer
        format: int32
    x-linode-cli-command: managed
    get:
      x-linode-grant: unrestricted only
      tags:
      - managed
      summary: Enable Managed Service
      description: >
        Re-enables monitoring of a Managed Service.
      operationId: enableManagedService
      x-linode-cli-action: service-enable
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Service enabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedService'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/managed/services/9994/enable
  /networking/ips:
    description: >
      A collection of IP Addresses on your account.  Excludes private addresses.
    x-linode-cli-command: ips
    get:
      x-linode-grant: read_only
      tags:
      - networking
      summary: List IP Addresses
      description: >
        Returns a paginated list of IP Addresses on your account, excluding
        private addresses.
      operationId: getIPs
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_only
      responses:
        '200':
          description: A paginated list of IP Addresses.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/networking/ips
    post:
      x-linode-grant: read_write
      tags:
      - networking
      summary: Allocate IP Address
      description: >
        Allocates a new IP Address on your account.  Currently, only IPv4
        addresses may be allocated this way.  The Linode you are allocating
        this address for must be allowed to allocate additional addresses -
        please open a support ticket requesting additional addresses before
        attempting allocation.
      operationId: allocateIP
      x-linode-cli-action: add
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_write
        - linodes:read_write
      requestBody:
        description: Information about the address you are creating.
        required: true
        content:
          application/json:
            schema:
              required:
              - type
              - public
              - linode_id
              properties:
                type:
                  type: string
                  enum:
                  - ipv4
                  description: >
                    The type of address you are requesting. Right now, only
                    ipv4 addresses may be allocated through this endpoint.
                  example: ipv4
                public:
                  type: boolean
                  description: >
                    Whether to create a public or private IPv4 address.
                  example: true
                linode_id:
                  type: integer
                  format: int32
                  description: >
                    The ID of a Linode you you have access to that this address
                    will be allocated to.
                  example: 123
      responses:
        '200':
          description: IP Address allocated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "type": "ipv4",
                "public": true,
                "linode_id": 123
              }' \
              https://api.linode.com/v4/networking/ips
  /networking/ips/{address}:
    parameters:
    - name: address
      in: path
      required: true
      description: The address to operate on.
      schema:
        type: string
        format: ip
    x-linode-cli-command: ips
    get:
      x-linode-grant: read_only
      tags:
      - networking
      summary: View IP Address
      description: >
        Returns information about a single IP Address on your account.
      operationId: getIP
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_only
      responses:
        '200':
          description: The requested IP Address.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/networking/ips/97.107.143.141
    put:
      x-linode-grant: read_write
      tags:
      - networking
      summary: Update IP Address RDNS
      description: >
        Sets RDNS on an IP Address.  Forward DNS must already be set up for
        reverse DNS to be applied.  If you set the RDNS to `null` for public
        ipv4 addresses, it will be reset to the default members.linode.com
        RDNS value.
      operationId: updateIP
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_write
      requestBody:
        description: The information to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAddress'
      responses:
        '200':
          description: RDNS set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAddress'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "rdns": "test.example.org"
              }' \
              https://api.linode.com/v4/networking/ips/97.107.143.141
  /networking/ipv4/assign:
    description: >
      Allows redistribution of v4 IP Addresses within a region.  Any number
      of IPs may be assigned in one request, as long as all Linodes end up
      with at least one public and no more than one private IP Address at the
      end of the assignment.
    x-linode-cli-command: ips
    post:
      x-linode-grant: read_write
      tags:
      - networking
      summary: Assign IPs to Linodes
      description: >
        Assign multiple IPs to multiple Linodes in one region.  This allows
        swapping, shuffling, or otherwise reorganizing v4 IP Addresses to your
        Linodes.  When the assignment is finished, all Linodes must end up with
        at least one public ipv4 and no more than one private ipv4.
      operationId: assignIPs
      x-linode-cli-action: assign
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_write
        - linodes:read_write
      requestBody:
        description: >
          Information about what ipv4 address to assign, and to which Linode.
        required: true
        content:
          application/json:
            schema:
              required:
              - region
              - assignments
              properties:
                region:
                  type: string
                  description: >
                    The ID of the region in which these assignments are to take
                    place.  All IPs and Linodes must exist in this region.
                  example: us-east
                assignments:
                  type: array
                  description: >
                    The list of assignments to make.  You must have read_write
                    access to all IPs being assigned and all Linodes being
                    assigned to in order for the assignments to succeed.
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                        format: ip
                        description: >
                          Ths IP Address for this assignment.  Must be a v4
                          address you can access in the region specified.  May
                          be a public or private address.
                        example: 12.34.56.789
                      linode_id:
                        type: integer
                        format: int32
                        description: >
                          The ID of the Linode to assign this address to.  The IP's
                          previous Linode will lose this address, and must end up
                          with at least one public address and no more than one
                          private address once all assignments have been made.
                        example: 123
      responses:
        '200':
          description: All assignments completed successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "region": "us-east",
                "assignments": [
                  {
                    "address": "12.34.56.100",
                    "linode_id": 123
                  },
                  {
                    "address": "23.45.67.200",
                    "linode_id": 234
                  }
                ]
              }' \
              https://api.linode.com/v4/networking/ipv4/assign
  /networking/ipv4/share:
    description: >
      Configure shared IPs.  A shared IP may be brought up on a Linode other
      than the one it lists in its response.  This can be used to allow one
      Linode to begin serving requests should another become unresponsive.
    x-linode-cli-command: ips
    post:
      x-linode-grant: read_write
      tags:
      - networking
      summary: Configure IP Sharing
      description: >
        Configure shared IPs.  A shared IP may be brought up on a Linode other
        than the one it lists in its response.  This can be used to allow one
        Linode to begin serving requests should another become unresponsive.
      operationId: shareIPs
      x-linode-cli-action: share
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_write
        - linodes:read_write
      requestBody:
        description: Information about what IPs to share with which Linode.
        required: true
        content:
          application/json:
            schema:
              required:
              - linode_id
              - ips
              properties:
                linode_id:
                  type: integer
                  format: int32
                  description: >
                    The ID of the Linode that the addresses will be shared with.
                  example: 123
                ips:
                  type: array
                  items:
                    type: string
                    format: ip
                    example: 12.34.56.789
                  description: >
                    A list of IPs that will be shared with this Linode.  When
                    this is finished, the given Linode will be able to bring up
                    these addresses in addition to the Linodes that these
                    addresses belong to.  You must have access to all of these
                    addresses and they must be in the same region as the
                    Linode.
      responses:
        '200':
          description: Sharing configured successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "linode_id": 123,
                "ips": [
                  "12.34.56.789"
                ]
              }' \
              https://api.linode.com/v4/networking/ipv4/share
  /networking/ipv6/pools:
    x-linode-cli-command: ips
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - networking
      summary: List IPv6 Pools
      description: >
        Displays the IPv6 pools on your account.
      operationId: getIPv6Pools
      x-linode-cli-action: v6-pools
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_only
      responses:
        '200':
          description: The IPv6 pools on your account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPv6Pool'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/networking/ipv6/pools
  /networking/ipv6/ranges:
    x-linode-cli-command: ips
    get:
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - networking
      summary: List IPv6 Ranges
      description: >
        Displays the IPv6 ranges on your account.
      operationId: getIPv6Ranges
      x-linode-cli-action: v6-ranges
      security:
      - personalAccessToken: []
      - oauth:
        - ips:read_only
      responses:
        '200':
          description: The IPv6 ranges on your account.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/IPv6Range'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/networking/ipv6/ranges
  /nodebalancers:
    x-linode-cli-command: nodebalancers
    get:
      x-linode-grant: read_only
      tags:
      - nodebalancers
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      summary: List NodeBalancers
      description: >
        Returns a paginated list of NodeBalancers you have access to.
      operationId: getNodeBalancers
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_only
      responses:
        '200':
          description: A paginated list of NodeBalancers.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/NodeBalancer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/nodebalancers
    post:
      x-linode-grant: add_nodebalancers
      tags:
      - nodebalancers
      summary: Create NodeBalancer
      description: >
        Creates a new NodeBalancer in the requested region.  This NodeBalancer
        will not start serving requests until it is configured.
      operationId: createNodeBalancer
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      requestBody:
        description: Information about the NodeBalancer to create.
        required: true
        content:
          application/json:
            schema:
              required:
              - region
              properties:
                region:
                  type: string
                  description: >
                    The ID of the region to create this NodeBalancer in.
                  example: us-east
                label:
                  $ref: '#/components/schemas/NodeBalancer/properties/label'
                client_conn_throttle:
                  $ref: '#/components/schemas/NodeBalancer/properties/client_conn_throttle'
      responses:
        '200':
          description: NodeBalancer created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "region": "us-east",
                "label": "balancer12345",
                "client_conn_throttle": 0
              }' \
              https://api.linode.com/v4/nodebalancers
  /nodebalancers/{nodeBalancerId}:
    parameters:
    - name: nodeBalancerId
      in: path
      description: The ID of the NodeBalancer to access.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: nodebalancers
    get:
      x-linode-grant: read_only
      tags:
      - nodebalancers
      summary: View NodeBalancer
      description: >
        Returns a single NodeBalancer you can access.
      operationId: getNodeBalancer
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_only
      responses:
        '200':
          description: The requested NodeBalancer object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/nodebalancers/12345
    put:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Update NodeBalancer
      description: >
        Update information about a NodeBalancer you can access.
      operationId: updateNodeBalancer
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      requestBody:
        description: The information to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeBalancer'
      responses:
        '200':
          description: NodeBalancer updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancer'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "balancer12345",
                "client_conn_throttle": 0
              }' \
              https://api.linode.com/v4/nodebalancers/12345
    delete:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Delete NodeBalancer
      description: >
        Deletes a NodeBalancer.  This cannot be undone.  Deleting a
        NodeBalancer will also delete all associated configs and nodes,
        although the backend servers represented by the nodes will not
        be changed or removed.  Deleting a NodeBalancer will cause you
        to lose access to the IP Addresses that NodeBalancer was
        assigned.
      operationId: deleteNodeBalancer
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      responses:
        '200':
          description: NodeBalancer deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/nodebalancers/12345
  /nodebalancers/{nodeBalancerId}/configs:
    parameters:
    - name: nodeBalancerId
      in: path
      description: The ID of the NodeBalancer to access.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: nodebalancers
    get:
      x-linode-grant: read_only
      tags:
      - nodebalancers
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      summary: List Configs
      description: >
        Returns a paginated list of NodeBalancerConfigs associated
        with this NodeBalancer.  NodeBalancer configs represent
        individual ports that this NodeBalancer will accept traffic
        on, one config per port.  For example, if you wanted to
        accept standard http traffic, you would need a config listening
        on port 80.
      operationId: getNodeBalancerConfigs
      x-linode-cli-action: configs-list
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_only
      responses:
        '200':
          description: A paginted list of NodeBalancerConfigs
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/NodeBalancerConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/nodebalancers/12345/configs
    post:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Create Config
      description: >
        Creates a new NodeBalancerConfig, which allows the NodeBalancer to
        accept traffic on a new port.  You will need to add NodeBalancerNodes
        to the new config before it can actually serve requests.
      operationId: createaNodeBalancerConfig
      x-linode-cli-action: config-create
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      requestBody:
        description: Information about the port to configure.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeBalancerConfig'
      responses:
        '200':
          description: Config created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancerConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "port": 80,
                "protocol": "http",
                "algorithm": "roundrobin",
                "stickiness": "http_cookie",
                "check": "http_body",
                "check_interval": 90,
                "check_timeout": 10,
                "check_attempts": 3,
                "check_path": "/test",
                "check_body": "it works",
                "check_passive": true,
                "cipher_suite": "recommended"
              }' \
              https://api.linode.com/v4/nodebalancers/12345/configs
  /nodebalancers/{nodeBalancerId}/configs/{configId}:
    parameters:
    - name: nodeBalancerId
      in: path
      description: The ID of the NodeBalancer to access.
      required: true
      schema:
        type: integer
        format: int32
    - name: configId
      in: path
      description: The ID of the config to access.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: nodebalancers
    get:
      x-linode-grant: read_only
      tags:
      - nodebalancers
      summary: View Config
      description: >
        Returns configuration information for a single port of this
        NodeBalancer.
      operationId: getNodeBalancerConfig
      x-linode-cli-action: config-view
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_only
      responses:
        '200':
          description: The requested NodeBalancer config.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancerConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567
    put:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Update Config
      description: >
        Update the configuration for a single port on a NodeBalancer.
      operationId: updateNodeBalancerConfig
      x-linode-cli-action: config-update
      security:
      - personlAccessToken: []
      - oauth:
        - nodebalancers:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeBalancerConfig'
      responses:
        '200':
          description: Config updated successfully.
          content:
            applicaiton/json:
              schema:
                $ref: '#/components/schemas/NodeBalancerConfig'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "port": 80,
                "protocol": "http",
                "algorithm": "roundrobin",
                "stickiness": "http_cookie",
                "check": "http_body",
                "check_interval": 90,
                "check_timeout": 10,
                "check_attempts": 3,
                "check_path": "/test",
                "check_body": "it works",
                "check_passive": true,
                "cipher_suite": "recommended"
              }' \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567
    delete:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Delete Config
      description: >
        Deletes the configuration for a port of this NodeBalancer.  This
        cannot be undone.  Once completed, this NodeBalancer will no longer
        respond to requests on the given port.  This also deletes all
        associated NodeBalancerNodes, but the Linodes they were routing
        traffic to are unchanged and not removed.
      operationId: deleteNodeBalancerConfig
      x-linode-cli-action: config-delete
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      responses:
        '200':
          description: NodeBalancerConfig deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567
  /nodebalancers/{nodeBalancerId}/configs/{configId}/nodes:
    parameters:
    - name: nodeBalancerId
      in: path
      description: The ID of the NodeBalancer to access.
      required: true
      schema:
        type: integer
        format: int32
    - name: configId
      in: path
      description: The ID of the NodeBalancer config to access.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: nodebalancers
    get:
      x-linode-grant: read_only
      tags:
      - nodebalancers
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      summary: List Nodes
      description: >
        Returns a paginated list of NodeBalancer nodes associated with
        this config.  These are the backends that will be sent traffic
        for this port.
      operationId: getNodeBalancerConfigNodes
      x-linode-cli-action: node-list
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_only
      responses:
        '200':
          description: A paginated list of NodeBalancer nodes.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/NodeBalancerNode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes
    post:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Create Node
      description: >
        Creates a new NodeBalancer node, a backend that can accept
        traffic, for this NodeBalancer config.  Nodes are routed
        requests on the configured port based on their status.
      operationId: createNodeBalancerNode
      x-linode-cli-action: node-create
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      requestBody:
        description: Information about the node to create.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NodeBalancerNode'
              required:
              - label
              - address
      responses:
        '200':
          description: Node created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancerNode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "address": "192.168.210.120:80",
                "label": "node54321",
                "weight": 50,
                "mode": "accept"
              }' \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes
  /nodebalancers/{nodeBalancerId}/configs/{configId}/nodes/{nodeId}:
    parameters:
    - name: nodeBalancerId
      in: path
      description: The ID of the NodeBalancer to access.
      required: true
      schema:
        type: integer
        format: int32
    - name: configId
      in: path
      description: The ID of the Config to access
      required: true
      schema:
        type: integer
        format: int32
    - name: nodeId
      in: path
      description: The ID of the Node to access
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: nodebalancers
    get:
      x-linode-grant: read_only
      tags:
      - nodebalancers
      summary: View Node
      description: >
        Returns information about a single node, a backend for this
        NodeBalancer's configured port.
      operationId: getNodeBalancerNode
      x-linode-cli-action: node-view
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      responses:
        '200':
          description: A paginated list of NodeBalancer nodes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancerNode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes/54321
    put:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Update Node
      description: >
        Updates information about a node, a backend for this NodeBalancer's
        configured port.
      operationId: updateNodeBalancerNode
      x-linode-cli-action: node-update
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeBalancerNode'
      responses:
        '200':
          description: Node updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeBalancerNode'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "address": "192.168.210.120:80",
                "label": "node54321",
                "weight": 50,
                "mode": "accept"
              }' \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes/54321
    delete:
      x-linode-grant: read_write
      tags:
      - nodebalancers
      summary: Delete Node
      description: >
        Deletes a node from this config.  Is backend will no longer
        receive traffic for the configured port of this NodeBalancer.
        This does not change or remove the server whose address was
        used in the creation of this node.
      operationId: deleteNodeBalancerConfigNode
      x-linode-cli-action: node-delete
      security:
      - personalAccessToken: []
      - oauth:
        - nodebalancers:read_write
      responses:
        '200':
          description: Node deleted successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/nodebalancers/12345/configs/4567/nodes/54321
  /profile:
    x-linode-cli-command: profile
    get:
      tags:
      - profile
      summary: View Profile
      description: >
        Returns information about the current user.  This can be used to see
        who is acting in applications where more than one token is managed, for
        example in third-party OAuth applications.  This endpoint is always
        accessible, no matter what OAuth scopes the acting token has.
      operationId: getProfile
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth: []
      responses:
        '200':
          description: Profile response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/profile
    put:
      tags:
      - profile
      summary: Update Profile
      description: >
        Update information in your profile.  This option is _not_ available to
        all third-party clients.
      operationId: updateProfile
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: Profile updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "email": "example-user@gmail.com",
                "timezone": null,
                "email_notifications": true,
                "ip_whitelist_enabled": false,
                "lish_auth_method": "keys_only",
                "authorized_keys": null,
                "two_factor_auth": true,
                "restricted": false
              }' \
              https://api.linode.com/v4/profile
  /profile/apps:
    description: >
      Returns information about OAuth Apps you have authorized to access your account.
    x-linode-cli-command: profile
    get:
      parameters:
        - $ref: '#/components/parameters/pageOffset'
        - $ref: '#/components/parameters/pageSize'
      tags:
        - profile
      summary: List Authorized Apps
      description: >
        This is a collection of OAuth apps that you've given access to your account, and
        includes the level of access granted.
      operationId: getProfileApps
      x-linode-cli-action: apps-list
      security:
        - personalAccessToken: []
        - oauth:
            - account:read_only
      responses:
        '200':
          description: |
            A paginated list of apps you've authorized.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AuthorizedApp'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/profile/apps
  /profile/apps/{appId}:
    parameters:
      - name: appId
        in: path
        required: true
        description: The authorized app ID to manage.
        schema:
          type: integer
          format: int32
    x-linode-cli-command: profile
    get:
      tags:
      - profile
      summary: View Authorized App
      description: >
        Returns information about a single app you've authorized to access your
        account.
      operationId: getProfileApp
      x-linode-cli-action: app-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The app requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizedApp'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/profile/apps/123
    delete:
      tags:
      - profile
      summary: Revoke App Access
      description: >
        Expires all tokens and refresh tokens possessed by this app.  This app is no
        longer authorized to access your account.
      operationId: deleteProfileApp
      x-linode-cli-action: app-delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: App's authorization has been revoked.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/profile/apps/123
  /profile/grants:
    x-linode-cli-command: profile
    get:
      tags:
      - profile
      summary: List Grants
      description: >
        This returns a GrantsResponse describing what the acting user has been
        granted access to.  For unrestricted users, this will return a  204 and
        no body because unrestricted users have access to everything without
        grants.  This will not return information about entities you do not have
        access to.  This endpoint is useful when writing third-party OAuth
        applications to see what options you should present to the acting user
        (for example, if they do not have `global.add_linodes`, you might not
        display a button to deploy a new Linode).  Any client may access this
        endpoint, as no OAuth scopes are required.
      operationId: getProfileGrants
      x-linode-cli-action: grants
      security:
      - personalAccessToken: []
      - oauth: []
      responses:
        '200':
          description: GrantsResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantsResponse'
        '204':
          description: >
            This is an unrestricted user, who has no grants.  This user can access
            everything on the account.
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/profile/grants
  /profile/tfa-disable:
    x-linode-cli-command: profile
    post:
      tags:
      - profile
      summary: Disable Two Factor Authentication
      description: >
        Disabled Two Factor Authentication for your user.  Once successful,
        login attempts from untrusted computers will only require a password
        before being successful.  This is less secure, and is discouraged.
      operationId: tfaDisable
      x-linode-cli-action: tfa-disable
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: TFA disabled.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/profile/tfa-disable
  /profile/tfa-enable:
    x-linode-cli-command: profile
    post:
      tags:
      - profile
      summary: Create Two Factor Secret
      description: >
        Generates a Two Factor secret for your user.  TFA will
        not be enabled until you have successfully confirmed the code you
        were given with the `tfa-enable-confirm` endpoint (see below).  Once
        enabled, login from untrusted computers will be required to provide
        a TFA code before they are successful.
      operationId: tfaEnable
      x-linode-cli-action: tfa-enable
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Two Factor secret generated
          content:
            application/json:
              schema:
                properties:
                  secret:
                    type: string
                    description: >
                      Your two-factor secret.  This is used to generate
                      time-based two factor codes required for login. Doing
                      this will be required to confirm TFA an actually enable it.
                    example: 5FXX6KLACOC33GTC
                  expiry:
                    type: string
                    format: date-time
                    description: >
                      When this Two Factor secret expires.
                    example: 2018-03-01T00:01:01
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/profile/tfa-enable
  /profile/tfa-enable-confirm:
    x-linode-cli-command: profile
    post:
      tags:
      - profile
      summary: Confirm/Enable Two Factor Authentication
      description: >
        Confirms that you can successfully generate Two Factor codes and
        enables TFA on your account.  Once this is complete, login attempts
        from untrusted computers will be required to provide a Two Factor code
        before they are successful.
      operationId: tfaConfirm
      x-linode-cli-action: tfa-confirm
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The Two Factor code you generated with your Two Factor secret.
        required: true
        content:
          application/json:
            schema:
              properties:
                tfa_code:
                  type: string
                  description: >
                    The Two Factor code you generated with your Two Factor secret.
                    These codes are time-based, so be sure it is current.
                  example: "213456"
      responses:
        '200':
          description: TFA enabled successfully
          content:
            application/json:
              schema:
                properties:
                  scratch:
                    type: string
                    description: >
                      A one-use code that can be used in place of your Two Factor
                      code, in case you are unable to generate one.  Keep this in
                      a safe place to avoid being locked out of your account.
                    example: sample two factor scratch
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "tfa_code": "213456"
              }' \
              https://api.linode.com/v4/profile/tfa-enable-confirm
  /profile/tokens:
    x-linode-cli-command: profile
    description: >
      A collection of Personal Access Tokens you've created.
    get:
      tags:
      - profile
      summary: List Personal Access Tokens
      description: >
        Returns a paginated list of Personal Access Tokens currently active for
        your user.
      operationId: getPersonalAccessTokens
      x-linode-cli-action: tokens-list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: A paginated list of active tokens.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/PersonalAccessToken'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/profile/tokens
    post:
      tags:
      - profile
      summary: Create Personal Access Token
      description: >
        Creates a new Personal Access Token for your user.  The raw token will
        be returned in the response, but will never be returned again afterward
        so be sure to take note of it.  You may create a token with _at most_
        the scopes of your current token.  The created token will be able to
        access your account until the given expiry, or until it is revoked.
      operationId: createPersonalAccessToken
      x-linode-cli-action: token-create
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Information about the requested token.
        required: true
        content:
          application/json:
            schema:
              required:
              - label
              properties:
                scopes:
                  type: string
                  format: oauth-scope
                  description: >
                    The scopes to create the token with.  These cannot be changed
                    after creation, and may not exceed the scopes of the acting token.
                    If omitted, the new token will have the same scopes as the acting
                    token.
                  example: '*'
                expiry:
                  type: string
                  format: date-time
                  description: >
                    When this token should be valid until.  If omitted, the new token
                    will be valid until it is manually revoked.
                  example: null
                label:
                  $ref: '#/components/schemas/PersonalAccessToken/properties/label'
      responses:
        '200':
          description: Token created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "scopes": "*",
                "expiry": "2018-01-01T13:46:32",
                "label": "linode-cli"
              }' \
              https://api.linode.com/v4/profile/tokens
  /profile/tokens/{tokenId}:
    description: View or revoke a single token.
    parameters:
    - name: tokenId
      in: path
      description: The ID of the token to access.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: profile
    get:
      tags:
      - profile
      summary: View Personal Access Token
      description: >
        Returns a single Personal Access Token.
      operationId: getPersonalAccessToken
      x-linode-cli-action: token-view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: The requested token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/profile/tokens/123
    put:
      tags:
      - profile
      summary: Update Personal Access Token
      description: >
        Updates a Personal Access Token's label.
      operationId: updatePersonalAccessToken
      x-linode-cli-action: token-update
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: The fields to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalAccessToken'
      responses:
        '200':
          description: Token updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccessToken'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "linode-cli"
              }' \
              https://api.linode.com/v4/profile/tokens/123
    delete:
      tags:
      - profile
      summary: Revoke Personal Access Token
      description: >
        Immediately revokes a Personal Access Token.  The token will be invalidated
        immediately, and requests using that token will fail with a 401.  It _is_
        possible to revoke access to the token making the request to revoke a token,
        but keep in mind that doing so could lose you access to the api and require
        you to create a new token through some other means.
      operationId: deletePersonalAccessToken
      x-linode-cli-action: token-delete
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      responses:
        '200':
          description: Token revoked successfully.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/profile/tokens/123
  /regions:
    x-linode-cli-command: regions
    get:
      tags:
      - regions
      summary: List Regions
      description: |
        Lists the regions available for Linode services. Not all services are guaranteed to be
        available in all regions.
      operationId: getRegions
      x-linode-cli-action: list
      responses:
        '200':
          description: Returns a list of Regions.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Region'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/regions
  /regions/{regionId}:
    x-linode-cli-command: regions
    parameters:
    - name: regionId
      in: path
      description: ID of the Region to look up.
      required: true
      schema:
        type: string
    get:
      tags:
      - regions
      summary: View Region
      description: >
        Get information about a single Region.
      operationId: getRegion
      x-linode-cli-action: view
      responses:
        '200':
          description: A single Region object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/regions/us-east
  /support/tickets:
    x-linode-cli-command: tickets
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - support
      summary: List Support Tickets
      description: >
        This endpoint returns a collection of Support Tickets on your
        account. Support Tickets can be both tickets you open with Linode
        for support, as well as tickets generated by Linode and regarding
        your account.

        This collection includes all Support Tickets generated on your account,
        with open tickets returned first.
      operationId: getTickets
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a paginated list of SupportTicket objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SupportTicket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/support/tickets
    post:
      x-linode-grant: read_write
      tags:
      - support
      summary: Create Support Ticket
      description: >
        Create a Support Ticket.

        Only one of the ID attributes (`linode_id`, `domain_id`, etc) can be set
        on a single Support Ticket.
      operationId: createTicket
      x-linode-cli-action: open
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Create a Support Ticket.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportTicketRequest'
      responses:
        '200':
          description: Support Ticket created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "description": "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?",
                "linode_id": 123,
                "summary": "Having trouble resetting root password on my Linode"
              }' \
              https://api.linode.com/v4/support/tickets
  /support/tickets/{ticketId}:
    parameters:
    - name: ticketId
      in: path
      description: The ID of the Support Ticket.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: tickets
    get:
      x-linode-grant: read_only
      tags:
      - support
      summary: View Support Ticket
      description: >
        This endpoint returns a Support Ticket under your account.
      operationId: getTicket
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a SupportTicket object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicket'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/support/tickets/11223344
  /support/tickets/{ticketId}/attachments:
    parameters:
    - name: ticketId
      in: path
      description: The ID of the Support Ticket.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: tickets
    post:
      x-linode-grant: read_write
      tags:
      - support
      summary: Create Ticket Attachment
      description: >
        This endpoint allows you to add a file attachment to an existing Support
        Ticket on your account. File attachments are used to assist our
        Support team in resolving your Support Ticket. Examples of attachments
        are screen shots and text files that provide additional information.
      operationId: createTicketAttachment
      x-linode-cli-action: upload-attachment
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Add an attachment.
        required: true
        content:
          multipart/form-data:
            schema:
              required:
              - file
              properties:
                file:
                  type: string
                  description: >
                    The local, absolute path to the file you want to attach to
                    your Support Ticket.
                  example: '/Users/LinodeGuy/pictures/screen_shot.jpg'
      responses:
        '200':
          description: Attachment created.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST ' \
              -F file=/Users/LinodeGuy/pictures/screen_shot.jpg \
              https://api.linode.com/v4/support/tickets/11223344/attachments
  /support/tickets/{ticketId}/replies:
    parameters:
    - name: ticketId
      in: path
      description: The ID of the Support Ticket.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: tickets
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - support
      summary: List Replies
      description: >
        This endpoint returns a collection of replies to a singular Support
        Ticket on your account.
      operationId: getTicketReplies
      x-linode-cli-action: replies
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_only
      responses:
        '200':
          description: Returns a paginated list of SupportTicketReply objects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationEnvelope'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/SupportTicketReply'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/support/tickets/11223344/replies
    post:
      x-linode-grant: read_write
      tags:
      - support
      summary: Create Reply
      description: >
        This endpoint allows you to add a reply to an existing Support Ticket.
      operationId: createTicketReply
      x-linode-cli-action: reply
      security:
      - personalAccessToken: []
      - oauth:
        - account:read_write
      requestBody:
        description: Add a reply.
        required: true
        content:
          application/json:
            schema:
              required:
              - description
              properties:
                description:
                  type: string
                  description: >
                    The content of your reply.
                  minLength: 1
                  maxLength: 65535
                  example: >
                    Thank you for your help. I was able to figure out what the
                    problem was and I successfully reset my password. You guys are
                    the best!
      responses:
        '200':
          description: Reply created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportTicketReply'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "description": "Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!"
              }' \
              https://api.linode.com/v4/support/tickets/11223344/replies
  /volumes:
    x-linode-cli-command: volumes
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      summary: List Volumes
      description: >
        Returns a paginated list of Volumes you have permission to view.
      tags:
      - volumes
      operationId: getVolumes
      x-linode-cli-action: list
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_only
      responses:
        '200':
          description: Returns a list of all Volumes on your account.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginationEnvelope'
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Volume'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/volumes
    post:
      x-linode-charge: true
      x-linode-grant: add_volumes
      summary: Create Volume
      description: >
        This endpoint allows you to create a new Volume on your account. In order
        for this to complete successfully, your user must have the `add_volumes`
        grant. Creating a new Volume will start accruing additional charges
        on your account.

        Volume service may not be available in all regions. See `GET /regions`
        for a list of available regions you deploy your Volume in.
      tags:
      - volumes
      operationId: createVolume
      x-linode-cli-action: create
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
      requestBody:
        description: The requested initial state of a new Volume.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/Volume'
              - type: object
                properties:
                  region:
                    $ref: '#/components/schemas/Region/properties/id'
      responses:
        '200':
          description: >
            Creating Volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "label": "my-volume",
                "size": 20,
                "region": "us-east",
                "linode_id": 12346
              }' \
              https://api.linode.com/v4/volumes
  /volumes/{volumeId}:
    parameters:
    - name: volumeId
      in: path
      description: ID of the Volume to look up.
      required: true
      schema:
        type: integer
    x-linode-cli-command: volumes
    get:
      x-linode-grant: read_only
      parameters:
      - $ref: '#/components/parameters/pageOffset'
      - $ref: '#/components/parameters/pageSize'
      tags:
      - volumes
      summary: View Volume
      description: >
        Get information about a single Volume.
      operationId: getVolume
      x-linode-cli-action: view
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_only
      responses:
        '200':
          description: Returns a single Volume object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          links:
            attach:
              $ref: '#/components/links/attachVolume'
            clone:
              $ref: '#/components/links/cloneVolume'
            detach:
              $ref: '#/components/links/detachVolume'
            resize:
              $ref: '#/components/links/resizeVolume'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Authorization: Bearer $TOKEN" \
              https://api.linode.com/v4/volumes/12345
    put:
      x-linode-grant: read_write
      tags:
      - volumes
      summary: Update Volume
      description: >
        This allows you to update a Volume that you have permission to `read_write`.
      operationId: updateVolume
      x-linode-cli-action: update
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
      requestBody:
        description: >
          If any updated field fails to pass validation, the Volume will not be
          updated.
        required: true
        content:
          application/json:
            schema:
               allOf:
                - $ref: '#/components/schemas/Volume'
                - type: object
                  properties:
                    region:
                      allOf:
                      - $ref: '#/components/schemas/Volume/properties/region'
                      readOnly: true
                    size:
                      allOf:
                      - $ref: '#/components/schemas/Volume/properties/size'
                      readOnly: true
                    linode_id:
                      allOf:
                      - $ref: '#/components/schemas/Volume/properties/linode_id'
                      readOnly: true
      responses:
        '200':
          description: The updated Volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "my-volume",
                "size": 20,
                "region": "us-east",
                "linode_id": 12346
              }' \
              https://api.linode.com/v4/volumes/12345
    delete:
      x-linode-grant: read_write
      tags:
      - volumes
      summary: Delete Volume
      description: |
        Deletes a Volume you have permission to `read_write`. Deleting a Volume
        is a destructive process and cannot be undone. Additionally, deleting
        stops billing for the Volume. You will be billed for time used within
        the billing period the Volume was active.
      operationId: deleteVolume
      x-linode-cli-action: delete
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
      responses:
        '200':
          description: Volume deletion successful.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X DELETE \
              https://api.linode.com/v4/volumes/12345
  /volumes/{volumeId}/attach:
    parameters:
    - name: volumeId
      in: path
      description: ID of the Volume to attach.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: volumes
    post:
      summary: Attach Volume
      description: >
        This endpoint allows you to attach a Volume on your account
        to an existing Linode on your account. In order for this request to
        complete successfully, your user must have `read_only` or `read_write`
        permission to the Volume and `read_write` permission to the Linode.
        Additionally, the Volume and Linode must be located in the same region.
      tags:
      - volumes
      operationId: attachVolume
      x-linode-cli-action: attach
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
        - linodes:read_write
      requestBody:
        description: Volume to attach to a Linode.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - linode
              properties:
                linode_id:
                  allOf:
                  - $ref: '#/components/schemas/Volume/properties/linode_id'
                  readOnly: false
                config_id:
                  $ref: '#/components/schemas/LinodeConfig/properties/id'
      responses:
        '200':
          description: Volume was attached to a Linode.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "linode_id": 12346
              }' \
              https://api.linode.com/v4/volumes/12345/attach
  /volumes/{volumeId}/clone:
    parameters:
    - name: volumeId
      in: path
      description: ID of the Volume to clone.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: volumes
    post:
      x-linode-charge: true
      x-linode-grant: add_volumes
      summary: Clone Volume
      description: >
        This endpoint allows you to create a new Volume on your account. In
        order for this request to complete successfully, your user must have the
        `add_volumes` grant. The new Volume will have the same size and data as
        the source Volume. Creating a new Volume will incur a charge on your
        account.
      tags:
      - volumes
      operationId: cloneVolume
      x-linode-cli-action: clone
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
      requestBody:
        description: The requested state your Volume will be cloned into.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - label
              properties:
                label:
                  $ref: '#/components/schemas/Volume/properties/label'
      responses:
        '200':
          description: Clone started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X PUT -d '{
                "label": "my-volume"
              }' \
              https://api.linode.com/v4/volumes/12345/clone
  /volumes/{volumeId}/detach:
    parameters:
    - name: volumeId
      in: path
      description: ID of the Volume to detach.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: volumes
    post:
      summary: Detach Volume
      description: >
        This endpoint allows you to detach a Volume on your account
        from a Linode on your account. In order for this request to
        complete successfully, your user must have `read_write` access to the
        Volume and `read_write` access to the Linode.
      tags:
      - volumes
      operationId: detachVolume
      x-linode-cli-action: detach
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
        - linodes:read_write
      responses:
        '200':
          description: Volume was detached from a Linode.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST \
              https://api.linode.com/v4/volumes/12345/detach
  /volumes/{volumeId}/resize:
    parameters:
    - name: volumeId
      in: path
      description: ID of the Volume to resize.
      required: true
      schema:
        type: integer
        format: int32
    x-linode-cli-command: volumes
    post:
      x-linode-charge: true
      summary: Resize Volume
      description: >
        This endpoint allows you to resize an existing Volume on your account. In
        order for this request to complete successfully, your user must have the
        `read_write` permissions to the Volume.

        * Volumes can only be resized up.
      tags:
      - volumes
      operationId: resizeVolume
      x-linode-cli-action: resize
      security:
      - personalAccessToken: []
      - oauth:
        - volumes:read_write
      requestBody:
        description: The requested size to increase your Volume to.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - size
              properties:
                size:
                  $ref: '#/components/schemas/Volume/properties/size'
      responses:
        '200':
          description: Volume resize started.
          content:
            application/json:
              schema:
                type: object
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-code-samples:
      - lang: Shell
        source: >
          curl -H "Content-Type: application/json" \
              -H "Authorization: Bearer $TOKEN" \
              -X POST -d '{
                "size": 30
              }' \
              https://api.linode.com/v4/volumes/12345/resize
components:
  securitySchemes:
    personalAccessToken:
      type: http
      description: |
        A Personal Access Token is an OAuth 2.0 Access Token that you can generate for your own
        personal use through the [Linode Cloud Manager](https://cloud.linode.com/profile/tokens).

        All scopes defined for the `oauth` security model, apply to this security model as well.
      scheme: bearer
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://login.linode.com/oauth/authorize'
          tokenUrl: 'https://login.linode.com/oauth/token'
          scopes:
            'account:read_only': Allows access to GET information about your account.
            'account:read_write': Allows access to all endpoints related to your account.
            'domains:read_only': Allows access to GET Domains on your account.
            'domains:read_write': Allows access to all Domain endpoints.
            'events:read_only': Allows access to GET your Events.
            'events:read_write': Allows access to all endpoints related to your Events.
            'images:read_only': Allows access to GET your images.
            'images:read_write': Allows access to all endpoints related to your images.
            'ips:read_only': Allows access to GET your ips.
            'ips:read_write': Allows access to all endpoints related to your ips.
            'linodes:read_only': Allow access to GET Linodes on your account
            'linodes:read_write': Allow access to all endpoints related to your Linodes.
            'longview:read_only': Allows access to GET your Longview clients.
            'longview:read_write': Allows access to all endpoints related to your Longview clients.
            'nodebalancers:read_only': Allows access to GET NodeBalancers on your account.
            'nodebalancers:read_write': Allows access to all NodeBalancer endpoints.
            'stackscripts:read_only': Allows access to GET your StackScripts.
            'stackscripts:read_write': Allows access to all endpoints related to you StackScripts.
            'volumes:read_only': Allows access to GET your Volumes.
            'volumes:read_write': Allows access to all endpoints related to your Volumes.
  responses:
    ErrorResponse:
      description: TODO
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorObject'
  parameters:
    pageOffset:
      name: page
      in: query
      description: The page of a collection to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The number of items to return per page.
      schema:
        type: integer
        format: int32
        minimum: 25
        maximum: 100
        default: 100
  links:
    bootLinode:
      operationId: bootLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    rebootLinode:
      operationId: rebootLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    shutdownLinode:
      operationId: shutdownLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    updateLinode:
      operationId: updateLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    deleteLinode:
      operationId: deleteLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    rebuildLinode:
      operationId: rebuildLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    mutateLinode:
      operationId: mutateLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    resizeLinode:
      operationId: resizeLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    rescueLinode:
      operationId: rescueLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    cloneLinode:
      operationId: cloneLinodeInstance
      parameters:
        linodeId: '$request.body#/id'
    attachVolume:
      operationId: attachVolume
      parameters:
        volumeID: '$request.body#/id'
    cloneVolume:
      operationId: cloneVolume
      parameters:
        volumeId: '$request.body#/id'
    detachVolume:
      operationId: detachVolume
      parameters:
        volumeId: '$request.body#/id'
    resizeVolume:
      operationId: resizeVolume
      parameters:
        volumeId: '$request.body#/id'
  schemas:
    Account:
      type: object
      description: Account object
      properties:
        address_1:
          type: string
          description: First line of this Account's billing address.
          maxLength: 64
          example: 123 Main Street
        address_2:
          type: string
          description: Second line of this Account's billing address.
          maxLength: 64
          example: Suite A
        balance:
          type: number
          readOnly: true
          description: This Account's balance, in US dollars.
          example: 200
          x-linode-cli-display: 4
        city:
          type: string
          description: The city for this Account's billing address.
          maxLength: 24
          example: Philadelphia
        company:
          type: string
          description: The company name associated with this Account.
          maxLength: 128
          example: Linode LLC
        country:
          type: string
          description: >
            The two-letter country code of this Account's billing address.
          minLength: 2
          maxLength: 2
          example: US
        email:
          type: string
          description: The email address of the person associated with this Account.
          maxLength: 128
          example: john.smith@linode.com
          x-linode-cli-display: 3
        first_name:
          type: string
          description: The first name of the person associated with this Account.
          maxLength: 50
          example: John
          x-linode-cli-display: 1
        last_name:
          type: string
          description: The last name of the person associated with this Account.
          maxLength: 50
          example: Smith
          x-linode-cli-display: 2
        phone:
          type: string
          description: The phone number associated with this Account.
          maxLength: 32
          example: 215-555-1212
        state:
          type: string
          description: >
            If billing address is in the United States, this is the State
            portion of the Account's billing address. If the address is outside
            the US, this is the Province associated with the Account's billing
            address.
          maxLength: 24
          example: Pennsylvania
        tax_id:
          type: string
          description: >
            Your tax identification, for tax calculations in some countries.
            If you do not live in a country that collects tax, this should be null.
          maxLength: 100
          example: ATU99999999
        zip:
          type: string
          description: The zip code of this Account's billing address.
          maxLength: 16
          example: 19102
    AccountSettings:
      type: object
      description: Account Settings object
      properties:
        managed:
          type: boolean
          readOnly: true
          description: >
            Our 24/7 incident response service. This robust, multi-homed
            monitoring system distributes monitoring checks to ensure that your
            servers remain online and available at all times. Linode Managed can
            monitor any service or software stack reachable over TCP or HTTP.
            Once you add a service to Linode Managed, we'll monitor it for
            connectivity, response, and total request time. This guide shows
            you how to start monitoring your services with Linode Managed.
          example: true
          x-linode-cli-display: 3
        longview_subscription:
          type: string
          description: >
            The Longview Pro tier you are currently subscribed to. The value must
            be null or an id from `GET /longview/subscriptions`.
          example: longview-30
          x-linode-cli-display: 2
        network_helper:
          type: boolean
          description: >
            Enables network helper by default across all users by default for
            new Linodes or Linode Configs.
          example: false
          x-linode-cli-display: 1
    AuthorizedApp:
      description: >
        An application you have authorized access to your account through OAuth.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This authorization's ID, used for revoking access.
          example: 123
          readOnly: true
          x-linode-cli-display: 1
        label:
          type: string
          description: >
            The name of the application you've authorized.
          example: example-app
          readOnly: true
          x-linode-cli-display: 2
        thumbnail_url:
          type: string
          format: url
          description: >
            The URL at which this app's thumbnail may be accessed.
          example: null
          readOnly: true
        scopes:
          type: string
          format: oauth-scopes
          description: >
            The OAuth scopes this app was authorized with.  This defines what parts of your
            account the app is allowed to access.
          example: linodes:read_only
          readOnly: true
          x-linode-cli-display: 3
        created:
          type: string
          format: date-time
          description: When this app was authorized.
          example: '2018-01-01T00:01:01'
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
        expiry:
          type: string
          format: date-time
          description: >
            When this app's access token expires.  Please note that apps may still have active
            refresh tokens after this time passes.
          example: '2018-01-15T00:01:01'
          readOnly: true
          x-linode-cli-display: 6
        website:
          type: string
          format: url
          description: >
            The website where you can get more information about this app.
          example: example.org
          readOnly: true
          x-linode-cli-display: 4
    Backup:
      type: object
      description: >
        An object representing a Backup or snapshot for a Linode with Backup service
        enabled.
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          description: The unique ID of this Backup.
          example: 123456
          x-linode-cli-display: 1
        type:
          type: string
          enum:
          - auto
          - snapshot
          readOnly: true
          description: >
            This indicates whether the Backup is an automatic Backup, or a
            manual snapshot taken by the user at a specific point in time.
          example: snapshot
          x-linode-cli-display: 3
        status:
          type: string
          enum:
          - paused
          - pending
          - running
          - needsPostProcessing
          - successful
          - failed
          - userAborted
          readOnly: true
          description: The current state of a specific Backup.
          example: successful
          x-linode-cli-display: 2
          x-linode-cli-color:
            successful: green
            failed: red
            userAborted: f
            default_: yellow
        created:
          type: string
          format: date-time
          readOnly: true
          description: The date the Backup was taken.
          example: '2018-01-15T00:01:01'
          x-linode-cli-display: 4
        updated:
          type: string
          format: date-time
          readOnly: true
          description: The date the Backup was most recently updated.
          example: '2018-01-15T00:01:01'
        finished:
          type: string
          format: date-time
          readOnly: true
          description: The date the Backup completed.
          example: '2018-01-15T00:01:01'
        label:
          type: string
          description: A label for Backups that are of type snapshot
          example: Webserver-Backup-2018
          x-linode-cli-display: 5
        configs:
          type: array
          items:
            type: string
            example: My Debian 9 Config
          readOnly: true
          description: >
            A list of the labels of the configuration profiles that are part
            of the Backup.
        disks:
          type: array
          items:
            type: object
            properties:
              size:
                type: integer
                format: int32
                example: 9001
              filesystem:
                $ref: '#/components/schemas/Disk/properties/filesystem'
              label:
                type: string
                example: My Debian 9 Disk
          readOnly: true
          description: >
            A list of the disks that are part of the Backup.
    CreditCard:
      type: object
      description: >
        An object representing the credit card information you have on file with
        Linode to make payments against your account.
      required:
      - card_number
      - expiry_month
      - expiry_year
      properties:
        card_number:
          type: string
          description: Your credit card number. No spaces or dashes allowed.
          minLength: 16
          maxLength: 16
          example: 4111111111111111
        expiry_month:
          type: integer
          format: int32
          description: >
            A value from 1-12 representing the expiration month of your credit card.

            * 1 = January, 2 = February, 3 = March, etc
          example: 12
        expiry_year:
          type: integer
          format: int32
          description: >
            A four-digit integer representing the expiration month of
            your credit card.

            The combination of `expiry_month` and `expiry_year`
            must result in a month/year combination of the current month or in
            the future. An expiration date set in the past is invalid.
          example: 2020
    Device:
      type: object
      description: >
        Device can be either a Disk or Volume identified by `disk_id` or
        `volume_id`. Only one type per slot allowed.

        * sda: The device mapped to /dev/sda. Can be null.
        * sdb: The device mapped to /dev/sdb. Can be null.
        * sdc: The device mapped to /dev/sdc. Can be null.
        * sdd: The device mapped to /dev/sdd. Can be null.
        * sde: The device mapped to /dev/sde. Unavailable in `fullvirt` virt_mode.
        * sdf: The device mapped to /dev/sdf. Unavailable in `fullvirt` virt_mode.
        * sdg: The device mapped to /dev/sdg. Unavailable in `fullvirt` virt_mode.
        * sdh: The device mapped to /dev/sdh. Unavailable in `fullvirt` virt_mode.
      properties:
        disk_id:
          type: integer
          title: The ID of the Disk.
          description: Null if a volume is assigned to this slot.
          example: 124458
        volume_id:
          type: integer
          title: The ID of the Volume.
          description: Null if a disk is assigned to this slot.
          example: null
    Devices:
      allOf:
      - $ref: '#/components/schemas/RescueDevices'
      properties:
        sdh:
          $ref: '#/components/schemas/Device'
    Disk:
      type: object
      properties:
        id:
          type: integer
          title: The ID of this Disk.
          description: >
            This Disk's ID which must be provided for all
            operations impacting this Disk.
          example: 25674
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          title: Label for the Disk.
          description: >
            The Disk's label is for display purposes only.
          example: Debian 9 Disk
          minLength: 1
          maxLength: 48
          x-linode-cli-display: 2
        status:
          type: string
          description: >
            A brief description of this Disk's current state. This field may change without
            direct action from you - for instance, if the status is "not ready," the next time you
            request the same Disk object it may be "ready."  All statuses except for
            "ready" are transitory. A Disk in one of these statuses will
            transition to another status when it has completed this transitory action.
          example: ready
          readOnly: true
          enum:
          - ready
          - not ready
          - deleting
          x-linode-cli-display: 3
          x-linode-cli-color:
            ready: green
            not ready: red
            default_: yellow
        size:
          x-linode-filterable: true
          type: integer
          format: int32
          readOnly: true
          title: The size of the Disk in MB.
          example: 48640
          x-linode-cli-display: 4
        filesystem:
          type: string
          title: The filesystem on the Disk.
          readOnly: true
          description: >
            The Disk filesystem can be one of:

            * raw - No filesystem, just a raw binary stream
            * swap - Linux swap area
            * ext3 - The ext3 journaling filesystem for Linux
            * ext4 - The ext4 journaling filesystem for Linux
            * initrd - initrd (uncompressed initrd, ext2, max 32 MB)
          example: ext4
          enum:
          - raw
          - swap
          - ext3
          - ext4
          - initrd
          x-linode-cli-display: 5
        created:
          type: string
          format: date-time
          description: When this Linode was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Linode was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
    DiskRequest:
      type: object
      description: Disk object request.
      required:
      - size
      - label
      properties:
        size:
          $ref: '#/components/schemas/Disk/properties/size'
        label:
          $ref: '#/components/schemas/Disk/properties/label'
        filesystem:
          $ref: '#/components/schemas/Disk/properties/filesystem'
        read_only:
          type: boolean
          description: >
            If true, this Disk is read-only.
          example: false
        image:
          type: string
          title: An Image identifier.
          description: >
            An image id to deploy the disk from. Official Linode images start with
            `linode/ `, while your images start with `private`.

            See `/images` for more information on the images available for you to use.
          example: linode/debian9
        authorized_keys:
          type: array
          items:
            type: string
          title: A list of public SSH keys.
          writeOnly: true
          example:
          - ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer
          description: >
            This is an optional list of public SSH keys that will be automatically appended
            to the root user's `~/.ssh/authorized_keys` file.
        root_pass:
          type: string
          format: password
          title: Set the root user's password.
          writeOnly: true
          example: aComplexP@ssword
          description: |
            This will set the root user's password on the newly created Linode.

            The root password must conform to the following constraints:

              * May only use alphanumerics, punctuation, spaces, and tabs
              * Must contain at least two of the following characters classes:
                * Upper-case letters
                * Lower-case letters
                * Digits
                * Punctuation
          minLength: 6
          maxLength: 128
          pattern: ^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[!"#$%&'()*+,-.\/:;<=>?@\[\]^_`{|}~\\]))|((?=.*[A-Z])(?=.*[!"#$%&'()*+,-.\/:;<=>?@\[\]^_`{|}~\\]))|((?=.*[0-9])(?=.*[!"#$%&'()*+,-.\/:;<=>?@\[\]^_`{|}~\\])))
        stackscript_id:
          type: integer
          title: The ID of a StackScript to deploy.
          example: 10079
          description: |
            A StackScript ID that will cause the referenced StackScript to be run during
            deployment of this Linode. A compatible `image` is required to use a
            StackScript. To get a list of available StackScript and their permitted images
            see `GET /stackscripts`.

            You may only deploy from a StackScript that you own or that is listed as
            `public`.

            This field cannot be used when deploying from a backup or a user made image.
        stackscript_data:
          type: object
          title: Optional user-defined field data for this StackScript.
          example:
            gh_username: linode
          description: |
            This field is required only if the StackScript being deployed requires input
            data from the user for successful completion.
            See `GET /linode/stackscript/{stackScriptId}` for more details.

            This field is required to be valid JSON.
    Domain:
      type: object
      description: >
        A domain zonefile in our DNS system.  You must own the domain name and
        tell your registrar to use Linode's nameservers in order for a domain
        in our system to be treated as authoritative.
      required:
      - id
      properties:
        id:
          type: integer
          format: int32
          description: This Domain's unique ID
          example: 1234
          readOnly: true
          x-linode-cli-display: 1
        type:
          type: string
          enum:
          - master
          - slave
          description: >
            If this Domain represents the authoritative source of information for
            the domain it describes, or if it is a read-only copy of a master
            (also called a slave).
          example: master
          x-linode-cli-display: 3
        domain:
          type: string
          pattern: ([a-zA-Z0-9-_]+\.)+([a-zA-Z]{2,3}\.)?([a-zA-Z]{2,16}|XN--[a-zA-Z0-9]+)
          description: >
            The domain this Domain represents.  These must be unique in our
            system, you cannot have two Domains representing the same domain.
          example: example.org
          x-linode-filterable: true
          x-linode-cli-display: 2
        group:
          type: string
          description: >
            The group this Domain belongs to.  This is for display purposes
            only.
          example: null
          minLength: 1
          maxLength: 50
          x-linode-filterable: true
        status:
          type: string
          enum:
          - disabled
          - active
          - edit_mode
          - has_errors
          description: >
            Used to control whether this domain is currently being rendered.
          example: active
          x-linode-cli-display: 4
          x-linode-cli-color:
            active: green
            disabled: yellow
            edit_mode: yellow
            default_: red
        description:
          type: string
          minLength: 1
          maxLength: 255
          description: |
            A description for this domain.  This is for display purposes only.
          example: null
        soa_email:
          type: string
          format: email
          description: >
            Start of Authority email address.  This is required for master
            domains.
          example: admin@example.org
          x-linode-cli-display: 5
        retry_sec:
          type: integer
          format: int32
          description: >
            The interval at which a failed refresh should be retried, in
            seconds.  Valid values are 300, 3600, 7200, 14400, 28800, 57600,
            86400, 172800, 345600, 604800, 1209600, and 2419200 - any other
            value will be rounded to the nearest valid value.
          example: 300
        master_ips:
          type: array
          items:
            type: string
            format: ip
          description: >
            The IP addresses representing the master DNS for this domain.
          example: []
        axfr_ips:
          type: array
          items:
            type: string
            format: ip
          description: >
            The list of IPs that may perform a zone transfer for this domain.
            This is potentially dangerous, and should be set to an empty list
            unless you intend to use it.
          example: []
        expire_sec:
          type: integer
          format: int32
          description: >
            The amount of time that may pass before this domain is no longer
            authoritative, in seconds.  Valid values are
            300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600,
            604800, 1209600, and 2419200 - any other value will be rounded to
            the nearest valid value.
          example: 300
        refresh_sec:
          type: integer
          format: int32
          description: >
            The amount of time before this domain should be refreshed, in
            seconds.  Valid values are
            300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600,
            604800, 1209600, and 2419200 - any other value will be rounded to
            the nearest valid value.
          example: 300
        ttl_sec:
          type: integer
          format: int32
          description: >
            "Time to Live" - the amount of time, in seconds, that this domain's
            records may be cached by resolvers or other domain servers.  Valid
            values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800,
            345600, 604800, 1209600, and 2419200 - any other value will be
            rounded to the nearest valid value.
          example: 300
    DomainRecord:
      type: object
      description: >
        A single record on a domain.
      properties:
        id:
          type: integer
          format: int32
          description: This record's unique ID.
          example: 123456
          readOnly: true
          x-linode-cli-display: 1
        type:
          type: string
          enum:
          - A
          - AAAA
          - NS
          - MX
          - CNAME
          - TXT
          - SRV
          - PTR
          - CAA
          description: >
            The type of record this is in the DNS system.  For example, A
            records associate a domain name with an ipv4 address, and AAAA
            records associate a domain name with an ipv6 address.
          example: A
          x-linode-cli-display: 2
        name:
          type: string
          description: >
            The name of this record.  This field's actual usage depends on the
            type of record this represents.  For A and AAAA records, this is
            the subdomain being assocaited with an ip address.
          minLength: 1
          maxLength: 100
          example: test
          x-linode-cli-display: 3
        target:
          type: string
          description: >
            The target for this record.  This field's actual usage depends on
            the type of record this represents.  For A and AAAA records, this
            is the address the named domain should resolve to.
          example: 12.34.56.78
          x-linode-cli-display: 4
        priority:
          type: integer
          format: int32
          minimum: 0
          maximum: 255
          description: >
            The priority of the target host.  Lower values are preferred.
          example: 50
          x-linode-cli-display: 6
        weight:
          type: integer
          format: int32
          description: >
            The relative weight of this record.  Higher values are preferred.
          example: 50
          x-linode-cli-display: 7
        port:
          type: integer
          format: int32
          description: >
            The port this record points to.
          example: 80
        service:
          type: string
          description: >
            The service this record identified.  Only valid for SRV records.
          example: null
        protocol:
          type: string
          description: >
            The protocol this record's service communicates with.  Only valid
            for SRV records.
          example: null
        ttl_sec:
          type: integer
          format: int32
          description: >
            "Time to Live" - the amount of time, in seconds, that this domain's
            records may be cached by resolvers or other domain servers.  Valid
            values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800,
            345600, 604800, 1209600, and 2419200 - any other value will be
            rounded to the nearest valid value.
          example: 604800
          x-linode-cli-display: 5
        tag:
          type: string
          description: >
            The tag portion of a CAA record.  It is invalid to set this on
            other record types.
          example: null
    ErrorObject:
      type: object
      description: >
        An object for describing a single error that occurred during the processing of a request.
      properties:
        reason:
          type: string
          description: >
            What happened to cause this error. In most cases, this can be fixed immediately by
            changing the data you sent in the request, but in some cases you will be instructed to
            open a support ticket or perform some other action before you can complete the request
            successfully.
          example: fieldname must be a valid value
        field:
          type: string
          description: >
            The field in the request that caused this error. This may be a path, separated by
            periods in the case of nested fields. In some cases this may come back as "null" if the
            error is not specific to any single element of the request.
          example: fieldname
    Event:
      type: object
      description: >
        A collection of Event objects. An Event is an action taken against an
        entity related to your Account. For example, booting a Linode would
        create an Event.

        The events returned depends on your grants.
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          description: The unique ID of this Event.
          example: 123456
          x-linode-cli-display: 1
        action:
          type: string
          enum:
          - backups_enable
          - backups_cancel
          - backups_restore
          - community_question_reply
          - credit_card_updated
          - disk_create
          - disk_delete
          - disk_duplicate
          - disk_imagize
          - disk_resize
          - dns_record_create
          - dns_record_delete
          - dns_zone_create
          - dns_zone_delete
          - image_delete
          - linode_addip
          - linode_boot
          - linode_clone
          - linode_create
          - linode_delete
          - linode_deleteip
          - linode_migrate
          - linode_mutate
          - linode_reboot
          - linode_rebuild
          - linode_resize
          - linode_shutdown
          - linode_snapshot
          - longviewclient_create
          - longviewclient_delete
          - managed_disabled
          - managed_enabled
          - managed_service_create
          - managed_service_delete
          - nodebalancer_create
          - nodebalancer_delete
          - nodebalancer_config_create
          - nodebalancer_config_delete
          - password_reset
          - payment_submitted
          - stackscript_create
          - stackscript_delete
          - stackscript_publicize
          - stackscript_revise
          - tfa_disabled
          - tfa_enabled
          - ticket_attachment_upload
          - ticket_create
          - ticket_reply
          - volume_attach
          - volume_clone
          - volume_create
          - volume_delete
          - volume_detach
          - volume_resize
          readOnly: true
          description: >
            The action that caused this Event. New actions may be added in the future.
          example: ticket_create
          x-linode-cli-display: 3
        created:
          type: string
          readOnly: true
          format: date-time
          description: When this Event was created.
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 5
        entity:
          type: object
          readOnly: true
          description: >
            Detailed information about the event's entity, including ID, type,
            label, and URL used to access it.
          x-linode-cli-display: 4
          properties:
            id:
              type: integer
              format: int32
              description: The unique ID for this event's entity.
              example: 11111
            label:
              type: string
              description: >
                The current label of this object. The label may reflect changes
                that occur with this Event.
              example: Problem booting my Linode
            type:
              type: string
              description: >
                The type of entity this Event is related to.
              example: ticket
            url:
              type: string
              description: >
                The URL where you can access the object this Event is for. If
                a relative URL, it is relative to the domain you retrieved the
                Event from.
              example: /v4/support/tickets/11111
        percent_complete:
          type: integer
          format: int32
          readOnly: true
          description: >
            A percentage estimating the amount of time remaining for an Event.
            Returns `null` for notification events.
          example: null
        rate:
          type: string
          readOnly: true
          description: >
              The rate of completion of the Event. Only some Events will return
              percent_complete; for example, migration and resize events.
          example: null
        read:
          type: boolean
          readOnly: true
          description: If this Event has been read.
          example: true
          x-linode-cli-display: 8
        seen:
          type: boolean
          readOnly: true
          description: If this Event has been seen.
          example: true
          x-linode-cli-display: 7
        status:
          type: string
          readOnly: true
          description: The current status of this Event.
          enum:
          - failed
          - finished
          - notification
          - scheduled
          - started
          x-linode-cli-display: 6
          x-linode-cli-color:
            failed: red
            finished: green
            started: yellow
            default_: white
        time_remaining:
          type: integer
          format: int32
          readOnly: true
          description: >
            The estimated time remaining until the completion of this Event.
            Currently, this value is only returned for in-progress events.
          example: null
        username:
          type: string
          readOnly: true
          description: >
            The username of the User who caused the Event.
          example: exampleUser
          x-linode-cli-display: 2
    Grant:
      description: >
        Represents the level of access a restricted user has to a specific
        resource on the account.
      properties:
        id:
          type: integer
          format: int32
          description: >
            The ID of the entity this grant applies to.
          example: 123
        permissions:
          type: string
          enum:
          - null
          - read_only
          - read_write
          description: >
            The level of access this user has to this entity.  If null, this
            user has no access.
          example: read_only
        label:
          type: string
          description: >
            The current label of the entity this grant applies to, for display
            purposes.
          example: example-entity
          readOnly: true
    GrantsResponse:
      description: >
        A structure representing all grants a restricted user has on the
        account.  Not available for unrestricted users, as they have access to
        everything without grants.  If retrieved from the `/profile/grants`
        endpoint, entities to which a user has no access will be omitted.
      properties:
        global:
          type: object
          description: >
            A structure containing the account-level grants a user has.
          properties:
            add_linodes:
              type: boolean
              description: If true, this user may create Linodes.
              example: true
            add_longview:
              type: boolean
              description: If true, this user may create Longview clients.
              example: true
            longview_subscription:
              type: boolean
              description: If true, this user may manage the account's Longview subscription.
              example: true
            account_access:
              type: string
              enum:
              - null
              - read_only
              - read_write
              description: >
                The level of access this user has to account-level actions,
                like billing information.  A restricted user will never be able
                to manage users.
              example: read_only
            cancel_account:
              type: boolean
              description: If true, this user may cancel the entire account.
              example: false
            add_domains:
              type: boolean
              description: If true, this user may add Domains.
              example: true
            add_stackscripts:
              type: boolean
              description: If true, this user may add StackScripts.
              example: true
            add_nodebalancers:
              type: boolean
              description: If true, this user may add NodeBalancers.
              example: true
            add_images:
              type: boolean
              description: If true, this user may add Images.
              example: true
            add_volumes:
              type: boolean
              description: If true, this user may add Volumes.
              example: true
        linode:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to Linodes on this account.
            There will be one entry per Linode on the account.
        domain:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to Domains on this account.
            There will be one entry per Domain on the account.
        nodebalancer:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to NodeBalancers on this
            account.  There will be one entry per NodeBalancer on the account.
        image:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to Images on this account.
            There will be one entry per Image on the account.
        longview:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to Longview Clients on this
            account.  There will be one entry per Longview Client on the
            account.
        stackscript:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to StackScripts on this
            account.  There will be one entry per StackScript on the account.
        volume:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
          description: >
            The grants this user has pertaining to Volumes on this account.
            There will be one entry per Volume on the account.
    ImagePrivate:
      type: object
      description: Private Image object
      properties:
        id:
          type: string
          description: The unique ID of this Image.
          example: private/67848373
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: >
            A short description of the Image. Labels cannot contain
            special characters.
          example: My gold-master image
          x-linode-cli-display: 2
        created:
          type: string
          format: date-time
          description: When this Image was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        created_by:
          type: string
          description: >
            The name of the user who created this Image.
          example: somename
          readOnly: true
        deprecated:
          x-linode-filterable: true
          type: boolean
          description: >
            Whether or not this Image is deprecated. Will only be true for
            deprecated public Images.
          example: false
          readOnly: true
        description:
          type: string
          description: An optional detailed description of this Image.
          example: The detailed description of my Image.
          x-linode-cli-display: 4
          x-linode-cli-color:
            None: black
            default_: white
        is_public:
          x-linode-filterable: true
          description: True if the Image is public.
          type: boolean
          example: false
          readOnly: true
          x-linode-cli-display: 5
        size:
          x-linode-filterable: true
          type: integer
          format: int32
          description: >
            The minimum size this Image needs to deploy. Size is in MB.
          example: 2500
          readOnly: true
          x-linode-cli-display: 6
        type:
          type: string
          description: >
            How the image was created. Manual images can be created at any time.
            Automatic images are created automatically from a deleted Linode.
          enum:
          - manual
          - automatic
          example: manual
          readOnly: true
        vendor:
          x-linode-filterable: true
          type: string
          description: >
            The upstream distribution vendor. Consistent between releases of a
            distro. `None` for private images.
          example: null
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            None: black
            default_: white
    ImagePublic:
      type: object
      description: Public Image object
      properties:
        id:
          type: string
          description: The unique ID of this Image.
          example: linode/ubuntu17.10
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: >
            A short description of the Image.
          example: Ubuntu 17.10
          x-linode-cli-display: 2
        created:
          type: string
          format: date-time
          description: When this Image was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        created_by:
          type: string
          description: >
            The name of the user who created this Image, or linode for
            official Images.
          example: linode
          readOnly: true
        deprecated:
          x-linode-filterable: true
          type: boolean
          description: >
            Whether or not this Image is deprecated. Will only be true for
            deprecated public Images.
          example: false
          readOnly: true
        description:
          type: string
          description: An optional detailed description of this Image.
          example: null
          x-linode-cli-display: 4
          x-linode-cli-color:
            None: black
            default_: white
        is_public:
          x-linode-filterable: true
          description: True if the Image is public.
          type: boolean
          example: true
          readOnly: true
          x-linode-cli-display: 5
        size:
          x-linode-filterable: true
          type: integer
          format: int32
          description: >
            The minimum size this Image needs to deploy. Size is in MB.
          example: 2500
          readOnly: true
          x-linode-cli-display: 6
        type:
          type: string
          description: >
            How the Image was created. Manual Images can be created at any time.
            Automatic Images are created automatically from a deleted Linode.
          enum:
          - manual
          - automatic
          example: manual
          readOnly: true
        vendor:
          x-linode-filterable: true
          type: string
          description: >
            The upstream distribution vendor. Consistent between releases of a
            distro. `None` for private Images.
          example: Ubuntu
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            None: black
            default_: white
    Invoice:
      type: object
      description: Account Invoice object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          description: The Invoice's unique ID.
          example: 123
          x-linode-cli-display: 1
        date:
          type: string
          readOnly: true
          format: date-time
          description: When this Invoice was generated.
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 2
        label:
          type: string
          readOnly: true
          description: The Invoice's display label.
          example: Invoice
          x-linode-cli-display: 3
        overdue:
          type: boolean
          readOnly: true
          description: Whether or not the Invoice is overdue for payment.
          example: false
          x-linode-cli-display: 5
          x-linode-cli-color:
            true: red
            default_: white
        paid:
          type: boolean
          readOnly: true
          description: Whether or not the Invoice has been paid.
          example: true
          x-linode-cli-display: 6
          x-linode-cli-color:
            true: green
            default_: yellow
        total:
          type: integer
          readOnly: true
          description: The amount of the Invoice in US Dollars.
          example: 120
          x-linode-cli-display: 4
    InvoiceItem:
      type: object
      description: An InvoiceItem object.
      properties:
        amount:
          type: integer
          readOnly: true
          description: The price, in US dollars, of unitprice multiplied by quantity.
          example: 20
          x-linode-cli-display: 4
        from:
          type: string
          readOnly: true
          format: date-time
          description: The date the Invoice Item started, based on month.
          example: '2018-01-01T00:01:01'
          x-linode-cli-display: 2
        label:
          type: string
          readOnly: true
          description: The invoice item's display label.
          example: Linode 123
          x-linode-cli-display: 1
        quantity:
          type: integer
          format: int32
          readOnly: true
          description: The quantity of this item for the specified Invoice.
          example: 1
        to:
          type: string
          readOnly: true
          format: date-time
          description: The date the Invoice Item ended, based on month.
          example: '2018-01-31T11:59:59'
          x-linode-cli-display: 3
        type:
          type: string
          readOnly: true
          description: The type of service, ether `prepay` or `misc`.
          enum:
          - hourly
          - prepay
          - misc
        unitprice:
          type: integer
          format: int32
          readOnly: true
          description: The monthly service fee, in US Dollars, for this item.
          example: 10
    IPAddress:
      description: >
        An IP address that exists in Linode's system, either v4 or v6.
      properties:
        address:
          type: string
          format: ip
          description: >
            The address.
          example: 97.107.143.141
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          format: ip
          description: >
            The default gateway for this address.
          example: 97.107.143.1
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: >
            The mask that separates host bits from network bits for this address.
          example: 255.255.255.0
          readOnly: true
        prefix:
          type: integer
          format: int32
          description: >
            The number of bits set in the subnet mask.
          example: 24
          readOnly: true
        type:
          type: string
          enum:
          - ipv4
          - ipv6
          - ipv6/pool
          - ipv6/range
          description: >
            The type of address this is.
          example: ipv4
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: >
            Whether this is a public or private IP address.
          example: true
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: >
            The reverse-dns assigned to this address.  For public v4 addresses,
            this will be set to a default value provided by Linode if not
            explicitly set.
          x-linode-cli-display: 4
          example: test.example.org
        linode_id:
          type: integer
          format: int32
          description: >
            The ID of the Linode this address currently belongs to.  For v4
            addresses, this is by default the Linode that this address was
            assigned to on creation, and these addresses my be moved using the
            /networking/ipv4/assign endpoint.  For slaac and link_local
            addresses, this value may not be changed.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: >
            The region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPAddressPrivate:
      description: >
        A Private IPv4 address that exists in Linode's system,.
      properties:
        address:
          type: string
          format: ip
          description: >
            The address.
          example: 192.168.133.234
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          format: ip
          description: >
            The default gateway for this address.
          example: null
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: >
            The mask that separates host bits from network bits for this address.
          example: 255.255.128.0
          readOnly: true
        prefix:
          type: integer
          format: int32
          description: >
            The number of bits set in the subnet mask.
          example: 17
          readOnly: true
        type:
          type: string
          description: >
            The type of address this is.
          example: ipv4
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: >
            Whether this is a public or private IP address.
          example: false
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: >
            The reverse-dns assigned to this address.
          example: null
          x-linode-cli-display: 4
        linode_id:
          type: integer
          format: int32
          description: >
            The ID of the Linode this address currently belongs to.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: >
            The region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPAddressV6LinkLocal:
      description: >
        A Link_Local IPv6 address that exists in Linode's system,.
      properties:
        address:
          type: string
          format: ip
          description: >
            The address.
          example: fe80::f03c:91ff:fe24:3a2f
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          description: >
            The default gateway for this address.
          example: fe80::1
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: >
            The subnet mask.
          example: ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
          readOnly: true
        prefix:
          type: integer
          format: int32
          description: >
            The network prefix.
          example: 64
          readOnly: true
        type:
          type: string
          description: >
            The type of address this is.
          example: ipv6
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: >
            Whether this is a public or private IP address.
          example: false
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: >
            The reverse-dns assigned to this address.
          example: null
          x-linode-cli-display: 4
        linode_id:
          type: integer
          format: int32
          description: >
            The ID of the Linode this address currently belongs to.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: >
            The region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPAddressV6Slaac:
      description: >
        A Slaac IPv6 address that exists in Linode's system,.
      properties:
        address:
          type: string
          format: ip
          description: >
            The address.
          example: 2600:3c03::f03c:91ff:fe24:3a2f
          readOnly: true
          x-linode-cli-display: 1
        gateway:
          type: string
          description: >
            The default gateway for this address.
          example: fe80::1
          readOnly: true
        subnet_mask:
          type: string
          format: ip
          description: >
            The subnet mask.
          example: ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
          readOnly: true
        prefix:
          type: integer
          format: int32
          description: >
            The network prefix.
          example: 64
          readOnly: true
        type:
          type: string
          description: >
            The type of address this is.
          example: ipv6
          readOnly: true
          x-linode-cli-display: 2
        public:
          type: boolean
          description: >
            Whether this is a public or private IP address.
          example: true
          readOnly: true
          x-linode-cli-display: 3
        rdns:
          type: string
          description: >
            The reverse-dns assigned to this address.
          example: null
          x-linode-cli-display: 4
        linode_id:
          type: integer
          format: int32
          description: >
            The ID of the Linode this address currently belongs to.
          example: 123
          readOnly: true
          x-linode-cli-display: 6
        region:
          type: string
          description: >
            The region this address resides in.
          example: us-east
          readOnly: true
          x-linode-filterable: true
          x-linode-cli-display: 5
    IPv6Pool:
      description: >
        An object representing an IPv6 pool.
      properties:
        range:
          type: string
          description: >
            The IPv6 pool
          example: '2600:3c01::02:5000::'
          readOnly: true
          x-linode-cli-display: 1
        region:
          type: string
          description: >
            An IPv6 Pool is a pool of IPv6 addresses that are routed to all of
            your Linodes in a single region. Any Linode you own may bring up any
            address in this pool at any time, with no external configuration
            required.
          example: us-east
          readOnly: true
          x-linode-cli-display: 2
    IPv6Range:
      description: >
        An object representing an IPv6 range.
      properties:
        range:
          type: string
          description: >
            The IPv6 range.
          example: '2600:3c01::02:5000::'
          readOnly: true
          x-linode-cli-display: 1
        region:
          type: string
          description: >
            A range of IPv6 addresses routed to a single Linode in the given
            region. Your Linode is responsible for routing individual addresses
            in the range, or handling traffic for all of the addresses in the
            range.
          example: us-east
          readOnly: true
          x-linode-cli-display: 2
    Kernel:
      type: object
      description: Linux kernel object
      properties:
        id:
          type: string
          description: The unique ID of this kernel.
          example: linode/latest-64bit
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          description: The friendly name of this kernel.
          example: Latest 64 bit (4.15.7-x86_64-linode102)
          readOnly: true
          x-linode-cli-display: 2
        version:
          x-linode-filterable: true
          type: string
          description: Linux kernel version.
          example: 4.15.7
          readOnly: true
          x-linode-cli-display: 3
        kvm:
          x-linode-filterable: true
          type: boolean
          description: If this kernel is suitable for KVM Linodes.
          example: true
          readOnly: true
        xen:
          x-linode-filterable: true
          type: boolean
          description: If this kernel is suitable for Xen Linodes.
          example: false
          readOnly: true
        architecture:
          x-linode-filterable: true
          type: string
          description: The architecture of this kernel.
          enum:
          - x86_64
          - i386
          example: x86_64
          readOnly: true
          x-linode-cli-display: 4
        pvops:
          x-linode-filterable: true
          type: boolean
          description: If this kernel is suitable for paravirtualized operations.
          example: false
          readOnly: true
    Linode:
      allOf:
      - $ref: '#/components/schemas/LinodeBase'
      properties:
        label:
          x-linode-filterable: true
          x-linode-cli-display: 2
        region:
          x-linode-filterable: true
          readOnly: true
          description: >
            This is the location where the Linode was deployed. This cannot be
            changed without opening a support ticket.
          x-linode-cli-display: 4
        image:
          x-linode-filterable: true
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DiskRequest/properties/image'
          x-linode-cli-display: 6
        type:
          readOnly: true
          description: >
            This is the Linode service plan type that this Linode was deployed
            with.

            To change a Linode's type, use
            `POST /linode/instances/{linodeId}/resize`.
          x-linode-cli-display: 5
        group:
          x-linode-filterable: true
          x-linode-cli-display: 2
        id:
          type: integer
          title: The ID of this Linode.
          description: >
            This Linode's ID which must be provided for all operations impacting this Linode.
          example: 123
          readOnly: true
          x-linode-cli-display: 1
        status:
          type: string
          description: >
            A brief description of this Linode's current state.  This field may change without
            direct action from you - for instance, if the status is "booting," the next time you
            request the same Linode object it may be "running."  Most statuses, except for
            "offline" and "running", are transitory. A Linode in one of these statuses will
            transition to another status when it has completed this transitory action.
          example: running
          readOnly: true
          enum:
          - running
          - offline
          - booting
          - rebooting
          - shutting_down
          - provisioning
          - deleting
          - migrating
          - rebuilding
          - cloning
          - restoring
          x-linode-cli-display: 7
          x-linode-cli-color:
              running: green
              offline: red
              default_: yellow
        hypervisor:
          type: string
          description: >
            The virtualization software powering this Linode. Xen is no longer available, and is
            only used by legacy Linodes at this time.
          example: kvm
          readOnly: true
          enum:
          - kvm
          - xen
        created:
          type: string
          format: date-time
          description: When this Linode was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Linode was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
        ipv4:
          type: array
          items:
            type: string
          example:
            - 123.45.67.890
          readOnly: true
          description: |
            This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address
            upon creation, and may get a single private IPv4 address if needed. You may need to
            open a support ticket to get additional IPv4 addresses.

            IPv4 addresses may be reassigned between your Linodes, or shared with other Linodes.
            See the `/networking` endpoints for details.
          x-linode-cli-display: 10
        ipv6:
          type: string
          description: >
            This Linode's IPv6 slaac addresses. This address is specific to a Linode, and may not
            be shared.
          example: 'c001:d00d::1234'
          readOnly: true
        specs:
          type: object
          description: Information about the resources available to this Linode.
          readOnly: true
          properties:
            disk:
              type: integer
              format: int32
              description: >
                The amount of storage space this Linode has access to, in GB. A typical Linode
                will divide this space between a primary disk with an `image` deployed to it, and
                a swap disk, usually 512 MB. This is the default configuration created when
                deploying a Linode with an `image` through `POST /linode/instances`. While this
                configuration is suitable for 99% of use cases, if you need finer control over
                your Linode's disks, see the `/linode/instances/{linodeId}/disks` endpoints.
              example: 30720
              readOnly: true
            memory:
              type: integer
              format: int32
              description: >
                The amount of RAM this Linode has access to, in MB.  Typically a Linode will
                choose to boot with all of its available RAM, but this can be configured in a
                Config Profile, see the `/linode/instances/{linodeId}/configs` endpoints and the
                LinodeConfig object for more information.
              example: 2048
              readOnly: true
            vcpus:
              type: integer
              format: int32
              description: >
                The number of vcpus this Linode has access to.  Typically a Linode will choose to
                boot with all of its available vcpus, but this can be configured in a Config
                Profile, see the `/linode/instances/{linodeId}/configs` endpoints and the
                LinodeConfig object for more information.
              example: 1
              readOnly: true
            transfer:
              type: integer
              format: int32
              description: The amount of network transfer this Linode is allotted each month.
              example: 2000
              readOnly: true
        alerts:
          type: object
          properties:
            cpu:
              type: integer
              description: >
                The percentage of CPU usage required to trigger an alert. If the average CPU
                usage over two hours exceeds this value, we'll send you an alert. If this is set
                to 0, the alert is disabled.
              example: 90
            network_in:
              type: integer
              description: >
                The amount of incoming traffic, in Mbit/s, required to trigger an alert. If the
                average incoming traffic over two hours exceeds this value, we'll send you an
                alert. If this is set to 0, the alert is disabled.
              example: 10
            network_out:
              type: integer
              description: >
                The amount of outbound traffic, in Mbit/s, required to trigger an alert. If the
                average outbound traffic over two hours exceeds this value, we'll send you an
                alert. If this is set to 0, the alert is disabled.
              example: 10
            transfer_quota:
              type: integer
              description: >
                The percentage of network transfer that may be used before an alert is triggered.
                When this value is exceeded, we'll alert you. If this is set to 0, the alert is
                disabled.
              example: 80
            io:
              type: integer
              description: >
                The amount of disk IO operation per second required to trigger an alert. If the
                average disk IO over two hours exceeds this value, we'll send you an alert. If set
                to 0, this alert is disabled.
              example: 10000
        backups:
          type: object
          description: >
            Information about this Linode's backups status. For information about available
            backups, see `GET /linode/instances/{linodeId}/backups`.
          properties:
            enabled:
              type: boolean
              description: >
                If this Linode has the backup service enabled. To enable backups, see
                `POST /linode/instances/{linodeId}/backups/enable`.
              example: true
              readOnly: true
            schedule:
              type: object
              properties:
                day:
                  type: string
                  description: |
                    The day of the week that your Linode's weekly backup is taken. If you do not
                    set this, a day will be chosen for you. Backups are taken every day, but
                    backups taken on this day are preferred when selecting backups to retain for a
                    longer period.

                    If you do not set this manually, then when backups are initially enabled, this
                    may come back as `Scheduling` until the `day` is automatically selected.
                  example: Saturday
                  enum:
                  - Scheduling
                  - Sunday
                  - Monday
                  - Tuesday
                  - Wednesday
                  - Thursday
                  - Friday
                  - Saturday
                window:
                  type: string
                  description: |
                    The window in which your backups will be taken, in UTC. A backups window is a
                    two-hour span of time in which the backup may occur. For example, W10
                    indicates that your backups should be taken between 10:00 and 12:00. If you do
                    not choose a backup window, one will be selected for you automatically.

                    If you do not set this manually, then when backups are initially enabled, this
                    may come back as `Scheduling` until the `window` is automatically selected.
                  example: W22
                  enum:
                  - Scheduling
                  - W0
                  - W2
                  - W4
                  - W8
                  - W10
                  - W12
                  - W14
                  - W16
                  - W18
                  - W20
                  - W22
    LinodeBase:
      type: object
      description: Common properties for Linode Request and Response objects.
      properties:
        label:
          type: string
          title: This Linode's unique label.
          description: >
            The Linode's label is for display purposes only. If no label is provided for a Linode,
            a default will be assigned.

            Linode labels have the following constraints:

            * Must start with an alpha character.
            * Must consist of alphanumeric characters, dashes (`-`), and underscores (`_`).
            * Cannot not have two dash (`-`) or underscores (`_`) in a row.
          example: linode123
          minLength: 3
          maxLength: 32
          pattern: '^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$'
        type:
          $ref: '#/components/schemas/LinodeType/properties/id'
        region:
          $ref: '#/components/schemas/Region/properties/id'
        group:
          type: string
          title: The group this Linode is in.
          description: >
            Some tools will use this property to group Linodes for display. Linodes are not required
            to have a group.
          example: Linode-Group
          maxLength: 50
    LinodeConfig:
      type: object
      required:
      - label
      - devices
      properties:
        id:
          type: integer
          format: int32
          title: The ID of this Config.
          example: 23456
          readOnly: true
        kernel:
          type: string
          title: A kernel ID to boot a Linode with. Defaults to 'linode/latest-64bit'
          example: linode/latest-64bit
        comments:
          type: string
          title: Optional field for arbitrary user comments on this Config.
          example: This is my main Config
        memory_limit:
          type: integer
          title: The maximum RAM the Linode will be given when booting this Config.
          description: >
            Defaults to the total RAM of the Linode.
          example: 2048
        root_device_ro:
          type: boolean
          title: Controls whether or not to mount the root Disk as read-only.
          description: Defaults to false.
          example: false
        run_level:
          type: string
          title: Stes the run level for the Linode boot.
          description: >
            One of:

            * default
            * single (for single user mode)
            * binbash
          enum:
          - default
          - single
          - binbash
          example: default
        virt_mode:
          type: string
          title: Controls the virtualization mode.
          description: >
            One of:

            * paravirt (default)
            * fullvirt
          example: paravirt
        helpers:
          type: object
          title: Helpers enabled when booting to this Linode Config.
          properties:
            updatedb_disabled:
              type: boolean
              title: Disables updatedb cron job to avoid disk thrashing.
              example: true
            distro:
              type: boolean
              title: Helps maintain correct inittab/upstart console device.
              example: true
            modules_dep:
              type: boolean
              title: Creates a modules dependency file for the kernel you run.
              example: true
            network:
              type: boolean
              title: Automatically configure static networking.
              example: true
            devtmpfs_automount:
              type: boolean
              title: Populates the /dev directory early during boot without udev.
              description: Defaults to false
              example: false
        label:
          x-linode-filterable: true
          type: string
          title: Label for the Config.
          description: >
            The Config's label is for display purposes only.
          example: My Config
          minLength: 1
          maxLength: 48
        devices:
          $ref: '#/components/schemas/Devices'
    LinodeRequest:
      type: object
      description: Common properties for creating and rebuilding Linodes.
      properties:
        image:
          $ref: '#/components/schemas/DiskRequest/properties/image'
        root_pass:
          $ref: '#/components/schemas/DiskRequest/properties/root_pass'
        authorized_keys:
          $ref: '#/components/schemas/DiskRequest/properties/authorized_keys'
        stackscript_id:
          $ref: '#/components/schemas/DiskRequest/properties/stackscript_id'
        stackscript_data:
          $ref: '#/components/schemas/DiskRequest/properties/stackscript_data'
        booted:
          type: boolean
          title: If the Linode should start booted.
          writeOnly: true
          description: >
            This field defaults to `true` if the Linode is created with an Image or from a
            Backup.

            If it is deployed from an Image or a Backup and you wish it to remain `offline`
            after deployment, set this to `false`.
    LinodeStats:
      type: object
      description: >
        CPU, IO, IPv4, and IPv6 statistics. Graph data, if available,
        is in "[timestamp, reading]" array format. Timestamp is a UNIX timestamp
        in EST.
      readOnly: true
      properties:
        cpu:
          type: array
          description: >
            Percentage of CPU used.
          items:
            type: array
            items:
              type: number
              example:
              - 1521483600000
              - 0.42
        io:
          type: object
          description: Input/Output statistics.
          properties:
            io:
              type: array
              description: Block/s written.
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 0.19
            swap:
              type: array
              description: Block/s written.
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 0
        netv4:
          type: object
          description: IPv4 statistics.
          properties:
            in:
              type: array
              description: Input stats for IPv4, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 2004.36
            out:
              type: array
              description: Output stats for IPv4, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 3928.91
            private_in:
              type: array
              description: Private IPv4 input statistics, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 0
            private_out:
              type: array
              description: Private IPv4 output statistics, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 5.6
        netv6:
          type: object
          description: IPv6 statistics.
          properties:
            in:
              type: array
              description: Input stats for IPv6, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 0
            out:
              type: array
              description: Output stats for IPv6, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 0
            private_in:
              type: array
              description: Private IPv6 input statistics, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 195.18
            private_out:
              type: array
              description: Private IPv6 output statistics, measured in bits/s (bits/second).
              items:
                type: array
                items:
                  type: number
                  example:
                  - 1521484800000
                  - 5.6
        title:
          type: string
          description: The title for this data set.
          example: linode.com - my-linode (linode123456) - day (5 min avg)
    LinodeType:
      type: object
      description: >
        Returns collection of Linode types, including pricing and specifications
        for each type. These are used when creating or resizing Linodes.
      properties:
        id:
          type: string
          title: The ID representing the Linode type.
          example: g5-standard-2
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          readOnly: true
          title: This Linode Type's label.
          description: >
            The Linode Type's label is for display purposes only.
          example: Linode 4096
          x-linode-cli-display: 2
        disk:
          x-linode-filterable: true
          type: integer
          format: int32
          readOnly: true
          title: Disk space in MB.
          description: >
            The Disk size of the Linode type, in MB.
          example: 49152
          x-linode-cli-display: 4
        class:
          x-linode-filterable: true
          type: string
          readOnly: true
          title: The class of the Linode type.
          description: >
            We currently offer three classes of Linodes:

              * nanode - Our entry-level Linode type.
              * standard - Our flagship Linode type.
              * highmem - A Linode type featuring high memory availability.
          enum:
          - nanode
          - standard
          - himem
          example: standard
          x-linode-cli-display: 3
        price:
          type: object
          readOnly: true
          title: Cost (in US dollars) for this type.
          description: >
            Cost in US dollars, broken down into hourly and monthly charges.
          x-linode-cli-display: 9
          properties:
            hourly:
              type: integer
              title: Cost (in US dollars) per hour.
              example: 0.03
            monthly:
              type: integer
              title: Cost (in US dollars) per month.
              example: 20
        addons:
          type: object
          readOnly: true
          title: Addon services that are available for this Linode type.
          description: >
            A list of optional addon services for Linodes and their associated
            costs.
          properties:
            backups:
              type: object
              readOnly: true
              title: Optional Backups service.
              description: >
                Information about the optional Backup service offered for Linodes.
              properties:
                price:
                  type: object
                  title: Cost of enabling Backups for this Linode type.
                  properties:
                    hourly:
                      type: integer
                      title: Cost per hour.
                      description: >
                        The cost (in US dollars) per hour to add Backups service.
                      example: 0.008
                    monthly:
                      type: integer
                      title: Cost per month.
                      description: >
                        The cost (in US dollars) per month to add Backups service.
                      example: 5
        network_out:
          x-linode-filterable: true
          type: integer
          format: int32
          readOnly: true
          title: Outbound bandwidth allocation.
          description: >
            The Mbits outbound bandwidth allocation.
          example: 1000
          x-linode-cli-display: 7
        memory:
          x-linode-filterable: true
          type: integer
          format: int32
          readOnly: true
          title: RAM
          description: >
            Amount of RAM included in this Linode type.
          example: 4096
          x-linode-cli-display: 5
        transfer:
          x-linode-filterable: true
          type: integer
          format: int32
          readOnly: true
          title: Outbound transfer.
          description: >
            The monthly outbound transfer amount, in MB.
          example: 3000
          x-linode-cli-display: 8
        vcpus:
          x-linode-filterable: true
          type: integer
          format: int32
          readOnly: true
          title: Number of CPU cores.
          description: >
            The number of VCPU cores this Linode type offers.
          example: 2
          x-linode-cli-display: 6
    LongviewClient:
      description: >
        A LongviewClient is a single monitor set up to track statistics about
        one of your servers.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This Client's unique ID.
          example: 789
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          minLength: 3
          maxLength: 32
          pattern: '[a-zA-Z0-9-_]{3,32}'
          description: >
            This Client's unique label.  This is for display purposes only.
          example: client789
          x-linode-cli-display: 2
        api_key:
          type: string
          description: >
            The API key for this Client, used when configuring the Longview
            Client application on your server.
          example: BD1B4B54-D752-A76D-5A9BD8A17F39DB61
          readOnly: true
        install_code:
          type: string
          description: >
            The install code for this Client, used when configuring the Longview
            CLient application on your server.
          example: BD1B5605-BF5E-D385-BA07AD518BE7F321
          readOnly: true
        apps:
          type: object
          description: >
            The apps this Client is monitoring on your server.  This is configured
            when you install the Longview Client application, and is present here
            only for your information.
          readOnly: true
          properties:
            apache:
              type: boolean
              description: >
                If true, the Apache Longview Client module is monitoring Apache on
                your server.
              example: true
              readOnly: true
            nginx:
              type: boolean
              description: >
                If true, the nginx Longview Client module is monitoring nginx on
                your server.
              example: false
              readOnly: true
            mysql:
              type: boolean
              description: >
                If true, the MySQL Longview Client modules is monitoring MySQL on
                your server.
              example: true
              readOnly: true
        created:
          type: string
          format: date-time
          description: >
            When this Longview Client was created.
          example: 2018-01-01T00:01:01
          readOnly: true
          x-linode-cli-display: 3
        updated:
          type: string
          format: date-time
          description: >
            When this Longview Client was last updated.
          example: 2018-01-01T00:01:01
          readOnly: true
    LongviewSubscription:
      description: >
        A Longview Subscriptions represents a tier of Longview service you
        can subscribe to.
      properties:
        id:
          type: string
          description: >
            The unique ID of this subscription tier.
          example: longview-10
          readOnly: true
          x-linode-cli-display: 1
        price:
          type: object
          description: >
            Pricing information about this Longview Subscription tier.
          readOnly: true
          x-linode-cli-display: 4
          properties:
            hourly:
              type: number
              description: >
                The hourly price for this subscription tier, in US Dollars.
              example: 0.06
              readOnly: true
            monthly:
              type: number
              description: >
                The maximum monthly price for this subscription tier, in US
                Dollars.  You will never be charged more than this amount per
                month for this subscription.
              example: 40
              readOnly: true
        label:
          type: string
          description: >
            A display name for this subscription tier.
          example: Longivew Pro 10 pack
          readOnly: true
          x-linode-cli-display: 2
        clients_included:
          type: integer
          format: int32
          description: >
            The number of Longview Clients that may be created with this tier.
          example: 10
          readOnly: true
          x-linode-cli-display: 3
    ManagedContact:
      description: >
        Information about someone Linode's special forces may contact
        in case an issue is detected with a manager service.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This contact's unique ID.
          example: 567
          readOnly: true
          x-linode-cli-display: 1
        name:
          type: string
          minLength: 2
          maxLength: 64
          pattern: '[a-zA-Z0-9-_ ]{2,64}'
          description: >
            The name of this contact
          example: John Doe
          x-linode-cli-display: 2
        email:
          type: string
          format: email
          description: >
            The address to email this contact to alert them of issues.
          example: john.doe@example.org
          x-linode-cli-display: 3
        phone:
          type: object
          description: >
            Information about how to reach this contact by phone.
          x-linode-cli-display: 4
          properties:
            primary:
              type: string
              format: phone
              description: >
                This contact's primary phone number.
              example: 123-456-7890
            secondary:
              type: string
              format: phone
              description: >
                This contact's secondary phone number.
              example: null
        group:
          x-linode-filterable: true
          type: string
          minLength: 2
          maxLength: 50
          description: >
            A grouping for this contact.  This is for display purposes only.
          example: on-call
          x-linode-cli-display: 5
        updated:
          type: string
          format: date-time
          description: >
            When this contact was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
    ManagedCredential:
      description: >
        A credential, stored securely, that allows Linode's special forces
        to access a managed server to respond to issues.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This credential's unique ID.
          example: 9991
          readOnly: true
          x-linode-cli-display: 1
        label:
          type: string
          minLength: 2
          maxLength: 75
          pattern: '[a-zA-Z0-9-_ \.]{2,75}'
          description: >
            The unique label for this credential.  This is for display purposes
            only.
          example: prod-password-1
          x-linode-cli-display: 2
    ManagedIssue:
      description: >
        An issue that was detected with a service Linode is managing.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This issue's unique ID.
          example: 823
          readOnly: true
          x-linode-cli-display: 1
        created:
          type: string
          format: date-time
          description: >
            When this issue was created.  Issues are created in response to issues
            detected with managed services, so this is also when the issue was
            detected.
          example: '2018-01-01T00:01:01'
          readOnly: true
          x-linode-cli-display: 2
        services:
          type: array
          items:
            type: integer
            format: int32
            example: 654
          description: >
            An array of Managed Service IDs that were affected by this issue.
          readOnly: true
          x-linode-cli-display: 3
        entity:
          type: object
          description: >
            The ticket this Managed Issue opened.
          readOnly: true
          x-linode-cli-display: 4
          properties:
            id:
              type: integer
              format: int32
              description: >
                This ticket's ID
              example: 98765
              readOnly: true
            type:
              type: string
              enum:
              - ticket
              description: >
                The type of entity this is.  In this case, it is always a ticket.
              example: ticket
              readOnly: true
            label:
              type: string
              description: >
                The summary for this ticket.
              example: Managed issue opened!
              readOnly: true
            url:
              type: string
              format: url
              description: >
                The relative URL where you can access this ticket.
              example: /support/tickets/98765
              readOnly: true
    ManagedLinodeSettings:
      description: >
        Settings for a specific Linode related to Managed Services.  There is
        one ManagedLinodeSettings object for each Linode on your account.
      properties:
        id:
          type: integer
          format: int32
          description: >
            The ID of the Linode these settings are for.
          example: 123
          readOnly: true
          x-linode-cli-display: 1
        label:
          type: string
          description: >
            The label of the Linode these settings are for.
          example: linode123
          readOnly: true
          x-linode-cli-display: 2
        group:
          type: string
          description: >
            The group of the Linode these settings are for.  This is for display
            purposes only.
          example: linodes
          readOnly: true
          x-linode-cli-display: 3
        ssh:
          type: object
          description: >
            The SSH settings for this Linode.
          x-linode-cli-display: 4
          properties:
            access:
              type: boolean
              description: >
                If true, Linode special forces may access this Linode over
                ssh to respond to issues.
              example: true
            user:
              type: string
              minLength: 0
              maxLength: 32
              description: >
                The user Linode's special forces should use when accessing this
                Linode to respond to an issue.
              example: linode
            ip:
              type: string
              format: ip
              description: >
                The IP Linode special forces should use to access this Linode
                when responding to an issue.
              example: 12.34.56.789
            port:
              type: integer
              format: int32
              minimum: 1
              maximum: 65535
              description: >
                The port Linode special forces should use to access this Linode
                over ssh to respond to an issue.
              example: 22
    ManagedService:
      description: >
        A service that Linode is monitoring as part of your managed services.
        If issues are detected with this service, a ManagedIssue will be opened
        and, optionally, Linode special forces will attempt to resolve the issue.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This service's unique ID.
          example: 9944
          readOnly: true
          x-linode-cli-display: 1
        status:
          type: string
          enum:
          - disabled
          - pending
          - ok
          - problem
          description: >
            The current status of this service.
          example: ok
          readOnly: true
          x-linode-cli-display: 2
          x-linode-cli-color:
            ok: green
            disabled: red
            default_: yellow
        service_type:
          type: string
          enum:
          - URL
          - TCP
          description: >
            How this service is monitored.
          example: URL
          x-linode-cli-display: 3
        label:
          type: string
          minLength: 3
          maxLength: 64
          pattern: '[a-zA-Z0-9-_ \.]{3,64}'
          description: >
            The label for this service.  This is for display purposes only.
          example: prod-1
          x-linode-cli-display: 4
        address:
          type: string
          format: url
          minLength: 3
          description: >
            The URL at which this service is monitored.
          example: https://example.org
          x-linode-cli-display: 5
        timeout:
          type: integer
          format: int32
          minimum: 1
          maximum: 255
          description: >
            How long to wait, in seconds, for a response before considering the
            service to be down.
          example: 30
        body:
          type: string
          minLength: 0
          maxLength: 100
          description: >
            What to expect to find in the response body for the service to be
            considered up.
          example: it worked
        consultation_group:
          type: string
          minLength: 0
          maxLength: 50
          description: >
            The group of ManagedContacts who should be notified or consulted
            with when an issue is detected.
          example: on-call
          x-linode-cli-display: 6
        notes:
          type: string
          description: >
            Any information relevant to the service that Linode special forces
            should know when attempting to resolve issues.
          example: The service name is my-cool-application
        region:
          type: string
          description: >
            The region in which this service is located.  This is required if
            address is a private IP, and may not be set otherwise.
          example: null
        credentials:
          type: array
          items:
            type: integer
            format: int32
            example: 9991
          description: >
            An array of ManagedCredential ids that should be used when attempting to
            resolve issues with this service.
        created:
          type: string
          format: date-time
          description: When this Managed Service was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Managed Service was last updated.
          example: '2018-03-01T00:01:01'
          readOnly: true
    NodeBalancer:
      description: >
        Linode's load balancing solution.  Can handle multiple ports, ssl termination,
        and any number of backends.  NodeBalancer ports are configured with
        NodeBalancerConfigs, and each config is given one or more NodeBalancerNode that
        accepts traffic.  The traffic should be routed to the  NodeBalancer's ip address,
        the NodeBalancer will handle routing individual requests to backends.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This NodeBalancer's unique ID.
          example: 12345
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          minLength: 3
          maxLength: 32
          pattern: '[a-zA-Z0-9-_]{3,32}'
          description: >
            This NodeBalancer's label.  These must be unique on your account.
          example: balancer12345
          x-linode-cli-display: 2
        region:
          x-linode-filterable: true
          type: string
          description: >
            The region where this NodeBalancer is located.  NodeBalancers only
            support backends in the same region as they are.
          example: us-east
          readOnly: true
          x-linode-cli-display: 3
        hostname:
          type: string
          description: >
            This NodeBalancer's hostname, ending with .nodebalancer.linode.com
          example: nb-207-192-68-16.newark.nodebalancer.linode.com
          readOnly: true
          x-linode-cli-display: 4
        ipv4:
          type: string
          format: ip
          description: >
            This NodeBalancer's public IPv4 address.
          example: 12.34.56.78
          readOnly: true
          x-linode-cli-display: 5
        ipv6:
          type: string
          format: ip
          description: >
            This NodeBalancer's public IPv6 address.
          example: null
          readOnly: true
          x-linode-cli-display: 6
        created:
          type: string
          format: date-time
          description: >
            When this NodeBalancer was created.
          example: 2018-01-01T00:01:01
          readOnly: true
        updated:
          type: string
          format: date-time
          description: >
            When this NodeBalancer was last updated.
          example: 2018-03-01T00:01:01
          readOnly: true
        client_conn_throttle:
          type: integer
          format: int32
          minimum: 0
          maximum: 20
          description: >
            Throttle connections per second.  Set to 0 to disable throttling.
          example: 0
          x-linode-cli-display: 6
    NodeBalancerConfig:
      description: >
        A NodeBalancer config represents the configuration of this NodeBalancer
        on a single port.  For example, a NodeBalancer config on port 80 would
        typically represent how this NodeBalancer response to http requests.
        NodeBalaner configs have a list of backends, called "nodes," that they
        forward requests between based on their configuration.
      properties:
        id:
          type: integer
          format: int32
          description: This config's unique ID
          example: 4567
          readOnly: true
          x-linode-cli-display: 1
        port:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          description: >
            The port this config is for.  These values must be unique across configs
            on a single NodeBalancer (you can't have two configs for port 80, for
            example).  While some ports imply some protocols, no enforcement is done
            and you may configure your NodeBalancer however is useful to you (for
            example, while port 443 is generally used for https, you do not need
            ssl configured to have a NodeBalancer listening on port 443).
          example: 80
          x-linode-cli-display: 2
        protocol:
          type: string
          enum:
          - http
          - https
          - tcp
          description: >
            The protocol this port is configured to serve.  If this is set to "https,"
            you must include an ssl_cert and an ssl_key.
          example: http
          x-linode-cli-display: 3
        algorithm:
          type: string
          enum:
          - roundrobin
          - leastconn
          - source
          description: >
            What algorithm this NodeBalancer should use for routing traffic to backends.
          example: roundrobin
          x-linode-cli-display: 4
        stickiness:
          type: string
          enum:
          - none
          - table
          - http_cookie
          description: >
            Controls how session stickiness is handled on this port.  If set to `none,`
            connections will always be assigned a backend based on the algorithm configured.
            If `table,` sessions from the same remote address will be routed to the same
            backend.  For http or https clients, `http_cookie` allows sessions to be
            routed to the same backend based on a cookie set by the NodeBalancer.
          example: http_cookie
          x-linode-cli-display: 5
        check:
          type: string
          enum:
          - none
          - connection
          - http
          - http_body
          description: >
            The type of check to perform against backends to ensure they are serving
            requests.  This is used to determine if backends are up or down.  If `none,`
            no check is performed.  `connection` requires only a connection to the
            backend to succeed.  `http` and `http_body` rely on the backend serving
            http, and that the response returned is expected.
          example: http_body
        check_interval:
          type: integer
          format: int32
          description: >
            How often to check that backends are up and serving requests, in seconds.
          example: 90
        check_timeout:
          type: integer
          format: int32
          minimum: 1
          maximum: 30
          description: >
            How long to wait for a check attempt before considering it failed, in seconds.
          example: 10
        check_attempts:
          type: integer
          format: int32
          minimum: 1
          maximum: 30
          description: >
            How many times to attempt a check before considering a backend to be down.
          example: 3
        check_path:
          type: string
          description: >
            The URL path to check on each backend.  If the backend does not respond
            to this request, it is considered to be down.
          example: /test
        check_body:
          type: string
          description: >
            This value must be present in the response body of the check in order for
            it to pass.  If this value is not present in the response body of a check
            request, the backend is considered to be down.
          example: it works
        check_passive:
          type: boolean
          description: >
            If true, any response from this backend with a 5xx status code will be
            enough for it to be considered unhealthy and taken out of rotation.
          example: true
          x-linode-cli-display: 6
        cipher_suite:
          type: string
          enum:
          - recommended
          - legacy
          description: >
            What ciphers to use for ssl connections served by this NodeBalancer.
            `legacy` is considered insecure and should only be used if necessary.
          example: recommended
          x-linode-cli-display: 7
          x-linode-cli-color:
            legacy: red
            default_: white
        nodebalancer_id:
          type: integer
          format: int32
          description: >
            The ID for the NodeBalancer this config belongs to.
          example: 12345
          readOnly: true
        ssl_commonname:
          type: string
          description: >
            The common name for the SSL certification this port is serving. null
            if this port is not configured to use ssl.
          example: null
          readOnly: true
          x-linode-cli-display: 8
        ssl_fingerprint:
          type: string
          description: >
            The fingerprint for the SSL certification this port is serving.  null
            if this port is not configured to use ssl.
          example: null
          readOnly: true
          x-linode-cli-display: 9
        ssl_cert:
          type: string
          description: >
            The certificate this port is serving.  This is not returned, and if set
            will come back as "<REDACTED>".  Please use the ssl_commonname and
            ssl_fingerprint to identify the certificate.
          example: null
        ssl_key:
          type: string
          description: >
            The private key corresponding to this port's certificate.  This is not
            returned, and will come back as "<REDACTED>" if set.  Please use the
            ssl_commonname and ssl_fingerprint to identify the certificate.
          example: null
        nodes_status:
          type: object
          description: >
            A structure containing information about the health of the backends
            for this port.  This information is updated periodically as checks
            are performed against backends.
          readOnly: true
          x-linode-cli-display: 10
          properties:
            up:
              type: integer
              format: int32
              description: >
                The number of backends considered to be "UP" and healthy, and that
                are serving requests.
              example: 4
              readOnly: true
            down:
              type: integer
              format: int32
              description: >
                The number of backends considered to be "DOWN" and unhealthy.  These
                are not in rotation, and not serving requests.
              example: 0
              readOnly: true
    NodeBalancerNode:
      description: >
        A NodeBalancerNode represents a single backend serving requests for a single
        port of a NodeBalancer.  Nodes are specific to NodeBalancerConfigs, and serve
        traffic over their private IP.  If the same Linode is serving traffic for more
        than one port on the same NodeBalancer, one NodeBalancerNode is required for
        each config (port) it should serve requests on.  For example, if you have
        four backends, and each should response to both http and https requests, you
        will need two NodeBalancerConfigs (port 80 and port 443) and four backends
        each - one for each of the Linodes serving requests for that port.
      properties:
        id:
          type: integer
          format: int32
          description: This node's unique ID.
          example: 54321
          readOnly: true
          x-linode-cli-display: 1
        address:
          type: string
          format: ip
          description: >
            The private IP Address this backend can be reached at. This _must_
            be a private IP address.
          example: 192.168.210.120
          x-linode-cli-display: 3
        label:
          type: string
          minLength: 3
          maxLength: 32
          description: >
            The label for this node.  This is for display purposes only.
          example: node54321
          x-linode-cli-display: 2
        status:
          type: string
          enum:
          - unknown
          - UP
          - DOWN
          description: >
            The current status of this node, based on the configured checks
            of its NodeBalancer Config.
          example: UP
          readOnly: true
          x-linode-cli-display: 4
          x-linode-cli-color:
            UP: green
            unknown: yellow
            DOWN: red
            default_: white
        weight:
          type: integer
          minimum: 1
          maximum: 255
          description: >
            Used when picking a backend to serve a request and is not pinned to
            a single backend yet.  Nodes with a higher weight will receive more
            traffic.
          example: 50
          x-linode-cli-display: 5
        mode:
          type: string
          enum:
          - accept
          - reject
          - drain
          description: >
            If set to `accept,` this backend is accepting traffic.  If set to
            `reject,` this backend will not receive traffic.  If set to `drain,`
            this backend will not receive _new_ traffic, but connections already
            pinned to it will continue to be routed to it.
          example: accept
          x-linode-cli-display: 6
        config_id:
          type: integer
          format: int32
          description: >
            The NodeBalancerConfig ID that this node belongs to.
          example: 4567
          readOnly: true
        nodebalancer_id:
          type: integer
          format: int32
          description: >
            The NodeBalancer ID that this node belongs to.
          example: 12345
          readOnly: true
    Notification:
      type: object
      description: >
        An important, often time-sensitive item related to your account.
      properties:
        entity:
          type: object
          readOnly: true
          description: Detailed information about the Notification.
          properties:
            id:
              type: integer
              format: int32
              description: >
                The unique ID of the notification's entity, based on the entity
                type.
              example: 3456
            label:
              type: string
              description: >
                The current label for this Notification's entity.
              example: Linode not booting.
            type:
              type: string
              description: The type of entity this is related to.
              example: ticket
            url:
              type: string
              description: >
                The URL where you can access the object this Notification is for.
                If a relative URL, it is relative to the domain you retrieved the
                Notification from.
              example: /support/tickets/3456
        label:
          type: string
          description: >
            A short description of this notification.
          example: You have an important ticket open!
          readOnly: true
          x-linode-cli-display: 1
        message:
          type: string
          readOnly: true
          description: A human-readable description of the Notification.
          example: You have an important ticket open!
          x-linode-cli-display: 2
        type:
          type: string
          enum:
          - migration_scheduled
          - migration_pending
          - reboot_scheduled
          - outage
          - payment_due
          - ticket_important
          - ticket_abuse
          - notice
          readOnly: true
          description: The type of Notification this is.
          example: ticket_important
        severity:
          type: string
          enum:
          - minor
          - major
          - critical
          description: >
            The severity of this Notification.  This field can be used to
            decide how prominently to display the Notification, what color
            to make the display text, etc.
          example: major
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            critical: b
            minor: blue
            default_: white
        when:
          type: string
          readOnly: true
          format: date-time
          description: >
            If this notification is of an event that will happen at a fixed,
            future time, this is when the named action will be taken. For
            example, if a Linode is to be migrated in response to a
            Security Advisory, this field will contain around the time the
            Linode will be taken offline for migration.
          example: null
          x-linode-cli-display: 4
          x-linode-cli-color:
            None: black
            default_: white
        until:
          type: string
          format: date-time
          description: >
            If this notification has a duration, this will be the ending time
            for the event or action.  For example, if there is scheduled
            maintenance for one of our systems, `until` would be set to the end
            of the maintenance window.
          example: null
          readOnly: true
          x-linode-cli-display: 5
          x-linode-cli-color:
            None: black
            default_: white
    OAuthClient:
      description: >
        A third-party application registered to Linode that users may log into
        with their Linode account through our authentication server at
        https://login.linode.com.  Using an OAuth Client, a third-party
        developer may be given access to some, or all, of a user's account for
        the purposes of their application.
      properties:
        id:
          type: string
          description: >
            The OAuth Client ID.  This is used to identify the client, and is a
            publicly-known value (it is not a secret).
          example: 2737bf16b39ab5d7b4a1
          readOnly: true
          x-linode-cli-display: 1
        redirect_uri:
          type: string
          format: url
          description: >
            The location a successful login from https://login.linode.com should be
            redirected for this client.  The receiver of this redirect should be
            ready to accept an OAuth exchange code and finish the OAuth exchange.
          example: https://example.org/oauth/callback
          x-linode-cli-display: 5
        label:
          x-linode-filterable: true
          type: string
          minLength: 1
          maxLength: 512
          description: >
            The name of this application.  This will be presented to users when they
            are asked to grant it access to their account.
          example: Example App
          x-linode-cli-display: 2
        status:
          type: string
          enum:
          - active
          - disabled
          - suspended
          description: >
            The status of this application.  `active` by default.
          example: active
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            suspended: red
            default_: white
        secret:
          type: string
          description: >
            The OAuth Client Secret, used in the OAuth exchange.  This is returned
            as `<REDACTED>` except when an OAuth Client is created or its secret
            is reset.  This _is_ a secret, and should not be shared or disclosed
            publicly.
          example: <REDACTED>
          readOnly: true
        thumbnail_url:
          type: string
          format: url
          description: >
            The URL where this client's thumbnail may be viewed, or `null` if this client
            does not have a thumbnail set.
          example: https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail
          readOnly: true
        public:
          x-linode-filterable: true
          type: boolean
          description: >
            If this is a public or private OAuth Client.  Public clients have a slightly
            different authentication workflow than private clients.  See the OAuth spec
            for more details.
          example: false
          readOnly: true
          x-linode-cli-display: 4
    PaginationEnvelope:
      type: object
      description: >
        An envelope for paginated response. When accessing a collection through a GET endpoint, the
        results are wrapped in this envelope which includes metadata about those results.
      required:
      - pages
      - page
      - results
      - data
      properties:
        data:
          type: array
          items:
            type: object
          readOnly: true
        pages:
          type: integer
          format: int32
          readOnly: true
          example: 1
        page:
          type: integer
          format: int32
          readOnly: true
          example: 1
        results:
          type: integer
          format: int32
          readOnly: true
          example: 1
    Payment:
      type: object
      description: Payment object response.
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          description: The unique ID of the payment.
          example: 6291750
          x-linode-cli-display: 1
        date:
          type: string
          readOnly: true
          format: date-time
          description: When the payment was made.
          example: '2018-01-15T00:01:01'
          x-linode-cli-display: 2
        usd:
          type: integer
          readOnly: true
          description: The amount, in US dollars, of the payment.
          example: '120.50'
          x-linode-cli-display: 3
    PaymentRequest:
      type: object
      description: Payment object request.
      required:
      - cvv
      - usd
      properties:
        cvv:
          type: string
          description: >
            CVV (Card Verification Value) of the credit card to be used for
            the payment.
          example: '123'
        usd:
          type: string
          description: >
            The amount, in US Dollars, of the payment.
          example: '120.50'
    PayPal:
      type: object
      required:
      - cancel_url
      - redirect_url
      - usd
      description: >
        An object representing the staging of a payment via PayPal.
      properties:
        cancel_url:
          type: string
          description: The URL to have PayPal redirect to when payment is cancelled.
          example: https://example.org
        redirect_url:
          type: string
          description: The URL to have PayPal redirect to when payment is approved.
          example: https://example.org
        usd:
          type: integer
          description: The amount, in US dollars, of the payment.
          example: '120.50'
    PayPalExecute:
      type: object
      required:
      - payer_id
      - payment_id
      description: >
        An object representing an execution of payment to PayPal to capture the
        funds and credit yoru Linode account.
      properties:
        payer_id:
          type: string
          description: >
            The PayerID returned by PayPal during the transaction authorization
            process.
          example: ABCDEFGHIJKLM
        payment_id:
          type: string
          description: >
            The PaymentID returned from `POST /account/payments/paypal` that has
            been approved with PayPal.
          example: PAY-1234567890ABCDEFGHIJKLMN
    PersonalAccessToken:
      description: >
        A Personal Access Token is a token generated manually to access the API
        without going through an OAuth login.  Personal Access Tokens can have
        scopes just like OAuth tokens do, and are commonly used to give access
        to command-line tools like the Linode CLI, or when writing your own
        integrations.
      properties:
        id:
          type: integer
          format: int32
          description: >
            This token's unique ID, which can be used to revoke it.
          example: 123
          readOnly: true
          x-linode-cli-display: 1
        scopes:
          type: string
          format: oauth-scopes
          description: >
            The scopes this token was created with.  These define what parts of
            the account the token can be used to access.  Many command-line tools,
            such as the Linode CLI, require tokens with access to `*`.  Tokens with
            more restrictive scopes are generally more secure.
          example: '*'
          readOnly: true
          x-linode-cli-display: 3
        created:
          type: string
          format: date-time
          description: >
            The date and time this token was created.
          x-linode-filterable: true
          example: 2018-01-01T00:01:01
          readOnly: true
          x-linode-cli-display: 4
        label:
          type: string
          minLength: 1
          maxLength: 100
          description: >
            This token's label.  This is for display purposes only, but can be used to
            more easily track what you're using each token for.
          x-linode-filterable: true
          example: linode-cli
          x-linode-cli-display: 2
        token:
          type: string
          description: >
            The token used to access the API.  When the token is created, the full token
            is returned here.  Otherwise, only the first 16 characters are returned.
          example: abcdefghijklmnop
          readOnly: true
        expiry:
          type: string
          format: date-time
          description: >
            When this token will expire.  Personal Access Tokens cannot be renewed, so
            after this time the token will be completely unusable and a new token will
            need to be generated.  Tokens may be created with "null" as their expiry
            and will never expire unless revoked.
          x-linode-cli-display: 5
          example: '2018-01-01T13:46:32'
    Profile:
      description: >
        A Profile represents your user in our system.  This is where you can change
        information about your user.  This information is available to any OAuth Client
        regardless of requested scopes, and can be used to populate user information
        in third-party applications.
      properties:
        uid:
          type: integer
          format: int32
          description: >
            Your unique ID in our system.  This value will never change, and can
            safely be used to identify your user.
          example: 1234
          readOnly: true
        username:
          type: string
          description: >
            Your username, used for logging in to our system.
          example: exampleUser
          readOnly: true
          x-linode-cli-display: 1
        email:
          type: string
          format: email
          description: >
            Your email address.  This address will be used for communication with Linode
            as necessary.
          example: example-user@gmail.com
          x-linode-cli-display: 2
        timezone:
          type: string
          description: >
            The timezone you prefer to see times in.  This is not used by the API, and is
            for the benefit of clients only.  All times the API returns are in UTC.
          example: null
        email_notifications:
          type: boolean
          description: >
            If true, you will receive email notifications about account activity.  If false,
            you may still receive business-critical communications through email.
          example: true
        referrals:
          type: object
          description: >
            Information about your status in our referral program.
          readOnly: true
          properties:
            code:
              type: string
              description: >
                Your referral code.  If others use this when signing up for Linode, you will
                receive account credit.
              example: 871be32f49c1411b14f29f618aaf0c14637fb8d3
              readOnly: true
            url:
              type: string
              format: url
              description: >
                Your referral url, used to direct others to sign up for Linode with your referral
                code.
              example: https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3
              readOnly: true
            total:
              type: integer
              format: int32
              description: >
                The number of users who have signed up with your referral code.
              example: 0
              readOnly: true
            completed:
              type: integer
              format: int32
              description: >
                The number of completed signups with your referral code.
              example: 0
              readOnly: true
            pending:
              type: integer
              format: int32
              description: >
                The number of pending signups with your referral code.  You will not receive
                credit for these signups until they are completed.
              example: 0
              readOnly: true
            credit:
              type: integer
              format: int32
              description: >
                The amount of account credit issued to you through the referral
                program, in US Dollars.
              example: 0
              readOnly: true
        ip_whitelist_enabled:
          type: boolean
          description: >
            If true, logins for your user will only be allowed from whitelisted IPs.  See
            `/profile/whitelist` for more information.  This setting is currently deprecated,
            and cannot be enabled.  If you disable this setting, you will not be able to
            re-enable it.
          example: false
        lish_auth_method:
          type: string
          enum:
          - password_keys
          - keys_only
          - disabled
          description: >
            What methods of authentication are allowed when connecting via
            Lish.  "keys_only" is the most secure if you intend to use Lish,
            and "disabled" is recommended if you do not intend to use Lish at
            all.
          example: keys_only
        authorized_keys:
          type: array
          items:
            type: string
            format: ssh-key
          description: >
            The list of SSH Keys authorized to use Lish for your user.  This value is ignored if
            `lish_auth_method` is "disabled."
          example: null
        two_factor_auth:
          type: boolean
          description: >
            If true, logins from untrusted computers will require two-factor
            authentication.  See `/profile/tfa-enable` to enable two-factor
            authentication.
          example: true
          x-linode-cli-display: 4
        restricted:
          type: boolean
          description: >
            If true, your user has restrictions on what can be accessed on your
            account.  To get details on what entities/actions you can
            access/perform, see `/profile/grants`.
          example: false
          x-linode-cli-display: 3
    Region:
      type: object
      description: An area where Linode services are available.
      properties:
        id:
          type: string
          title: The unique ID of this region.
          description: The unique ID of this region.
          example: us-east
          x-linode-cli-display: 1
        country:
          type: string
          title: The country where this region resides.
          description: The country where this region resides.
          example: us
          readOnly: true
          x-linode-cli-display: 2
    RescueDevices:
      type: object
      properties:
        sda:
          $ref: '#/components/schemas/Device'
        sdb:
          $ref: '#/components/schemas/Device'
        sdc:
          $ref: '#/components/schemas/Device'
        sdd:
          $ref: '#/components/schemas/Device'
        sde:
          $ref: '#/components/schemas/Device'
        sdf:
          $ref: '#/components/schemas/Device'
        sdg:
          $ref: '#/components/schemas/Device'
    StackScript:
      description: >
        A StackScript enables you to quickly deploy a
        fully-configured application in an automated manner.
      properties:
        id:
          type: integer
          format: int32
          description: The unique ID of this StackScript.
          example: 1337
          readOnly: true
          x-linode-cli-display: 1
        username:
          type: string
          title: The user who created the StackScript.
          description: >
            The user who created the StackScript.
          example: rmcintosh
          readOnly: true
          x-linode-cli-display: 2
        user_gravatar_id:
          type: string
          title: The author's Gravatar ID
          description: >
            The Gravatar ID for the user who
            created the StackScript, if one is available.
          example: a445b305abda30ebc766bc7fda037c37
          readOnly: true
        label:
          x-linode-filterable: true
          type: string
          title: A label for the StackScript.
          description: >
            The StackScript's label is for display purposes only.
          example: a-stackscript
          minLength: 3
          maxLength: 128
          x-linode-cli-display: 3
        description:
          x-linode-filterable: true
          type: string
          description: >
            A description for the StackScript.
          example: >
            This StackScript installs and configures MySQL
        images:
          type: array
          x-linode-filterable: true
          description: >
            The images that the StackScript is compatible for
            deployment with. A list of Image IDs.
          items:
            type: string
          example:
          - linode/debian9
          - linode/debian8
          x-linode-cli-display: 4
        deployments_total:
          type: integer
          format: int32
          title: The number of times the StackScript has been deployed.
          description: >
            The total number of times this StackScript has been deployed.
          example: 12
          readOnly: true
        deployments_active:
          type: integer
          format: int32
          title: The number of currently active deployments of this StackScript.
          description: >
            The count of only the still actively deployed Linodes created from
            this StackScript.
          example: 1
          readOnly: true
        is_public:
          x-linode-filterable: true
          type: boolean
          title: Whether the StackScript is publicly accessible or not.
          description: >
            This determines whether other users can use your StackScript.
            Once a StackScript is made public, it cannot be made private.
          example: true
          x-linode-cli-display: 5
        created:
          type: string
          format: date-time
          title: The date the StackScript was created.
          description: >
            The date the StackScript was created.
          readOnly: true
          example: "2018-01-01T00:01:01"
          x-linode-cli-display: 6
        updated:
          type: string
          format: date-time
          title: The date the StackScript was last updated.
          description: >
            The date the StackScript was last updated.
          readOnly: true
          example: "2018-01-01T00:01:01"
          x-linode-cli-display: 7
        rev_note:
          x-linode-filterable: true
          type: string
          title: A note regarding the last revision of this StackScript.
          description: >
            This field allows you to leave notes when making revisions to StackScripts.
          example: Set up MySQL
        script:
          type: string
          title: The StackScript.
          description: >
            This field is for inputting the contents of the StackScript.
          example: >
            "#!/bin/bash"
        user_defined_fields:
          type: array
          title: A list of custom fields defined by the user using special tags within the StackScript.
          description: >
            This is a list of fields defined with a special syntax inside the StackScript
            that allow for supplying customized parameters during deployment.
          items:
            $ref: '#/components/schemas/UserDefinedField'
          readOnly: true
          example:
            label: Enter the DB password
            name: DB_PASSWORD
            example: hunter2
    SupportTicket:
      type: object
      description: >
        A Support Ticket opened on your Account.
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
          description: >
            The ID of the Support Ticket.
          example: 11223344
          x-linode-cli-display: 1
        attachments:
          type: array
          description: >
            A list of filenames of attached files attached to this Support Ticket.
          readOnly: true
          items:
            type: string
            example:
            - screenshot.jpg
            - screenshot.txt
        closed:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: >
            The date and time this ticket was closed.
          example: '2015-06-04T16:07:03'
        description:
          type: string
          readOnly: true
          description: >
            The full details of the issue or question.
          minLength: 1
          maxLength: 65000
          example: >
            I'm having trouble setting the root password on my Linode.
            I tried following the instructions but something is not
            working and I'm not sure what I'm doing wrong. Can you please
            help me figure out how I can reset it?
          x-linode-cli-display: 5
        entity:
          type: object
          readOnly: true
          description: >
            The entity this Support Ticket was opened for.
          x-linode-cli-display: 6
          properties:
            id:
              type: integer
              format: int32
              readOnly: true
              description: >
                The unique ID for this ticket's entity.
              example: 10400
            label:
              type: string
              readOnly: true
              description: >
                The current label of this entity.
              example: linode123456
            type:
              type: string
              readOnly: true
              description: >
                The type of entity this is related to.
              example: linode
            url:
              type: string
              readOnly: true
              description: >
                The URL where you can access the object this event is
                for. If a relative URL, it is relative to the domain you
                retrieved the entity from.
              example: /v4/linode/instances/123456
        gravatar_id:
          type: string
          readOnly: true
          description: >
            The Gravatar ID of the user who opened this ticket.
          example: 474a1b7373ae0be4132649e69c36ce30
        opened:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: >
            The date and time this ticket was created.
          example: '2015-06-04T14:16:44'
          x-linode-cli-display: 4
        opened_by:
          type: string
          readOnly: true
          description: >
            The user who opened this ticket.
          example: some_user
          x-linode-cli-display: 3
        status:
          type: string
          readOnly: true
          description: The current status of this Support Ticket.
          enum:
          - closed
          - new
          - open
          example: open
        summary:
          type: string
          readOnly: true
          minLength: 1
          maxLength: 64
          description: >
            The summary or title for this SupportTicket.
          example: >
            Having trouble resetting root password on my Linode
          x-linode-cli-display: 2
        updated:
          x-linode-filterable: true
          type: string
          format: date-time
          readOnly: true
          description: >
            The date and time this ticket was last updated.
          example: '2015-06-04T16:07:03'
        updated_by:
          type: string
          readOnly: true
          description: >
            The user who last updated this ticket.
          example: some_other_user
    SupportTicketReply:
      type: object
      description: >
        An object representing a reply to a Support Ticket.
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          description: >
            The date and time this ticket reply was created.
          example: '2015-06-02T14:31:41'
          x-linode-cli-display: 3
        created_by:
          type: string
          readOnly: true
          description: >
            The user who submitted this reply.
          example: John Q. Linode
          x-linode-cli-display: 2
        description:
          type: string
          readOnly: true
          description: >
            The body of this Support Ticket reply.
          example: >
            Hello,\nI'm sorry to hear that you are having trouble resetting the
            root password of your Linode. Just to be sure, have you tried to
            follow the instructions in our online documentation? The link is here:\n
            \nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/
            \n\nIf you have, please reply with any additional steps you have also
            taken.\n\nRegards, Linode Support Team
        from_linode:
          type: boolean
          readOnly: true
          description: >
            If set to true, this reply came from a Linode employee.
          example: true
        gravatar_id:
          type: string
          readOnly: true
          description: >
            The Gravatar ID of the user who created this reply.
          example: 474a1b7373ae0be4132649e69c36ce30
        id:
          type: integer
          format: int32
          readOnly: true
          description: >
            The unique ID of this Support Ticket reply.
          example: 11223345
          x-linode-cli-display: 1
    SupportTicketRequest:
      type: object
      required:
      - summary
      - description
      description: >
        An object representing a created Support Ticket - a question or issue
        and request for help from the Linode support team.

        Only one of the ID attributes (`linode_id`, `domain_id`, etc) can be set
        on a single Support Ticket.
      properties:
        description:
          type: string
          description: >
            The full details of the issue or question.
          minLength: 1
          maxLength: 65000
          example: >
            I'm having trouble setting the root password on my Linode.
            I tried following the instructions but something is not
            working and I'm not sure what I'm doing wrong. Can you please
            help me figure out how I can reset it?
        domain_id:
          type: integer
          format: int32
          description: >
            The ID of the Domain this ticket is regarding, if relevant.
          example: null
        linode_id:
          type: integer
          format: int32
          description: >
            The ID of the Linode this ticket is regarding, if relevant.
          example: 123
        longviewclient_id:
          type: integer
          format: int32
          description: >
            The ID of the Longview client this ticket is regarding, if relevant.
          example: null
        nodebalancer_id:
          type: integer
          format: int32
          description: >
            The ID of the NodeBalancer this ticket is regarding, if relevant.
          example: null
        summary:
          type: string
          minLength: 1
          maxLength: 64
          description: >
            The summary or title for this SupportTicket.
          example: >
            Having trouble resetting root password on my Linode
        volume_id:
          type: integer
          format: int32
          description: >
            The ID of the Volume this ticket is regarding, if relevant.
          example: null
    Transfer:
      description: >
        An object representing your network utilization for the current month,
        in Gigabytes.
      properties:
        billable:
          type: integer
          format: int32
          readOnly: true
          description: >
            The amount of your transfer pool that is billable this billing cycle.
          example: 0
          x-linode-cli-display: 3
        quota:
          type: integer
          format: int32
          readOnly: true
          description: >
            The amount of network usage allowed this billing cycle.
          example: 9141
          x-linode-cli-display: 1
        used:
          type: integer
          format: int32
          readOnly: true
          description: >
            The amount of network usage you have used this billing cycle.
          example: 2
          x-linode-cli-display: 2
    User:
      description: >
        A User on your account.  Users can log in and access information about
        your account.  Unrestricted users have full access to everything on the
        account, while restricted users may only access entities or perform
        actions they've been granted access to.
      properties:
        username:
          type: string
          pattern: ^[a-zA-Z0-9]((?![_-]{2,})[a-zA-Z0-9-_])+[a-zA-Z0-9]$
          minLength: 3
          maxLength: 32
          description: >
            This user's username.  This is used for logging in, and may also be
            displayed alongside actions the user performs (for example, in Events
            or public StackScripts).
          x-linode-filterable: true
          example: example_user
          x-linode-cli-display: 1
        email:
          type: string
          format: email
          description: >
            The email address for this user.  This is used for account management
            communications, and may be used for other communications as configured.
          example: example_user@linode.com
          readOnly: true
          x-linode-cli-display: 2
        restricted:
          type: boolean
          description: >
            If true, this user must be granted access to perform actions or access
            entities on this account.  See `/account/users/{username}/grants` for
            details on how to configure grants for a restricted user.
          example: true
          x-linode-cli-display: 3
    UserDefinedField:
      type: object
      required:
      - label
      - name
      - example
      description: >
        A custom field defined by the user with a special syntax within a
        StackScript. Derived from the contents of the script.
      properties:
        label:
          type: string
          description: >
            A human readable label for the field that will serve as the input
            prompt for entering the value during deployment.
          example: Enter the password
          readOnly: true
        name:
          type: string
          description: >
            The name of the field.
          example: DB_PASSWORD
          readOnly: true
        example:
          type: string
          description: >
            An example value for the field.
          example: hunter2
          readOnly: true
        oneOf:
          type: string
          description: >
            A list of acceptable single values for the field.
          example: avalue,anothervalue,thirdvalue
          readOnly: true
        manyOf:
          type: string
          description: >
            A list of acceptable values for the field in any quantity,
            combination or order.
          example: avalue,anothervalue,thirdvalue
          readOnly: true
    Volume:
      type: object
      required:
      - label
      description: >
        A Block Storage Volume associated with your account.
      properties:
        id:
          type: integer
          format: int32
          description: The unique ID of this Volume.
          example: 12345
          readOnly: true
          x-linode-cli-display: 1
        label:
          x-linode-filterable: true
          type: string
          title: Label for the Volume.
          description: >
            The Volume's label is for display purposes only.
          example: my-volume
          minLength: 1
          maxLength: 32
          pattern: '^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$'
          x-linode-cli-display: 2
        filesystem_path:
          type: string
          title: The full filesystem path for the Volume.
          description: >
            The full filesystem path for the Volume based on the Volume's label.
            Path is /dev/disk/by-id/scsi-0Linode_Volume_ + Volume label.
          example: /dev/disk/by-id/scsi-0Linode_Volume_my-volume
          readOnly: true
        status:
          type: string
          title: The status of the Volume.
          description: >
            Can be one of `creating`, `active`, `resizing`, `deleting`,
            `deleted`, and `contact_support`:

              * creating - the Volume is being created and is not yet available
                for use.
              * active - the Volume is online and available for use.
              * resizing - the Volume is in the process of upgrading or downgrading
                its current capacity.
              * deleting - the Volume is being deleted and is unavailable for use.
              * deleted - the Volume has been deleted.
              * contact_support - there is a problem with your Volume. Please
                open a support ticket to resolve the issue.
          enum:
          - creating
          - active
          - resizing
          - deleting
          - deleted
          - contact_support
          example: active
          readOnly: true
          x-linode-cli-display: 3
          x-linode-cli-color:
            active: green
            contact_support: red
            default_: yellow
        size:
          type: integer
          title: The Volume's size, in GiB.
          description: >
            The Volume's size, in GiB. Minimum size is 10GiB, maximum size is 10240GiB.
          minimum: 10
          maximum: 10240
          x-linode-cli-display: 4
          example: 30
        region:
          $ref: '#/components/schemas/Region/properties/id'
          x-linode-cli-display: 5
        linode_id:
          type: integer
          title: The ID of the Linode this Volume is attached to, if applicable.
          description: >
            If a Volume is attached to a specific Linode, the ID of that Linode
            will be displayed here.
          example: 12346
          x-linode-cli-display: 6
        created:
          type: string
          format: date-time
          description: When this Volume was created.
          example: '2018-01-01T00:01:01'
          readOnly: true
        updated:
          type: string
          format: date-time
          description: When this Volume was last updated.
          example: '2018-01-01T00:01:01'
          readOnly: true
