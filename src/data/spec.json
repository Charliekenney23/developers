{
  "swagger": "2.0",
  "info": {
    "version": "DEVELOPMENT",
    "title": "Linode API",
    "description": "# Introduction\nThe Linode API provides the ability to programmatically manage the full\nrange of Linode products and services.\n\nThis reference is designed to assist application developers and system\nadministrators.  Each endpoint includes descriptions, request syntax, and\nexamples using standard HTTP requests. Response data is returned in JSON\nformat.\n\n\nThis document was generated from our OpenAPI Specification.  See the\n<a target=\"_top\" href=\"https://www.openapis.org\">OpenAPI website</a> for more information.\n\n<a target=\"_top\" href=\"https://developers.linode.com/api/docs/v4/openapi.yaml\">Download the Linode OpenAPI Specification</a>.\n\n\n# Changelog\n\n<a target=\"_top\" href=\"https://developers.linode.com/changelog\">View our Changelog</a> to see release\nnotes on all changes made to our API.\n\n# Access and Authentication\n\nSome endpoints are publicly accessible without requiring authentication.\nAll endpoints affecting your Account, however, require either a Personal\nAccess Token or OAuth authentication (when using third-party\napplications).\n\n## Personal Access Token\n\nThe easiest way to access the API is with a Personal Access Token (PAT)\ngenerated from the\n<a target=\"_top\" href=\"https://cloud.linode.com/profile/tokens\">Linode Cloud Manager</a>.\n\nAll scopes for the OAuth security model (defined below) apply to this\nsecurity model as well.\n\n### Authentication\n\n| Security Scheme Type: | HTTP |\n|-----------------------|------|\n| **HTTP Authorization Scheme** | bearer |\n\n## OAuth\n\nThe OAuth workflow is a three-step process to authenticate a User before an\napplication can start making API calls on the User's behalf. If all you need\nis a Personal Access Token, feel free to skip ahead to the next section.\n\nFirst, the User visits the application's website and is directed to log with\nLinode. The User is then redirected to Linode's authentication server and\npresented the scope levels the application is requesting. Once the User\naccepts the request for access, we redirect them back to the application's\nspecified redirect URI with an access code.\n\nOnce the User has logged in to Linode and you have received an exchange code,\nyou will need to exchange that access code for an Authorization token. You\ndo this by making an HTTP POST request to the following address:\n\n```\nhttps://login.linode.com/oauth/token\n```\n\nMake this request as `application/x-www-form-urlencoded` or as\n`multipart/form-data` and include the following parameters in the POST body:\n\n| PARAMETER | DESCRIPTION |\n|-----------|-------------|\n| client_id | Your app's client ID |\n| client_secret | Your app's client secret |\n| code | The code you just received from the redirect |\n\nYou'll get a reponse like this:\n\n```json\n{\n  \"scope\": \"linodes:read_write\",\n  \"access_token\": \"03d084436a6c91fbafd5c4b20c82e5056a2e9ce1635920c30dc8d81dc7a6665c\"\n  \"token_type\": \"bearer\",\n  \"expires_in\": 7200,\n}\n```\n\nIncluded in the reponse is `access_token`. With this token, you can proceed to make\nauthenticated HTTP requests to the API by adding this header to each request:\n\n```\nAuthorization: Bearer 03d084436a6c91fbafd5c4b20c82e5056a2e9ce1635920c30dc8d81dc7a6665c\n```\n\n### Authentication\n\n| Security Scheme Type: | Oauth2 |\n|-----------------------|--------|\n| **AuthorizationCode Oauth Flow** |  **Authorization URL:** https://login.linode.com/oauth/authorize<br />**Token URL:** https://login.linode.com/oauth/token<br />**Scopes:**<br /><ul><li>`account:read_only` - Allows access to GET information about your Account.</li><li>`account:read_write` - Allows access to all endpoints related to your Account.</li><li>`domains:read_only` - Allows access to GET Domains on your Account.</li><li>`domains:read_write` - Allows access to all Domain endpoints.</li><li>`events:read_only` - Allows access to GET your Events.</li><li>`events:read_write` - Allows access to all endpoints related to your Events.</li><li>`images:read_only` - Allows access to GET your Images.</li><li>`images:read_write` - Allows access to all endpoints related to your Images.</li><li>`ips:read_only` - Allows access to GET your ips.</li><li>`ips:read_write` - Allows access to all endpoints related to your ips.</li><li>`linodes:read_only` - Allows access to GET Linodes on your Account.</li><li>`linodes:read_write` - Allow access to all endpoints related to your Linodes.</li><li>`longview:read_only` - Allows access to GET your Longview Clients.</li><li>`longview:read_write` - Allows access to all endpoints related to your Longview Clients.</li><li>`nodebalancers:read_only` - Allows access to GET NodeBalancers on your Account.</li><li>`nodebalancers:read_write` - Allows access to all NodeBalancer endpoints.</li><li>`stackscripts:read_only` - Allows access to GET your StackScripts.</li><li>`stackscripts:read_write` - Allows access to all endpoints related to your StackScripts.</li><li>`volumes:read_only` - Allows access to GET your Volumes.</li><li>`volumes:read_write` - Allows access to all endpoints related to your Volumes.</li></ul><br />|\n\n# Requests\n\nRequests must be made over HTTPS to ensure transactions are encrypted. The\nfollowing Request methods are supported:\n\n| METHOD | USAGE |\n|--------|-------|\n| GET    | Retrieves data about collections and individual resources. |\n| POST   | For collections, creates a new resource of that type. Also used to perform actions on action endpoints. |\n| PUT    | Updates an existing resource. |\n| DELETE | Deletes a resource. This is a destructive action. |\n\n\n# Responses\n\nActions will return one following HTTP response status codes:\n\n| STATUS  | DESCRIPTION |\n|---------|-------------|\n| 200 OK  | The request was successful. |\n| 204 No Content | The server successfully fulfilled the request and there is no additional content to send. |\n| 400 Bad Request | You submitted an invalid request (missing parameters, etc.). |\n| 401 Unauthorized | You failed to authenticate for this resource. |\n| 403 Forbidden | You are authenticated, but don't have permission to do this. |\n| 404 Not Found | The resource you're requesting does not exist. |\n| 429 Too Many Requests | You've hit a rate limit. |\n| 500 Internal Server Error | Please [open a Support Ticket](#operation/createTicket). |\n\n# Errors\n\nSuccess is indicated via <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"_top\">Standard HTTP status codes</a>.\n`2xx` codes indicate success, `4xx` codes indicate a request error, and\n`5xx` errors indicate a server error. A\nrequest error might be an invalid input, a required parameter being omitted,\nor a malformed request. A server error means something went wrong processing\nyour request. If this occurs, please\n[open a Support Ticket](#operation/createTicket)\nand let us know. Though errors are logged and we work quickly to resolve issues,\nopening a ticket and providing us with reproducable steps and data is always helpful.\n\nThe `errors` field is an array of the things that went wrong with your request.\nWe will try to include as many of the problems in the response as possible,\nbut it's conceivable that fixing these errors and resubmitting may result in\nnew errors coming back once we are able to get further along in the process\nof handling your request.\n\n\nWithin each error object, the `field` parameter will be included if the error\npertains to a specific field in the JSON you've submitted. This will be\nomitted if there is no relevant field. The `reason` is a human-readable\nexplanation of the error, and will always be included.\n\n# Pagination\n\nResource lists are always paginated. The response will look similar to this:\n\n```json\n{\n    \"data\": [ ... ],\n    \"page\": 1,\n    \"pages\": 3,\n    \"results\": 300\n}\n```\n\nPages start at 1. You may retrieve a specific page of results by adding\n`?page=x` to your URL (for example, `?page=4`). Page sizes default to 100,\nand can be set to return between 25 and 100. Page size can be set using\n`?page_size=x`.\n\n# Filtering and Sorting\n\nCollections are searchable by fields they include, marked in the spec as\n`x-linode-filterable: true`. Filters are passed\nin the `X-Filter` header and are formatted as JSON objects. Here is a request\ncall for Linode Types in our \"standard\" class:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \\\n    \"class\": \"standard\"\n  }'\n```\n\nThe filter object's keys are the keys of the object you're filtering,\nand the values are accepted values. You can add multiple filters by\nincluding more than one key. For example, filtering for \"standard\" Linode\nTypes that offer one vcpu:\n\n```Shell\n curl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: { \\\n    \"class\": \"standard\",\n    \"vcpus\": 1\n  }'\n```\n\nIn the above example, both filters are combined with an \"and\" operation.\nHowever, if you wanted either Types with one vcpu or Types in our \"standard\"\nclass, you can add an operator:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: {\n    \"+or\": [\n      { \"vcpus\": 1 },\n      { \"class\": \"standard\" }\n    ]\n  }'\n```\n\nEach filter in the `+or` array is its own filter object, and all conditions\nin it are combined with an \"and\" operation as they were in the previous example.\n\nOther operators are also available. Operators are keys of a Filter JSON\nobject. Their value must be of the appropriate type, and they are evaluated\nas described below:\n\n| OPERATOR | TYPE   | DESCRIPTION                       |\n|----------|--------|-----------------------------------|\n| +and     | array  | All conditions must be true.       |\n| +or      | array  | One condition must be true.        |\n| +gt      | number | Value must be greater than number. |\n| +gte     | number | Value must be greater than or equal to number. |\n| +lt      | number | Value must be less than number. |\n| +lte     | number | Value must be less than or equal to number. |\n| +contains | string | Given string must be in the value. |\n| +neq      | string | Does not equal the value.          |\n| +order_by | string | Attribute to order the results by - must be filterable. |\n| +order    | string | Either \"asc\" or \"desc\". Defaults to \"asc\". Requires `+order_by`. |\n\nFor example, filtering for [Linode Types](#operation/getLinodeTypes)\nthat offer memory equal to or higher than 61440:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: {\n    \"memory\": {\n      \"+gte\": 61440\n    }\n  }'\n```\n\nYou can combine and nest operators to construct arbitrarily-complex queries.\nFor example, give me all [Linode Types](#operation/getLinodeTypes)\nwhich are either `standard` or `highmem` class, and\nhave between 12 and 20 vcpus:\n\n```Shell\ncurl \"https://api.linode.com/v4/linode/types\" \\\n  -H 'X-Filter: {\n    \"+or\": [\n      {\n        \"+or\": [\n          {\n            \"class\": \"standard\"\n          },\n          {\n            \"class\": \"highmem\"\n          }\n        ]\n      },\n      {\n        \"+and\": [\n          {\n            \"vcpus\": {\n              \"+gte\": 12\n            }\n          },\n          {\n            \"vcpus\": {\n              \"+lte\": 20\n            }\n          }\n        ]\n      }\n    ]\n  }'\n```\n\n# CLI (Command Line Interface)\n\nThe <a href=\"https://github.com/linode/linode-cli\" target=\"_top\">Linode CLI</a> allows you to easily\nwork with the API using intuitive and simple syntax. It requires a\n[Personal Access Token](#section/Personal-Access-Token)\nfor authentication, and gives you access to all of the features and functionality\nof the Linode API that are documented here with CLI examples.\n\nEndpoints that do not have CLI examples are currently unavailable through the CLI, but\ncan be accessed via other methods such as Shell commands and other third-party applications.\n",
    "contact": {
      "name": "Linode",
      "url": "/"
    }
  },
  "host": "api.linode.com",
  "basePath": "/v4",
  "securityDefinitions": {},
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/account": {
      "get": {
        "description": "Returns the contact and billing information related to your Account.\n",
        "summary": "getAccount",
        "tags": ["Account"],
        "operationId": "AccountGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a single Account object.",
            "schema": {
              "$ref": "#/definitions/Account"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates contact and billing information related to your Account.\n",
        "summary": "updateAccount",
        "tags": ["Account"],
        "operationId": "AccountPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Update contact and billing information.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Account.",
            "schema": {
              "$ref": "#/definitions/Account"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/credit-card": {
      "post": {
        "description": "Adds/edit credit card information to your Account.\nOnly one credit card can be associated with your Account, so using this endpoint will overwrite your currently active card information with the new credit card.\n",
        "summary": "createCreditCard",
        "tags": ["Account"],
        "operationId": "AccountCreditCardPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Update the credit card information associated with your Account.",
            "schema": {
              "$ref": "#/definitions/AccountCreditCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credit Card updated.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/events": {
      "get": {
        "description": "Returns a collection of Event objects representing actions taken on your Account. The Events returned depends on your grants.\n",
        "summary": "getEvents",
        "tags": ["Account"],
        "operationId": "AccountEventsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated lists of Event objects.",
            "schema": {
              "$ref": "#/definitions/AccountEventsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/events/{eventId}": {
      "get": {
        "description": "Returns a single Event object.",
        "summary": "getEvent",
        "tags": ["Account"],
        "operationId": "AccountEventsByEventIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Event."
          }
        ],
        "responses": {
          "200": {
            "description": "An Event object",
            "schema": {
              "$ref": "#/definitions/Event"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/events/{eventId}/read": {
      "post": {
        "description": "Marks a single Event as read.",
        "summary": "eventRead",
        "tags": ["Account"],
        "operationId": "AccountEventsReadByEventIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Event to designate as read."
          }
        ],
        "responses": {
          "200": {
            "description": "Event read.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/events/{eventId}/seen": {
      "post": {
        "description": "Marks all Events up to and including this Event by ID as seen.\n",
        "summary": "eventSeen",
        "tags": ["Account"],
        "operationId": "AccountEventsSeenByEventIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Event to designate as seen."
          }
        ],
        "responses": {
          "200": {
            "description": "Events seen.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/invoices": {
      "get": {
        "description": "Returns a paginated list of Invoices against your Account.\n",
        "summary": "getInvoices",
        "tags": ["Account"],
        "operationId": "AccountInvoicesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Invoice objects.",
            "schema": {
              "$ref": "#/definitions/AccountInvoicesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/invoices/{invoiceId}": {
      "get": {
        "description": "Returns a single Invoice object.",
        "summary": "getInvoice",
        "tags": ["Account"],
        "operationId": "AccountInvoicesByInvoiceIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Invoice."
          }
        ],
        "responses": {
          "200": {
            "description": "An Invoice object",
            "schema": {
              "$ref": "#/definitions/Invoice"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/invoices/{invoiceId}/items": {
      "get": {
        "description": "Returns a paginated list of Invoice items.",
        "summary": "getInvoiceItems",
        "tags": ["Account"],
        "operationId": "AccountInvoicesItemsByInvoiceIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Invoice."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of InvoiceItem objects",
            "schema": {
              "$ref": "#/definitions/AccountInvoicesItemsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/notifications": {
      "get": {
        "description": "Returns a collection of Notification objects representing important, often time-sensitive items related to your Account.\nYou cannot interact directly with Notifications, and a Notification will disappear when the circumstances causing it have been resolved. For example, if you have an important Ticket open, you must respond to the Ticket to dismiss the Notification.\n",
        "summary": "getNotifications",
        "tags": ["Account"],
        "operationId": "AccountNotificationsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Notification objects.",
            "schema": {
              "$ref": "#/definitions/AccountNotificationsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/oauth-clients": {
      "get": {
        "description": "Returns a paginated list of OAuth Clients registered to your Account.  OAuth Clients allow users to log into applications you write or host using their Linode Account, and may allow them to grant some level of access to their Linodes or other entities to your application.\n",
        "summary": "getClients",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of OAuth Clients.",
            "schema": {
              "$ref": "#/definitions/AccountOauthClientsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates an OAuth Client, which can be used to allow users (using their Linode account) to log in to your own application, and optionally grant your application some amount of access to their Linodes or other entities.\n",
        "summary": "createClient",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the OAuth Client to create.",
            "schema": {
              "$ref": "#/definitions/AccountOauthClientsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client created successfully.",
            "schema": {
              "$ref": "#/definitions/OAuthClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/oauth-clients/{clientId}": {
      "get": {
        "description": "Returns information about a single OAuth client.\n",
        "summary": "getClient",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsByClientIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The OAuth Client ID to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Information about the requested client.",
            "schema": {
              "$ref": "#/definitions/OAuthClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Update information about an OAuth Client on your Account. This can be especially useful to update the `redirect_uri` of your client in the event that the callback url changed in your application.\n",
        "summary": "updateClient",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsByClientIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The OAuth Client ID to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/OAuthClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client updated successfully.",
            "schema": {
              "$ref": "#/definitions/OAuthClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an OAuth Client registered with Linode. The Client ID and Client secret will no longer be accepted by <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a>, and all tokens issued to this client will be invalidated (meaning that if your application was using a token, it will no longer work).\n",
        "summary": "deleteClient",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsByClientIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The OAuth Client ID to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/oauth-clients/{clientId}/reset-secret": {
      "post": {
        "description": "Resets the OAuth Client secret for a client you own, and returns the OAuth Client with the plaintext secret. This secret is not supposed to be publicly known or disclosed anywhere. This can be used to generate a new secret in case the one you have has been leaked, or to get a new secret if you lost the original. The old secret is expired immediately, and logins to your client with the old secret will fail.\n",
        "summary": "resetClientSecret",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsResetSecretByClientIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The OAuth Client ID to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Client secret reset successfully.",
            "schema": {
              "$ref": "#/definitions/OAuthClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/oauth-clients/{clientId}/thumbnail": {
      "get": {
        "description": "Returns the thumbnail for this OAuth Client.  This is a publicly-viewable endpoint, and can be accessed without authentication.\n",
        "summary": "getClientThumbnail",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsThumbnailByClientIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The OAuth Client ID to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "The client's thumbnail.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Upload a thumbnail for a client you own.  You must upload an image file that will be returned when the thumbnail is retrieved.  This image will be publicly-viewable.\n",
        "summary": "setClientThumbnail",
        "tags": ["Account"],
        "operationId": "AccountOauthClientsThumbnailByClientIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The OAuth Client ID to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The image to set as the thumbnail.",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thumbnail updated successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/payments": {
      "get": {
        "description": "Returns a paginated list of Payments made on this Account.\n",
        "summary": "getPayments",
        "tags": ["Account"],
        "operationId": "AccountPaymentsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of Payment objects.",
            "schema": {
              "$ref": "#/definitions/AccountPaymentsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Makes a Payment to your Account via credit card. This will charge your credit card the requested amount.\n",
        "summary": "createPayment",
        "tags": ["Account"],
        "operationId": "AccountPaymentsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the Payment you are making.",
            "schema": {
              "$ref": "#/definitions/PaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment made.",
            "schema": {
              "$ref": "#/definitions/Payment"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/payments/{paymentId}": {
      "get": {
        "description": "Returns information about a specific Payment.\n",
        "summary": "getPayment",
        "tags": ["Account"],
        "operationId": "AccountPaymentsByPaymentIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Payment to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A Payment object.",
            "schema": {
              "$ref": "#/definitions/Payment"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/payments/paypal": {
      "post": {
        "description": "This begins the process of submitting a Payment via PayPal. After calling this endpoint, you must take the resulting `payment_id` along with the `payer_id` from your PayPal account and [POST /account/payments/paypal-execute](#operation/executePayPalPayment) to complete the Payment.\n",
        "summary": "createPayPalPayment",
        "tags": ["Account"],
        "operationId": "AccountPaymentsPaypalPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The amount of the Payment to submit via PayPal.",
            "schema": {
              "$ref": "#/definitions/PayPal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PayPal Payment staged.",
            "schema": {
              "$ref": "#/definitions/AccountPaymentsPaypalResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/payments/paypal/execute": {
      "post": {
        "description": "Given a PaymentID and PayerID - as generated by PayPal during the transaction authorization process - this endpoint executes the Payment to capture the funds and credit your Linode Account.\n",
        "summary": "executePayPalPayment",
        "tags": ["Account"],
        "operationId": "AccountPaymentsPaypalExecutePost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The details of the Payment to execute.",
            "schema": {
              "$ref": "#/definitions/PayPalExecute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PayPal Payment executed.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/settings": {
      "get": {
        "description": "Returns information related to your Account settings: Managed service subscription, Longview subscription, and network helper.\n",
        "summary": "getAccountSettings",
        "tags": ["Account"],
        "operationId": "AccountSettingsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a single Account settings object.",
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates your Account settings.\n",
        "summary": "updateAccountSettings",
        "tags": ["Account"],
        "operationId": "AccountSettingsPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Update Account settings information.",
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Account settings.",
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/transfer": {
      "get": {
        "description": "Returns a Transfer object showing your network utilization, in GB, for the current month.\n",
        "summary": "getTransfer",
        "tags": ["Account"],
        "operationId": "AccountTransferGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a single Transfer object.",
            "schema": {
              "$ref": "#/definitions/Transfer"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/users": {
      "get": {
        "description": "Returns a paginated list of Users on your Account. Users may access all or part of your Account based on their restricted status and grants.  An unrestricted User may access everything on the account, whereas restricted User may only access entities or perform actions they've been given specific grants to.\n",
        "summary": "getUsers",
        "tags": ["Account"],
        "operationId": "AccountUsersGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Users.",
            "schema": {
              "$ref": "#/definitions/AccountUsersResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a User on your Account. Once created, the User will be able to log in and access portions of your Account. Access is determined by whether or not they are restricted, and what grants they have been given.\n",
        "summary": "createUser",
        "tags": ["Account"],
        "operationId": "AccountUsersPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the User to create.",
            "schema": {
              "$ref": "#/definitions/AccountUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New User created successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/users/{username}": {
      "get": {
        "description": "Returns information about a single User on your Account.\n",
        "summary": "getUser",
        "tags": ["Account"],
        "operationId": "AccountUsersByUsernameGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested User object",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Update information about a User on your Account. This can be used to change the restricted status of a User. When making a User restricted, no grants will be configured by default and you must then set up grants in order for the User to access anything on the Account.\n",
        "summary": "updateUser",
        "tags": ["Account"],
        "operationId": "AccountUsersByUsernamePut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The information to update.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a User. The deleted User will be immediately logged out and may no longer log in or perform any actions. All of the User's Grants will be removed.\n",
        "summary": "deleteUser",
        "tags": ["Account"],
        "operationId": "AccountUsersByUsernameDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/account/users/{username}/grants": {
      "get": {
        "description": "Returns the full grants structure for this User. This includes all entities on the Account alongside what level of access this User has to each of them. Individual users may view their own grants at the [/profile/grants](#operation/getProfileGrants) endpoint, but will not see entities that they have no access to.\n",
        "summary": "getUserGrants",
        "tags": ["Account"],
        "operationId": "AccountUsersGrantsByUsernameGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username to look up."
          }
        ],
        "responses": {
          "204": {
            "description": "The User's grants.",
            "schema": {
              "$ref": "#/definitions/GrantsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Update the grants a User has. This can be used to give a User access to new entities or actions, or take access away.  You do not need to include the grant for every entity on the Account in this request; any that are not included will remain unchanged.\n",
        "summary": "updateUserGrants",
        "tags": ["Account"],
        "operationId": "AccountUsersGrantsByUsernamePut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The username to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The grants to update. Omitted grants will be left unchanged.",
            "schema": {
              "$ref": "#/definitions/GrantsResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grants updated successfully.",
            "schema": {
              "$ref": "#/definitions/GrantsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/domains": {
      "get": {
        "description": "This is a collection of Domains that you have registered in Linode's DNS Manager.  Linode is not a registrar, and in order for these to work you must own the domains and point your registrar at Linode's nameservers.\n",
        "summary": "getDomains",
        "tags": ["Domains"],
        "operationId": "DomainsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Domains you have registered.",
            "schema": {
              "$ref": "#/definitions/DomainsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Domain to Linode's DNS Manager. Linode is not a registrar, and you must own the domain before adding it here. Be sure to point your registrar to Linode's nameservers so that the records hosted here are used.\n",
        "summary": "createDomain",
        "tags": ["Domains"],
        "operationId": "DomainsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the domain you are registering.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domain added successfully.\n",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/domains/{domainId}": {
      "get": {
        "description": "This is a single Domain that you have registered in Linode's DNS Manager. Linode is not a registrar, and in order for this Domain record to work you must own the domain and point your registrar at Linode's nameservers.\n",
        "summary": "getDomain",
        "tags": ["Domains"],
        "operationId": "DomainsByDomainIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain to access."
          }
        ],
        "responses": {
          "200": {
            "description": "A single Domain in Linode's DNS Manager.\n",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Update information about a Domain in Linode's DNS Manager.\n",
        "summary": "updateDomain",
        "tags": ["Domains"],
        "operationId": "DomainsByDomainIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The Domain information to update.",
            "schema": {
              "$ref": "#/definitions/Domain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domain update successful.",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Domain from Linode's DNS Manager. The Domain will be removed from Linode's nameservers shortly after this operation completes. This also deletes all associated Domain Records.\n",
        "summary": "deleteDomain",
        "tags": ["Domains"],
        "operationId": "DomainsByDomainIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain to access."
          }
        ],
        "responses": {
          "200": {
            "description": "Domain deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/domains/import": {
      "post": {
        "description": "Imports a domain zone from a remote nameserver.\nYour nameserver must allow zone transfers (AXFR) from the following IPs:  - 96.126.114.97\n  - 96.126.114.98\n  - 2600:3c00::5e\n  - 2600:3c00::5f\n",
        "summary": "importDomain",
        "tags": ["Domains"],
        "operationId": "DomainsImportPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the Domain to import.",
            "schema": {
              "$ref": "#/definitions/DomainsImportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single Domain in Linode's DNS Manager.\n",
            "schema": {
              "$ref": "#/definitions/Domain"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/domains/{domainId}/records": {
      "get": {
        "description": "Returns a paginated list of Records configured on a Domain in Linode's\nDNS Manager.\n",
        "summary": "getDomainRecords",
        "tags": ["Domains"],
        "operationId": "DomainsRecordsByDomainIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain we are accessing Records for."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Domain Records.",
            "schema": {
              "$ref": "#/definitions/DomainsRecordsResponse"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Adds a new Domain Record to the zonefile this Domain represents.\n",
        "summary": "createDomainRecord",
        "tags": ["Domains"],
        "operationId": "DomainsRecordsByDomainIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain we are accessing Records for."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the new Record to add.",
            "schema": {
              "$ref": "#/definitions/DomainRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domain Record created successfully.",
            "schema": {
              "$ref": "#/definitions/DomainRecord"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/domains/{domainId}/records/{recordId}": {
      "get": {
        "description": "View a single Record on this Domain.\n",
        "summary": "getDomainRecord",
        "tags": ["Domains"],
        "operationId": "DomainsRecordsByDomainIdAndRecordIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain whose Record you are accessing."
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Record you are accessing."
          }
        ],
        "responses": {
          "200": {
            "description": "A Domain Record object.",
            "schema": {
              "$ref": "#/definitions/DomainRecord"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a single Record on this Domain.\n",
        "summary": "updateDomainRecord",
        "tags": ["Domains"],
        "operationId": "DomainsRecordsByDomainIdAndRecordIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain whose Record you are accessing."
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Record you are accessing."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The values to change.",
            "schema": {
              "$ref": "#/definitions/DomainRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domain Record updated.",
            "schema": {
              "$ref": "#/definitions/DomainRecord"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Record on this Domain.\n",
        "summary": "deleteDomainRecord",
        "tags": ["Domains"],
        "operationId": "DomainsRecordsByDomainIdAndRecordIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Domain whose Record you are accessing."
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Record you are accessing."
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/images": {
      "get": {
        "description": "Returns a paginated list of Images.\n\n* Calling this endpoint without authentication returns all public Images.\n* Authentication is required to return a combined paginated list of all public and  your private Images.\n",
        "summary": "getImages",
        "tags": ["Images"],
        "operationId": "ImagesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Images.",
            "schema": {
              "$ref": "#/definitions/ImagesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a private gold-master Image from a Linode Disk. There is no additional charge to store Images for Linode users.\nImages are limited to three per Account.\n",
        "summary": "createImage",
        "tags": ["Images"],
        "operationId": "ImagesPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the Image to create.",
            "schema": {
              "$ref": "#/definitions/ImagesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New private Image created successfully.",
            "schema": {
              "$ref": "#/definitions/ImagePrivate"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/images/{imageId}": {
      "get": {
        "description": "Get information about a single Image.\n",
        "summary": "getImage",
        "tags": ["Images"],
        "operationId": "ImagesByImageIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Image to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single Image object.",
            "schema": {
              "$ref": "#/definitions/ImagePrivate"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a private Image that you have permission to `read_write`.\n",
        "summary": "updateImage",
        "tags": ["Images"],
        "operationId": "ImagesByImageIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Image to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/ImagePrivate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated image.",
            "schema": {
              "$ref": "#/definitions/ImagePrivate"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a private Image you have permission to `read_write`.\n\n\n**Deleting an Image is a destructive action and cannot be undone.**\n",
        "summary": "deleteImage",
        "tags": ["Images"],
        "operationId": "ImagesByImageIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Image to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances": {
      "get": {
        "description": "Returns a paginated list of Linodes you have permission to view.\n",
        "summary": "getLinodeInstances",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all Linodes on your Account.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Linode Instance on your Account. In order for this\nrequest to complete successfully, your User must have the `add_linodes` grant. Creating a\nnew Linode will incur a charge on your Account.\n\nLinodes can be created using one of the available Types. See\n[GET /linode/types](#operation/getLinodeTypes) to get more\ninformation about each Type's specs and cost.\n\nLinodes can be created in any one of our available\n[Regions](#operation/getRegions) for a list\nof available Regions you can deploy your Linode in.\n\nLinodes can be created in a number of ways:\n\n* Using a Linode Linux Distribution image or an Image you created based on another Linode.\n  * The Linode will be `running` after it completes `provisioning`.\n  * A default config with two Disks, one being a 512 swap disk, is created.\n    * `swap_size` can be used to customize the swap disk size.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.\n  * You may also supply a list of usernames via the `authorized_users` field.\n    * These users must have an SSH Key associated with your Profile first. See [/profile/sshkeys](#operation/addSSHKey) for more information.\n\n* Using a StackScript.\n  * See [/linode/stackscripts](#operation/getStackScripts) for\n    a list of available StackScripts.\n  * The Linode will be `running` after it completes `provisioning`.\n  * Requires a compatible Image to be supplied.\n    * See [/linode/stackscript/{stackscriptId}](#operation/getStackScript) for compatible Images.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the `authorized_keys` field.\n  * You may also supply a list of usernames via the `authorized_users` field.\n    * These users must have an SSH Key associated with your Profile first. See [/profile/sshkeys](#operation/addSSHKey) for more information.\n\n* Using one of your other Linode's backups.\n  * You must create a Linode large enough to accommodate the Backup's size.\n  * The Disks and Config will match that of the Linode that was backed up.\n  * The `root_pass` will match that of the Linode that was backed up.\n\n* Create an empty Linode.\n  * The Linode will remain `offline` and must be manually started.\n    * See [POST /linode/instances/{linodeId}/boot](#operation/bootLinodeInstance).\n  * Disks and Configs must be created manually.\n  * This is only recommended for advanced use cases.\n\n\n**Important**: You must be an unrestricted User in order to add or modify\ntags on Linodes.\n",
        "summary": "createLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The requested initial state of a new Linode.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A new Linode is being created.\n",
            "schema": {
              "$ref": "#/definitions/Linode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}": {
      "get": {
        "description": "Get a specific Linode by ID.",
        "summary": "getLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Linode object.",
            "schema": {
              "$ref": "#/definitions/Linode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a Linode that you have permission to `read_write`.\n\n**Important**: You must be an unrestricted User in order to add or modify tags on Linodes.\n",
        "summary": "updateLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesByLinodeIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Any field that is not marked as `readOnly` may be updated. Fields that are marked `readOnly` will be ignored. If any updated field fails to pass validation, the Linode will not be updated.",
            "schema": {
              "$ref": "#/definitions/Linode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Linode.",
            "schema": {
              "$ref": "#/definitions/Linode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Linode you have permission to `read_write`.\n\n**Deleting a Linode is a destructive action and cannot be undone.**\n\nAdditionally, deleting a Linode:\n\n  * Gives up any IP addresses the Linode was assigned.\n  * Deletes all Disks, Backups, Configs, etc.\n  * Stops billing for the Linode and its associated services. You will be billed for time used\n    within the billing period the Linode was active.\n",
        "summary": "deleteLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesByLinodeIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/backups": {
      "get": {
        "description": "Returns information about this Linode's available backups.\n",
        "summary": "getBackups",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBackupsByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode the backups belong to."
          }
        ],
        "responses": {
          "200": {
            "description": "A collection of the specified Linode's available backups.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesBackupsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a snapshot Backup of a Linode.\n** If you already have a snapshot of this Linode, this is a destructive action. The previous snapshot will be deleted.**\n",
        "summary": "createSnapshot",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBackupsByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode the backups belong to."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The label for the new snapshot.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesBackupsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Snapshot was successfully taken.",
            "schema": {
              "$ref": "#/definitions/Backup"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/backups/cancel": {
      "post": {
        "description": "Cancels the Backup service on the given Linode. Deletes all of this Linode's existing backups forever.\n",
        "summary": "cancelBackups",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBackupsCancelByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode to cancel backup service for."
          }
        ],
        "responses": {
          "200": {
            "description": "Backup service was cancelled for the specified Linode.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/backups/enable": {
      "post": {
        "description": "Enables backups for the specified Linode.\n",
        "summary": "enableBackups",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBackupsEnableByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode to enable backup service for."
          }
        ],
        "responses": {
          "200": {
            "description": "Backup service was enabled.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/backups/{backupId}": {
      "get": {
        "description": "Returns information about a Backup.\n",
        "summary": "getBackup",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBackupsByLinodeIdAndBackupIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode the Backup belongs to."
          },
          {
            "name": "backupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Backup to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single Backup.",
            "schema": {
              "$ref": "#/definitions/Backup"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/backups/{backupId}/restore": {
      "post": {
        "description": "Restores a Linode's Backup to the specified Linode.\n",
        "summary": "restoreBackup",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBackupsRestoreByLinodeIdAndBackupIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode that the Backup belongs to."
          },
          {
            "name": "backupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Backup to restore."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Parameters to provide when restoring the Backup.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesBackupsRestoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Restore from Backup was initiated.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/boot": {
      "post": {
        "description": "Boots a Linode you have permission to modify. If no parameters are given, a Config profile\nwill be chosen for this boot based on the following criteria:\n\n* If there is only one Config profile for this Linode, it will be used.\n* If there is more than one Config profile, the last booted config will be used.\n* If there is more than one Config profile and none were the last to be booted (because the\n  Linode was never booted or the last booted config was deleted) an error will be returned.\n",
        "summary": "bootLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesBootByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode to boot."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Optional configuration to boot into (see above).",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesBootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boot started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/clone": {
      "post": {
        "description": "You can clone your Linode's existing Disks or Configuration profiles to another Linode on your Account. In order for this request to complete successfully, your User must have the `add_linodes` grant. Cloning to a new Linode will incur a charge on your Account.\nIf cloning to an existing Linode, any actions currently running or queued must be completed first before you can clone to it.\n",
        "summary": "cloneLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesCloneByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to clone."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The requested state your Linode will be cloned into.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesCloneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clone started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/configs": {
      "get": {
        "description": "Lists Configuration profiles associated with a Linode.\n",
        "summary": "getLinodeConfigs",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesConfigsByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up Configuration profiles for."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Configuration profiles associated with this Linode.\n",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesConfigsResponse"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Adds a new Configuration profile to a Linode.\n",
        "summary": "addLinodeConfig",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesConfigsByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up Configuration profiles for."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The parameters to set when creating the Configuration profile.\nThis determines which kernel, devices, how much memory, etc. a Linode boots with.",
            "schema": {
              "$ref": "#/definitions/LinodeConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Configuration profile was created.\n",
            "schema": {
              "$ref": "#/definitions/LinodeConfig"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/configs/{configId}": {
      "get": {
        "description": "Returns information about a specific Configuration profile.\n",
        "summary": "getLinodeConfig",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesConfigsByLinodeIdAndConfigIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode whose Configuration profile to look up."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Configuration profile to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A Configuration profile object.",
            "schema": {
              "$ref": "#/definitions/LinodeConfig"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a Configuration profile.\n",
        "summary": "updateLinodeConfig",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesConfigsByLinodeIdAndConfigIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode whose Configuration profile to look up."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Configuration profile to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The Configuration profile parameters to modify.",
            "schema": {
              "$ref": "#/definitions/LinodeConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration profile successfully updated.",
            "schema": {
              "$ref": "#/definitions/LinodeConfig"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the specified Configuration profile from the specified Linode.\n",
        "summary": "deleteLinodeConfig",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesConfigsByLinodeIdAndConfigIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode whose Configuration profile to look up."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Configuration profile to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration profile successfully deleted.\n",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/disks": {
      "get": {
        "description": "View Disk information for Disks associated with this Linode.\n",
        "summary": "getLinodeDisks",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of disks associated with this Linode.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesDisksResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Disk to a Linode. You can optionally create a Disk from an Image (see [/images](#operation/getImages) for a list of available public images, or use one of your own), and optionally provide a StackScript to deploy with this Disk.\n",
        "summary": "addLinodeDisk",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The parameters to set when creating the Disk.",
            "schema": {
              "$ref": "#/definitions/DiskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disk created.",
            "schema": {
              "$ref": "#/definitions/Disk"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}": {
      "get": {
        "description": "View Disk information for a Disk associated with this Linode.\n",
        "summary": "getLinodeDisk",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksByLinodeIdAndDiskIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "diskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Disk to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Disk object.",
            "schema": {
              "$ref": "#/definitions/Disk"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a Disk that you have permission to `read_write`.\n",
        "summary": "updateDisk",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksByLinodeIdAndDiskIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "diskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Disk to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Updates the parameters of a single Disk.",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Disk.",
            "schema": {
              "$ref": "#/definitions/Disk"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Disk you have permission to `read_write`.\n\n**Deleting a Disk is a destructive action and cannot be undone.**\n",
        "summary": "deleteDisk",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksByLinodeIdAndDiskIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "diskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Disk to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}/clone": {
      "post": {
        "description": "Copies a disk, byte-for-byte, into a new Disk belonging to the same Linode. The Linode must have enough storage space available to accept a new Disk of the same size as this one or this operation will fail.\n",
        "summary": "cloneLinodeDisk",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksCloneByLinodeIdAndDiskIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "diskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Disk to clone."
          }
        ],
        "responses": {
          "200": {
            "description": "Disk clone initiated.",
            "schema": {
              "$ref": "#/definitions/Disk"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}/password": {
      "post": {
        "description": "Resets the password of a Disk you have permission to `read_write`.\n",
        "summary": "resetDiskPassword",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksPasswordByLinodeIdAndDiskIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "diskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Disk to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The new password.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesDisksPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Disk object.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/disks/{diskId}/resize": {
      "post": {
        "description": "Resizes a Disk you have permission to `read_write`.\nThe Linode this Disk is attached to must be shut down for resizing to take effect.\nIf you are resizing the Disk to a smaller size, it cannot be made smaller than what is required by the total size of the files current on the Disk. The Disk must not be in use. If the Disk is in use, the request will succeed but the resize will ultimately fail.\n",
        "summary": "resizeDisk",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesDisksResizeByLinodeIdAndDiskIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "diskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Disk to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The new size of the Disk.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesDisksResizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resize started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/ips": {
      "get": {
        "description": "Returns networking information for a single Linode.\n",
        "summary": "getLinodeIPs",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesIpsByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Requested Linode's networking configuration.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesIpsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Allocates a public or private IPv4 address to a Linode. Public IP Addresses, after the one included with each Linode, incur an additional monthly charge. If you need an additional public IP Address you must request one - please [open a support ticket](#operation/createTicket). You may not add more than one private IPv4 address to a single Linode.\n",
        "summary": "addLinodeIP",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesIpsByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the address you are creating.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesIpsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IP address was successfully allocated.",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/ips/{address}": {
      "get": {
        "description": "View information about the specified IP address associated with the specified Linode.\n",
        "summary": "getLinodeIP",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesIpsByLinodeIdAndAddressGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode to look up."
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The IP address to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single IP address.",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a particular IP Address associated with this Linode. Only allows setting/resetting reverse DNS.\n",
        "summary": "updateLinodeIP",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesIpsByLinodeIdAndAddressPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode to look up."
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The IP address to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The information to update for the IP address.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesIpsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated IP address record.",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a public IPv4 address associated with this Linode. This will fail if it is the Linode's last remaining public IPv4 address. Private IPv4 addresses cannot be removed via this endpoint.\n",
        "summary": "removeLinodeIP",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesIpsByLinodeIdAndAddressDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Linode to look up."
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The IP address to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "IP address successfully removed.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/kernels": {
      "get": {
        "description": "Lists available Kernels.\n",
        "summary": "getKernels",
        "tags": ["Linode Instances"],
        "operationId": "LinodeKernelsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Kernels.",
            "schema": {
              "$ref": "#/definitions/LinodeKernelsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/kernels/{kernelId}": {
      "get": {
        "description": "Returns information about a single Kernel.\n",
        "summary": "getKernel",
        "tags": ["Linode Instances"],
        "operationId": "LinodeKernelsByKernelIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "kernelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Kernel to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single Kernel object.",
            "schema": {
              "$ref": "#/definitions/Kernel"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/migrate": {
      "post": {
        "description": "In some circumstances, a Linode may have pending migrations scheduled that that you can initiate when convenient.  In these cases, a Notification will be returned from [GET /account/notifications](#getNotifications). This endpoint initiates the scheduled migration, which will shut the Linode down, migrate it, and then bring it back to its original state.\n",
        "summary": "migrateLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesMigrateByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to migrate."
          }
        ],
        "responses": {
          "200": {
            "description": "Scheduled migration started",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/mutate": {
      "post": {
        "description": "Linodes created with now-deprecated Types are entitled to a free upgrade to the next generation. A mutating Linode will be allocated any new resources the upgraded Type provides, and will be subsequently restarted if it was currently running.\nIf any actions are currently running or queued, those actions must be completed first before you can initiate a mutate.\n",
        "summary": "mutateLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesMutateByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to mutate."
          }
        ],
        "responses": {
          "200": {
            "description": "Mutate started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/reboot": {
      "post": {
        "description": "Reboots a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a reboot.\n",
        "summary": "rebootLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesRebootByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the linode to reboot."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Optional reboot parameters.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesRebootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reboot started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/rebuild": {
      "post": {
        "description": "Rebuilds a Linode you have the `read_write` permission to modify.\nA rebuild will first shut down the Linode, delete all disks and configs on the Linode, and then deploy a new `image` to the Linode with the given attributes. Additionally:\n  * Requires an `image` be supplied.\n  * Requires a `root_pass` be supplied to use for the root User's Account.\n  * It is recommended to supply SSH keys for the root User using the\n    `authorized_keys` field.\n",
        "summary": "rebuildLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesRebuildByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to rebuild."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The requested state your Linode will be rebuilt into.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesRebuildRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rebuild started.",
            "schema": {
              "$ref": "#/definitions/Linode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/rescue": {
      "post": {
        "description": "Rescue Mode is a safe environment for performing many system recovery and disk management tasks. Rescue Mode is based on the Finnix recovery distribution, a self-contained and bootable Linux distribution. You can also use Rescue Mode for tasks other than disaster recovery, such as formatting disks to use different filesystems, copying data between disks, and downloading files from a disk via SSH and SFTP.\n* Note that \"sdh\" is reserved and unavailable during rescue.\n",
        "summary": "rescueLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesRescueByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to rescue."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Optional object of devices to be mounted.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesRescueRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rescue started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/resize": {
      "post": {
        "description": "Resizes a Linode you have the `read_write` permission to a different Type. If any actions are currently running or queued, those actions must be completed first before you can initiate a resize. Additionally, the following criteria must be met in order to resize a Linode:\n  * The Linode must not have a pending migration.\n  * Your Account cannot have an outstanding balance.\n  * The Linode must not have more disk allocation than the new Type allows.\n    * In that situation, you must first delete or resize the disk to be smaller.\n",
        "summary": "resizeLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesResizeByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to resize."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The Type your current Linode will resize to.",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesResizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resize started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/shutdown": {
      "post": {
        "description": "Shuts down a Linode you have permission to modify. If any actions are currently running or queued, those actions must be completed first before you can initiate a shutdown.\n",
        "summary": "shutdownLinodeInstance",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesShutdownByLinodeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to shutdown."
          }
        ],
        "responses": {
          "200": {
            "description": "Shutdown started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/stats": {
      "get": {
        "description": "Returns CPU, IO, IPv4, and IPv6 statistics for your Linode for the past 24 hours.\n",
        "summary": "getLinodeStats",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesStatsByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "The Linode's stats for the past 24 hours.",
            "schema": {
              "$ref": "#/definitions/LinodeStats"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/stats/{year}/{month}": {
      "get": {
        "description": "Returns statistics for a specific month. The year/month values must be either a date in the past, or the current month. If the current month, statistics will be retrieved for the past 30 days.\n",
        "summary": "getLinodeStatsByYearMonth",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesStatsMonthByLinodeIdAndYearGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Numeric value representing the year to look up."
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 12.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Numeric value representing the month to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "The Linode's statistics for the requested period.",
            "schema": {
              "$ref": "#/definitions/LinodeStats"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/instances/{linodeId}/volumes": {
      "get": {
        "description": "View Block Storage Volumes attached to this Linode.\n",
        "summary": "getLinodeVolumes",
        "tags": ["Linode Instances"],
        "operationId": "LinodeInstancesVolumesByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Linode to look up."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of Block Storage Volumes attached to this Linode.\n",
            "schema": {
              "$ref": "#/definitions/LinodeInstancesVolumesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/stackscripts": {
      "get": {
        "description": "If the request is not authenticated, only public StackScripts are returned.\n\nFor more information on StackScripts, please read our guide: <a target=\"_top\" href=\"https://linode.com/docs/platform/stackscripts/\">Automate Deployment with StackScripts</a>.\n",
        "summary": "getStackScripts",
        "tags": ["StackScripts"],
        "operationId": "LinodeStackscriptsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of StackScripts available to the User, including private StackScripts owned by the User if the request is authenticated.\n",
            "schema": {
              "$ref": "#/definitions/LinodeStackscriptsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a StackScript in your Account.\n",
        "summary": "addStackScript",
        "tags": ["StackScripts"],
        "operationId": "LinodeStackscriptsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The properties to set for the new StackScript.",
            "schema": {
              "$ref": "#/definitions/StackScript"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "StackScript successfully created.",
            "schema": {
              "$ref": "#/definitions/StackScript"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/stackscripts/{stackscriptId}": {
      "get": {
        "description": "Returns all of the information about a specified StackScript, including the contents of the script.\n",
        "summary": "getStackScript",
        "tags": ["StackScripts"],
        "operationId": "LinodeStackscriptsByStackscriptIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stackscriptId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the StackScript to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single StackScript.",
            "schema": {
              "$ref": "#/definitions/StackScript"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a StackScript.\n\n**Once a StackScript is made public, it cannot be made private.**\n",
        "summary": "updateStackScript",
        "tags": ["StackScripts"],
        "operationId": "LinodeStackscriptsByStackscriptIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stackscriptId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the StackScript to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/StackScript"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "StackScript was successfully modified.",
            "schema": {
              "$ref": "#/definitions/StackScript"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a private StackScript you have permission to `read_write`. You cannot delete a public StackScript.\n",
        "summary": "deleteStackScript",
        "tags": ["StackScripts"],
        "operationId": "LinodeStackscriptsByStackscriptIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stackscriptId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the StackScript to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "StackScript was deleted.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/types": {
      "get": {
        "description": "Returns collection of Linode Types, including pricing and specifications for each Type. These are used when [creating](#operation/createLinodeInstance) or [resizing](#operation/resizeLinodeInstance) Linodes.\n",
        "summary": "getLinodeTypes",
        "tags": ["Linode Types"],
        "operationId": "LinodeTypesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A collection of Linode Types.",
            "schema": {
              "$ref": "#/definitions/LinodeTypesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/linode/types/{typeId}": {
      "get": {
        "description": "Returns information about a specific Linode Type, including pricing and specifications. This is used when [creating](#operation/createLinodeInstance) or [resizing](#operation/resizeLinodeInstance) Linodes.\n",
        "summary": "getLinodeType",
        "tags": ["Linode Types"],
        "operationId": "LinodeTypesByTypeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "typeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the Linode Type to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single Linode Type.",
            "schema": {
              "$ref": "#/definitions/LinodeType"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/longview/clients": {
      "get": {
        "description": "Returns a paginated list of Longview Clients you have access to. Longview Client is used to monitor stats on your Linode with the help of the Longview Client application.\n",
        "summary": "getLongviewClients",
        "tags": ["Longview"],
        "operationId": "LongviewClientsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Longview Clients.",
            "schema": {
              "$ref": "#/definitions/LongviewClientsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Longview Client.  This Client will not begin monitoring the status of your server until you configure the Longview Client application on your Linode using the returning `install_code` and `api_key`.\n",
        "summary": "createLongviewClient",
        "tags": ["Longview"],
        "operationId": "LongviewClientsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the LongviewClient to create.",
            "schema": {
              "$ref": "#/definitions/LongviewClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Longview Client created successfully.",
            "schema": {
              "$ref": "#/definitions/LongviewClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/longview/clients/{clientId}": {
      "get": {
        "description": "Returns a single Longview Client you can access.\n",
        "summary": "getLongviewClient",
        "tags": ["Longview"],
        "operationId": "LongviewClientsByClientIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The Longview Client ID to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Longview Client.",
            "schema": {
              "$ref": "#/definitions/LongviewClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a Longview Client.  This cannot update how it monitors your server; use the Longview Client application on your Linode for monitoring configuration.\n",
        "summary": "updateLongviewClient",
        "tags": ["Longview"],
        "operationId": "LongviewClientsByClientIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The Longview Client ID to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/LongviewClient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Longview Client updated successfully.",
            "schema": {
              "$ref": "#/definitions/LongviewClient"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Longview Client from your Account.\n\n**All information stored for this client will be lost.**\n\nThis _does not_ uninstall the Longview Client application for your Linode - you must do that manually.\n",
        "summary": "deleteLongviewClient",
        "tags": ["Longview"],
        "operationId": "LongviewClientsByClientIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The Longview Client ID to access."
          }
        ],
        "responses": {
          "200": {
            "description": "Longview Client deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/longview/subscriptions": {
      "get": {
        "description": "Returns a paginated list of available Longview Subscriptions. This is a public endpoint and requires no authentication.\n",
        "summary": "getLongviewSubscriptions",
        "tags": ["Longview"],
        "operationId": "LongviewSubscriptionsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Longview Subscriptions.",
            "schema": {
              "$ref": "#/definitions/LongviewSubscriptionsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/longview/subscriptions/{subscriptionId}": {
      "get": {
        "description": "Returns a single LongviewSubscription object.  This is a public endpoint and requires no authentication.\n",
        "summary": "getLongviewSubscription",
        "tags": ["Longview"],
        "operationId": "LongviewSubscriptionsBySubscriptionIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Longview Subscription to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Longview Subscription.",
            "schema": {
              "$ref": "#/definitions/LongviewSubscription"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/contacts": {
      "get": {
        "description": "Returns a paginated list of Managed Contacts on your Account.\n",
        "summary": "getManagedContacts",
        "tags": ["Managed"],
        "operationId": "ManagedContactsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of ManagedContacts",
            "schema": {
              "$ref": "#/definitions/ManagedContactsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Managed Contact.  A Managed Contact is someone Linode special forces can contact in the course of attempting to resolve an issue with a Managed Service.\n",
        "summary": "createManagedContact",
        "tags": ["Managed"],
        "operationId": "ManagedContactsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the contact to create.",
            "schema": {
              "$ref": "#/definitions/ManagedContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact created.",
            "schema": {
              "$ref": "#/definitions/ManagedContact"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/contacts/{contactId}": {
      "get": {
        "description": "Returns a single Managed Contact.\n",
        "summary": "getManagedContact",
        "tags": ["Managed"],
        "operationId": "ManagedContactsByContactIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the contact to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed Contact.",
            "schema": {
              "$ref": "#/definitions/ManagedContact"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates information about a Managed Contact.\n",
        "summary": "updateManagedContact",
        "tags": ["Managed"],
        "operationId": "ManagedContactsByContactIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the contact to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/ManagedContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact updated successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedContact"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Managed Contact.\n",
        "summary": "deleteManagedContact",
        "tags": ["Managed"],
        "operationId": "ManagedContactsByContactIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the contact to access."
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/credentials": {
      "get": {
        "description": "Returns a paginated list of Managed Credentials on your Account.\n",
        "summary": "getManagedCredentials",
        "tags": ["Managed"],
        "operationId": "ManagedCredentialsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of ManagedCredentials",
            "schema": {
              "$ref": "#/definitions/ManagedCredentialsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Managed Credential. A Managed Credential is stored securely to allow Linode special forces to access your Managed Services and resolve issues.\n",
        "summary": "createManagedCredential",
        "tags": ["Managed"],
        "operationId": "ManagedCredentialsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the Credential to create.",
            "schema": {
              "$ref": "#/definitions/ManagedCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credential created.",
            "schema": {
              "$ref": "#/definitions/ManagedCredential"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/credentials/{credentialId}": {
      "get": {
        "description": "Returns a single Managed Credential.\n",
        "summary": "getManagedCredential",
        "tags": ["Managed"],
        "operationId": "ManagedCredentialsByCredentialIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Credential to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed Credential.",
            "schema": {
              "$ref": "#/definitions/ManagedCredential"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates information about a Managed Credential.\n",
        "summary": "updateManagedCredential",
        "tags": ["Managed"],
        "operationId": "ManagedCredentialsByCredentialIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Credential to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/ManagedCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credential updated successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCredential"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/credentials/{credentialId}/revoke": {
      "post": {
        "description": "Deletes a Managed Credential.  Linode special forces will no longer have access to this Credential when attempting to resolve issues.\n",
        "summary": "deleteManagedCredential",
        "tags": ["Managed"],
        "operationId": "ManagedCredentialsRevokeByCredentialIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "credentialId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Credential to access."
          }
        ],
        "responses": {
          "200": {
            "description": "Credential deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/issues": {
      "get": {
        "description": "Returns a paginated list of recent and ongoing issues detected on your Managed Services.\n",
        "summary": "getManagedIssues",
        "tags": ["Managed"],
        "operationId": "ManagedIssuesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of open or ongoing Managed Issues.\n",
            "schema": {
              "$ref": "#/definitions/ManagedIssuesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/issues/{issueId}": {
      "get": {
        "description": "Returns a single Issue that is impacting or did impact one of your Managed Services.\n",
        "summary": "getManagedIssue",
        "tags": ["Managed"],
        "operationId": "ManagedIssuesByIssueIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "issueId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The Issue to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested issue.",
            "schema": {
              "$ref": "#/definitions/ManagedIssue"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/linode-settings": {
      "get": {
        "description": "Returns a paginated list of Managed Settings for your Linodes. There will be one entry per Linode on your Account.\n",
        "summary": "getManagedLinodeSettings",
        "tags": ["Managed"],
        "operationId": "ManagedLinodeSettingsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Managed settings for your Linodes.\n",
            "schema": {
              "$ref": "#/definitions/ManagedLinodeSettingsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/linode-settings/{linodeId}": {
      "get": {
        "description": "Returns a single Linode's Managed settings.\n",
        "summary": "getManagedLinodeSetting",
        "tags": ["Managed"],
        "operationId": "ManagedLinodeSettingsByLinodeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The Linode ID whose settings we are accessing."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Linode's Managed settings.",
            "schema": {
              "$ref": "#/definitions/ManagedLinodeSettings"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a single Linode's Managed settings.\n",
        "summary": "updateManagedLinodeSetting",
        "tags": ["Managed"],
        "operationId": "ManagedLinodeSettingsByLinodeIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "linodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The Linode ID whose settings we are accessing."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The settings to update.",
            "schema": {
              "$ref": "#/definitions/ManagedLinodeSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings updated successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedLinodeSettings"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/services": {
      "get": {
        "description": "Returns a paginated list of Managed Services on your Account. These are the services Linode Managed is monitoring and will report and attempt to resolve issues with.\n",
        "summary": "getManagedServices",
        "tags": ["Managed"],
        "operationId": "ManagedServicesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A paginated list of Managed Services",
            "schema": {
              "$ref": "#/definitions/ManagedServicesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Managed Service. Linode Managed will being monitoring this service and reporting and attempting to resolve any Issues.\n",
        "summary": "createManagedService",
        "tags": ["Managed"],
        "operationId": "ManagedServicesPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the service to monitor.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service created.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/services/{serviceId}": {
      "get": {
        "description": "Returns information about a single Managed Service on your Account.\n",
        "summary": "getManagedService",
        "tags": ["Managed"],
        "operationId": "ManagedServicesByServiceIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Managed Service to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Managed Service.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates information about a Managed Service.\n",
        "summary": "updateManagedService",
        "tags": ["Managed"],
        "operationId": "ManagedServicesByServiceIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Managed Service to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service updated successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Managed Service.  This service will no longer be monitored by Linode Managed.\n",
        "summary": "deleteManagedService",
        "tags": ["Managed"],
        "operationId": "ManagedServicesByServiceIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Managed Service to access."
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/services/{serviceId}/disable": {
      "post": {
        "description": "Temporarily disables monitoring of a Managed Service.\n",
        "summary": "disableManagedService",
        "tags": ["Managed"],
        "operationId": "ManagedServicesDisableByServiceIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Managed Service to disable."
          }
        ],
        "responses": {
          "200": {
            "description": "Service disabled.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/managed/services/{serviceId}/enable": {
      "post": {
        "description": "Enables monitoring of a Managed Service.\n",
        "summary": "enableManagedService",
        "tags": ["Managed"],
        "operationId": "ManagedServicesEnableByServiceIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Managed Service to enable."
          }
        ],
        "responses": {
          "200": {
            "description": "Service enabled.",
            "schema": {
              "$ref": "#/definitions/ManagedService"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/networking/ips": {
      "get": {
        "description": "Returns a paginated list of IP Addresses on your Account, excluding private addresses.\n",
        "summary": "getIPs",
        "tags": ["Networking"],
        "operationId": "NetworkingIpsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A paginated list of IP Addresses.",
            "schema": {
              "$ref": "#/definitions/NetworkingIpsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Allocates a new IPv4 Address on your Account. The Linode must be configured to support additional addresses - please [open a support ticket](#operation/createTicket) requesting additional addresses before attempting allocation.\n",
        "summary": "allocateIP",
        "tags": ["Networking"],
        "operationId": "NetworkingIpsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the address you are creating.",
            "schema": {
              "$ref": "#/definitions/NetworkingIpsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IP Address allocated successfully.",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/networking/ips/{address}": {
      "get": {
        "description": "Returns information about a single IP Address on your Account.\n",
        "summary": "getIP",
        "tags": ["Networking"],
        "operationId": "NetworkingIpsByAddressGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The address to operate on."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested IP Address.",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Sets RDNS on an IP Address. Forward DNS must already be set up for reverse DNS to be applied. If you set the RDNS to `null` for public IPv4 addresses, it will be reset to the default _members.linode.com_ RDNS value.\n",
        "summary": "updateIP",
        "tags": ["Networking"],
        "operationId": "NetworkingIpsByAddressPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The address to operate on."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The information to update.",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RDNS set successfully",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/networking/ipv4/assign": {
      "post": {
        "description": "Assign multiple IPs to multiple Linodes in one Region. This allows swapping, shuffling, or otherwise reorganizing IPv4 Addresses to your Linodes.  When the assignment is finished, all Linodes must end up with at least one public IPv4 and no more than one private IPv4.\n",
        "summary": "assignIPs",
        "tags": ["Networking"],
        "operationId": "NetworkingIpv4AssignPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about what IPv4 address to assign, and to which Linode.",
            "schema": {
              "$ref": "#/definitions/NetworkingIpv4AssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All assignments completed successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/networking/ipv4/share": {
      "post": {
        "description": "Configure shared IPs.  A shared IP may be brought up on a Linode other than the one it lists in its response.  This can be used to allow one Linode to begin serving requests should another become unresponsive.\n",
        "summary": "shareIPs",
        "tags": ["Networking"],
        "operationId": "NetworkingIpv4SharePost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about what IPs to share with which Linode.",
            "schema": {
              "$ref": "#/definitions/NetworkingIpv4ShareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sharing configured successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/networking/ipv6/pools": {
      "get": {
        "description": "Displays the IPv6 pools on your Account.\n",
        "summary": "getIPv6Pools",
        "tags": ["Networking"],
        "operationId": "NetworkingIpv6PoolsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "The IPv6 pools on your Account.",
            "schema": {
              "$ref": "#/definitions/NetworkingIpv6PoolsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/networking/ipv6/ranges": {
      "get": {
        "description": "Displays the IPv6 ranges on your Account.\n",
        "summary": "getIPv6Ranges",
        "tags": ["Networking"],
        "operationId": "NetworkingIpv6RangesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "The IPv6 ranges on your Account.",
            "schema": {
              "$ref": "#/definitions/NetworkingIpv6RangesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers": {
      "get": {
        "description": "Returns a paginated list of NodeBalancers you have access to.\n",
        "summary": "getNodeBalancers",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NodeBalancers.",
            "schema": {
              "$ref": "#/definitions/NodebalancersResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a NodeBalancer in the requested Region. This NodeBalancer will not start serving requests until it is configured.\n",
        "summary": "createNodeBalancer",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the NodeBalancer to create.",
            "schema": {
              "$ref": "#/definitions/NodebalancersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer created successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancer"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}": {
      "get": {
        "description": "Returns a single NodeBalancer you can access.\n",
        "summary": "getNodeBalancer",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersByNodeBalancerIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested NodeBalancer object.",
            "schema": {
              "$ref": "#/definitions/NodeBalancer"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates information about a NodeBalancer you can access.\n",
        "summary": "updateNodeBalancer",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersByNodeBalancerIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The information to update.",
            "schema": {
              "$ref": "#/definitions/NodeBalancer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer updated successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancer"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a NodeBalancer.\n\n**This is a destructive action and cannot be undone.**\n\nDeleting a NodeBalancer will also delete all associated Configs and Nodes, although the backend servers represented by the Nodes will not be changed or removed. Deleting a NodeBalancer will cause you to lose access to the IP Addresses assigned to this NodeBalancer.\n",
        "summary": "deleteNodeBalancer",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersByNodeBalancerIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs": {
      "get": {
        "description": "Returns a paginated list of NodeBalancer Configs associated with this NodeBalancer. NodeBalancer Configs represent individual ports that this NodeBalancer will accept traffic on, one Config per port.\n\nFor example, if you wanted to accept standard HTTP traffic, you would need a Config listening on port 80.\n",
        "summary": "getNodeBalancerConfigs",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsByNodeBalancerIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginted list of NodeBalancer Configs",
            "schema": {
              "$ref": "#/definitions/NodebalancersConfigsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a NodeBalancer Config, which allows the NodeBalancer to accept traffic on a new port. You will need to add NodeBalancer Nodes to the new Config before it can actually serve requests.\n",
        "summary": "createNodeBalancerConfig",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsByNodeBalancerIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Information about the port to configure.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config created successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerConfig"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}": {
      "get": {
        "description": "Returns configuration information for a single port of this NodeBalancer.\n",
        "summary": "getNodeBalancerConfig",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsByNodeBalancerIdAndConfigIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the config to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested NodeBalancer config.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerConfig"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates the configuration for a single port on a NodeBalancer.\n",
        "summary": "updateNodeBalancerConfig",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsByNodeBalancerIdAndConfigIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the config to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config updated successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerConfig"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes the Config for a port of this NodeBalancer.\n\n**This cannot be undone.**\n\nOnce completed, this NodeBalancer will no longer respond to requests on the given port. This also deletes all associated NodeBalancerNodes, but the Linodes they were routing traffic to will be unchanged and will not be removed.\n",
        "summary": "deleteNodeBalancerConfig",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsByNodeBalancerIdAndConfigIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the config to access."
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer Config deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}/rebuild": {
      "post": {
        "description": "Rebuilds a NodeBalancer Config and its Nodes that you have permission to modify.\n",
        "summary": "rebuildNodeBalancerConfig",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsRebuildByNodeBalancerIdAndConfigIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Config to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the NodeBalancer Config to rebuild.",
            "schema": {
              "$ref": "#/definitions/NodebalancersConfigsRebuildRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NodeBalancer created successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancer"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}/nodes": {
      "get": {
        "description": "Returns a paginated list of NodeBalancer nodes associated with this Config. These are the backends that will be sent traffic for this port.\n",
        "summary": "getNodeBalancerConfigNodes",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsNodesByNodeBalancerIdAndConfigIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer config to access."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NodeBalancer nodes.",
            "schema": {
              "$ref": "#/definitions/NodebalancersConfigsNodesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a NodeBalancer Node, a backend that can accept traffic for this NodeBalancer Config. Nodes are routed requests on the configured port based on their status.\n",
        "summary": "createNodeBalancerNode",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsNodesByNodeBalancerIdAndConfigIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer config to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the Node to create.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node created successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerNode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}/configs/{configId}/nodes/{nodeId}": {
      "get": {
        "description": "Returns information about a single Node, a backend for this NodeBalancer's configured port.\n",
        "summary": "getNodeBalancerNode",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsNodesNodeIdByNodeBalancerIdAndConfigIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Config to access"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Node to access"
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of NodeBalancer nodes.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerNode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates information about a Node, a backend for this NodeBalancer's configured port.\n",
        "summary": "updateNodeBalancerNode",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsNodesNodeIdByNodeBalancerIdAndConfigIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Config to access"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Node to access"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node updated successfully.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerNode"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Node from this Config. This backend will no longer receive traffic for the configured port of this NodeBalancer.\n\nThis does not change or remove the Linode whose address was used in the creation of this Node.\n",
        "summary": "deleteNodeBalancerConfigNode",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersConfigsNodesNodeIdByNodeBalancerIdAndConfigIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Config to access"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Node to access"
          }
        ],
        "responses": {
          "200": {
            "description": "Node deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/nodebalancers/{nodeBalancerId}/stats": {
      "get": {
        "description": "Returns detailed statistics about the requested NodeBalancer.\n",
        "summary": "View NodeBalancer Statistics",
        "tags": ["NodeBalancers"],
        "operationId": "NodebalancersStatsByNodeBalancerIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nodeBalancerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the NodeBalancer to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested stats.",
            "schema": {
              "$ref": "#/definitions/NodeBalancerStats"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "description": "Returns information about the current User. This can be used to see who is acting in applications where more than one token is managed. For example, in third-party OAuth applications.\n\nThis endpoint is always accessible, no matter what OAuth scopes the acting token has.\n",
        "summary": "getProfile",
        "tags": ["Profile"],
        "operationId": "ProfileGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Profile response.",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Update information in your Profile.  This endpoint requires the \"account:read_write\" OAuth Scope.\n",
        "summary": "updateProfile",
        "tags": ["Profile"],
        "operationId": "ProfilePut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully.",
            "schema": {
              "$ref": "#/definitions/Profile"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/apps": {
      "get": {
        "description": "This is a collection of OAuth apps that you've given access to your Account, and includes the level of access granted.\n",
        "summary": "getProfileApps",
        "tags": ["Profile"],
        "operationId": "ProfileAppsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of apps you've authorized.\n",
            "schema": {
              "$ref": "#/definitions/ProfileAppsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/apps/{appId}": {
      "get": {
        "description": "Returns information about a single app you've authorized to access your Account.\n",
        "summary": "getProfileApp",
        "tags": ["Profile"],
        "operationId": "ProfileAppsByAppIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The authorized app ID to manage."
          }
        ],
        "responses": {
          "200": {
            "description": "The app requested.",
            "schema": {
              "$ref": "#/definitions/AuthorizedApp"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Expires this app token. This token may no longer be used to access your Account.\n",
        "summary": "deleteProfileApp",
        "tags": ["Profile"],
        "operationId": "ProfileAppsByAppIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The authorized app ID to manage."
          }
        ],
        "responses": {
          "200": {
            "description": "App's authorization has been revoked.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/grants": {
      "get": {
        "description": "This returns a GrantsResponse describing what the acting User has been granted access to.  For unrestricted users, this will return a  204 and no body because unrestricted users have access to everything without grants.  This will not return information about entities you do not have access to.  This endpoint is useful when writing third-party OAuth applications to see what options you should present to the acting User.\n\nFor example, if they do not have `global.add_linodes`, you might not display a button to deploy a new Linode.\n\nAny client may access this endpoint; no OAuth scopes are required.\n",
        "summary": "getProfileGrants",
        "tags": ["Profile"],
        "operationId": "ProfileGrantsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "204": {
            "description": "GrantsResponse",
            "schema": {
              "$ref": "#/definitions/GrantsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/tfa-disable": {
      "post": {
        "description": "Disables Two Factor Authentication for your User. Once successful, login attempts from untrusted computers will only require a password before being successful. This is less secure, and is discouraged.\n",
        "summary": "tfaDisable",
        "tags": ["Profile"],
        "operationId": "ProfileTfaDisablePost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "TFA disabled.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/tfa-enable": {
      "post": {
        "description": "Generates a Two Factor secret for your User. TFA will not be enabled until you have successfully confirmed the code you were given with [tfa-enable-confirm](#operation/tfaConfirm) (see below). Once enabled, logins from untrusted computers will be required to provide a TFA code before they are successful.\n",
        "summary": "tfaEnable",
        "tags": ["Profile"],
        "operationId": "ProfileTfaEnablePost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Two Factor secret generated",
            "schema": {
              "$ref": "#/definitions/ProfileTfaEnableResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/tfa-enable-confirm": {
      "post": {
        "description": "Confirms that you can successfully generate Two Factor codes and enables TFA on your Account. Once this is complete, login attempts from untrusted computers will be required to provide a Two Factor code before they are successful.\n",
        "summary": "tfaConfirm",
        "tags": ["Profile"],
        "operationId": "ProfileTfaEnableConfirmPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The Two Factor code you generated with your Two Factor secret.",
            "schema": {
              "$ref": "#/definitions/ProfileTfaEnableConfirmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TFA enabled successfully",
            "schema": {
              "$ref": "#/definitions/ProfileTfaEnableConfirmResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/tokens": {
      "get": {
        "description": "Returns a paginated list of Personal Access Tokens currently active for your User.\n",
        "summary": "getPersonalAccessTokens",
        "tags": ["Profile"],
        "operationId": "ProfileTokensGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A paginated list of active tokens.",
            "schema": {
              "$ref": "#/definitions/ProfileTokensResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Personal Access Token for your User. The raw token will be returned in the response, but will never be returned again afterward so be sure to take note of it. You may create a token with _at most_ the scopes of your current token. The created token will be able to access your Account until the given expiry, or until it is revoked.\n",
        "summary": "createPersonalAccessToken",
        "tags": ["Profile"],
        "operationId": "ProfileTokensPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Information about the requested token.",
            "schema": {
              "$ref": "#/definitions/ProfileTokensRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token created successfully.",
            "schema": {
              "$ref": "#/definitions/PersonalAccessToken"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/tokens/{tokenId}": {
      "get": {
        "description": "Returns a single Personal Access Token.\n",
        "summary": "getPersonalAccessToken",
        "tags": ["Profile"],
        "operationId": "ProfileTokensByTokenIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the token to access."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested token.",
            "schema": {
              "$ref": "#/definitions/PersonalAccessToken"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a Personal Access Token.\n",
        "summary": "updatePersonalAccessToken",
        "tags": ["Profile"],
        "operationId": "ProfileTokensByTokenIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the token to access."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/PersonalAccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token updated successfully.",
            "schema": {
              "$ref": "#/definitions/PersonalAccessToken"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Revokes a Personal Access Token. The token will be invalidated immediately, and requests using that token will fail with a 401. It is possible to revoke access to the token making the request to revoke a token, but keep in mind that doing so could lose you access to the api and require you to create a new token through some other means.\n",
        "summary": "deletePersonalAccessToken",
        "tags": ["Profile"],
        "operationId": "ProfileTokensByTokenIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the token to access."
          }
        ],
        "responses": {
          "200": {
            "description": "Token revoked successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/devices": {
      "get": {
        "description": "Returns a paginated list of active TrustedDevices for your User. Browsers with an active Remember Me Session are logged into your account until the session expires or is revoked.\n",
        "summary": "getDevices",
        "tags": ["Profile"],
        "operationId": "ProfileDevicesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a paginated list of TrustedDevice objects.",
            "schema": {
              "$ref": "#/definitions/ProfileDevicesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/devices/{deviceId}": {
      "get": {
        "description": "Returns a single active TrustedDevice for your User.\n",
        "summary": "getTrustedDevice",
        "tags": ["Profile"],
        "operationId": "ProfileDevicesByDeviceIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the TrustedDevice"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested TrustedDevice object",
            "schema": {
              "$ref": "#/definitions/TrustedDevice"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Revoke an active TrustedDevice for your User.  Once a TrustedDevice is revoked, this device will have to log in again before accessing your Linode account.\n",
        "summary": "revokeTrustedDevice",
        "tags": ["Profile"],
        "operationId": "ProfileDevicesByDeviceIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the TrustedDevice"
          }
        ],
        "responses": {
          "200": {
            "description": "Session revoked successfully",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/sshkeys": {
      "get": {
        "description": "Returns a collection of SSH Keys you've added to your Profile.\n",
        "summary": "getSSHKeys",
        "tags": ["Profile"],
        "operationId": "ProfileSshkeysGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of SSH Key objects.",
            "schema": {
              "$ref": "#/definitions/ProfileSshkeysResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Adds an SSH Key to your Account profile.\n",
        "summary": "addSSHKey",
        "tags": ["Profile"],
        "operationId": "ProfileSshkeysPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Add SSH Key",
            "schema": {
              "$ref": "#/definitions/SSHKeyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SSH Key associated successfully.",
            "schema": {
              "$ref": "#/definitions/SSHKey"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/profile/sshkeys/{sshKeyId}": {
      "get": {
        "description": "Returns a single SSH Key object identified by `id` that you have access to view.\n",
        "summary": "getSSHKey",
        "tags": ["Profile"],
        "operationId": "ProfileSshkeysBySshKeyIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sshKeyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the SSHKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An SSH Key object",
            "schema": {
              "$ref": "#/definitions/SSHKey"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates an SSH Key that you have permission to `read_write`.\n",
        "summary": "updateSSHKey",
        "tags": ["Profile"],
        "operationId": "ProfileSshkeysBySshKeyIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sshKeyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the SSHKey"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The fields to update.",
            "schema": {
              "$ref": "#/definitions/SSHKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SSH Key updated successfully.",
            "schema": {
              "$ref": "#/definitions/SSHKey"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an SSH Key you have access to.\n\n**Note:** deleting an SSH Key will *not* remove it from any Linode or Disk that was deployed with `authorized_keys`. In those cases, the keys must be manually deleted on the Linode or Disk. This endpoint will only delete the key's association from your Profile.\n",
        "summary": "deleteSSHKey",
        "tags": ["Profile"],
        "operationId": "ProfileSshkeysBySshKeyIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sshKeyId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the SSHKey"
          }
        ],
        "responses": {
          "200": {
            "description": "SSH Key deleted successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "description": "Lists the Regions available for Linode services. Not all services are guaranteed to be\navailable in all Regions.\n",
        "summary": "getRegions",
        "tags": ["Regions"],
        "operationId": "RegionsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns an array of Regions.",
            "schema": {
              "$ref": "#/definitions/RegionsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/regions/{regionId}": {
      "get": {
        "description": "Returns a single Region.\n",
        "summary": "getRegion",
        "tags": ["Regions"],
        "operationId": "RegionsByRegionIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the Region to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "A single Region object.",
            "schema": {
              "$ref": "#/definitions/Region"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/support/tickets": {
      "get": {
        "description": "Returns a collection of Support Tickets on your Account. Support Tickets can be both tickets you open with Linode for support, as well as tickets generated by Linode regarding your Account.\nThis collection includes all Support Tickets generated on your Account, with open tickets returned first.\n",
        "summary": "getTickets",
        "tags": ["Support"],
        "operationId": "SupportTicketsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of SupportTicket objects.",
            "schema": {
              "$ref": "#/definitions/SupportTicketsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Open a Support Ticket.\nOnly one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.\n",
        "summary": "createTicket",
        "tags": ["Support"],
        "operationId": "SupportTicketsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "Open a Support Ticket.",
            "schema": {
              "$ref": "#/definitions/SupportTicketRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Support Ticket opened.",
            "schema": {
              "$ref": "#/definitions/SupportTicket"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/support/tickets/{ticketId}": {
      "get": {
        "description": "Returns a Support Ticket under your Account.\n",
        "summary": "getTicket",
        "tags": ["Support"],
        "operationId": "SupportTicketsByTicketIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Support Ticket."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single SupportTicket object.",
            "schema": {
              "$ref": "#/definitions/SupportTicket"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/support/tickets/{ticketId}/attachments": {
      "post": {
        "description": "Adds a file attachment to an existing Support Ticket on your Account. File attachments are used to assist our Support team in resolving your Ticket. Examples of attachments are screen shots and text files that provide additional information.\nNote: Accepted file extensions include: .gif, .jpg, .jpeg, .pjpg, .pjpeg, .tif, .tiff, .png, .pdf, or .txt.\n",
        "summary": "createTicketAttachment",
        "tags": ["Support"],
        "operationId": "SupportTicketsAttachmentsByTicketIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Support Ticket."
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "The local, absolute path to the file you want to attach to your Support Ticket."
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment created.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/support/tickets/{ticketId}/close": {
      "post": {
        "description": "Closes a Support Ticket you have access to modify.\n",
        "summary": "closeTicket",
        "tags": ["Support"],
        "operationId": "SupportTicketsCloseByTicketIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Support Ticket."
          }
        ],
        "responses": {
          "200": {
            "description": "Support Ticket closed successfully.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/support/tickets/{ticketId}/replies": {
      "get": {
        "description": "Returns a collection of replies to a Support Ticket on your Account.\n",
        "summary": "getTicketReplies",
        "tags": ["Support"],
        "operationId": "SupportTicketsRepliesByTicketIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Support Ticket."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a paginated list of SupportTicketReply objects.",
            "schema": {
              "$ref": "#/definitions/SupportTicketsRepliesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a reply to an existing Support Ticket.\n",
        "summary": "createTicketReply",
        "tags": ["Support"],
        "operationId": "SupportTicketsRepliesByTicketIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The ID of the Support Ticket."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Add a reply.",
            "schema": {
              "$ref": "#/definitions/SupportTicketsRepliesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reply created.",
            "schema": {
              "$ref": "#/definitions/SupportTicketReply"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "description": "Tags are User-defined labels attached to objects in your Account, such as Linodes. They are used for specifying and grouping attributes of objects that are relevant to the User.\n\nThis endpoint returns a paginated list of Tags on your account.\n",
        "summary": "getTags",
        "tags": ["Tags"],
        "operationId": "TagsGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of Tags",
            "schema": {
              "$ref": "#/definitions/TagsResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new Tag and optionally tags requested objects with it immediately.\n\n**Important**: You must be an unrestricted User in order to add or modify Tags.\n",
        "summary": "createTag",
        "tags": ["Tags"],
        "operationId": "TagsPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "The tag to create, and optionally the objects to tag.",
            "schema": {
              "$ref": "#/definitions/TagsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The new Tag.",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/tags/{label}": {
      "get": {
        "description": "Returns a paginated list of all objects you've tagged with the requested Tag. This is a mixed collection of all object types.\n",
        "summary": "getTaggedObjects",
        "tags": ["Tags"],
        "operationId": "TagsByLabelGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "label",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of objects, organized by type, that have been tagged with the requested Tag.\n",
            "schema": {
              "$ref": "#/definitions/TagsResponse1"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Remove a Tag from all objects and delete it.\n\n**Important**: You must be an unrestricted User in order to add or modify Tags.\n",
        "summary": "deleteTag",
        "tags": ["Tags"],
        "operationId": "TagsByLabelDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "label",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/volumes": {
      "get": {
        "description": "Returns a paginated list of Volumes you have permission to view.\n",
        "summary": "getVolumes",
        "tags": ["Volumes"],
        "operationId": "VolumesGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all Volumes on your Account.",
            "schema": {
              "$ref": "#/definitions/VolumesResponse"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "post": {
        "description": "Creates a Volume on your Account. In order for this to complete successfully, your User must have the `add_volumes` grant. Creating a new Volume will start accruing additional charges on your account.\n",
        "summary": "createVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The requested initial state of a new Volume.",
            "schema": {
              "$ref": "#/definitions/VolumesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creating Volume.\n",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/volumes/{volumeId}": {
      "get": {
        "description": "Get information about a single Volume.\n",
        "summary": "getVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesByVolumeIdGet",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to look up."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The page of a collection to return."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 25.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of items to return per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single Volume object.",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "put": {
        "description": "Updates a Volume that you have permission to `read_write`.\n",
        "summary": "updateVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesByVolumeIdPut",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to look up."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "If any updated field fails to pass validation, the Volume will not be updated.",
            "schema": {
              "$ref": "#/definitions/VolumesRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated Volume.",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Volume you have permission to `read_write`.\n\n**Deleting a Volume is a destructive action and cannot be undone.**\n\nDeleting stops billing for the Volume. You will be billed for time used within\nthe billing period the Volume was active.\n",
        "summary": "deleteVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesByVolumeIdDelete",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Volume deletion successful.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/volumes/{volumeId}/attach": {
      "post": {
        "description": "Attaches a Volume on your Account to an existing Linode on your Account. In order for this request to complete successfully, your User must have `read_only` or `read_write` permission to the Volume and `read_write` permission to the Linode. Additionally, the Volume and Linode must be located in the same Region.\n",
        "summary": "attachVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesAttachByVolumeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to attach."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Volume to attach to a Linode.",
            "schema": {
              "$ref": "#/definitions/VolumesAttachRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volume was attached to a Linode.",
            "schema": {
              "$ref": "#/definitions/Volume"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/volumes/{volumeId}/clone": {
      "post": {
        "description": "Creates a Volume on your Account. In order for this request to complete successfully, your User must have the `add_volumes` grant. The new Volume will have the same size and data as the source Volume. Creating a new Volume will incur a charge on your Account.\n",
        "summary": "cloneVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesCloneByVolumeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to clone."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The requested state your Volume will be cloned into.",
            "schema": {
              "$ref": "#/definitions/VolumesCloneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clone started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/volumes/{volumeId}/detach": {
      "post": {
        "description": "Detaches a Volume on your Account from a Linode on your Account. In order for this request to complete successfully, your User must have `read_write` access to the Volume and `read_write` access to the Linode.\n",
        "summary": "detachVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesDetachByVolumeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to detach."
          }
        ],
        "responses": {
          "200": {
            "description": "Volume was detached from a Linode.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    },
    "/volumes/{volumeId}/resize": {
      "post": {
        "description": "Resize an existing Volume on your Account. In order for this request to complete successfully, your User must have the `read_write` permissions to the Volume.\n* Volumes can only be resized up.\n",
        "summary": "resizeVolume",
        "tags": ["Volumes"],
        "operationId": "VolumesResizeByVolumeIdPost",
        "deprecated": false,
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "volumeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "ID of the Volume to resize."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The requested size to increase your Volume to.",
            "schema": {
              "$ref": "#/definitions/VolumesResizeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Volume resize started.",
            "schema": {
              "type": "object"
            },
            "headers": {}
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/VolumesResize0Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "title": "Account",
      "description": "Account object",
      "type": "object",
      "properties": {
        "address_1": {
          "description": "First line of this Account's billing address.",
          "example": "123 Main Street",
          "type": "string",
          "maxLength": 64
        },
        "address_2": {
          "description": "Second line of this Account's billing address.",
          "example": "Suite A",
          "type": "string",
          "maxLength": 64
        },
        "balance": {
          "description": "This Account's balance, in US dollars.",
          "example": 200,
          "type": "number",
          "format": "double"
        },
        "city": {
          "description": "The city for this Account's billing address.",
          "example": "Philadelphia",
          "type": "string",
          "maxLength": 24
        },
        "credit_card": {
          "$ref": "#/definitions/CreditCard2"
        },
        "company": {
          "description": "The company name associated with this Account.",
          "example": "Linode LLC",
          "type": "string",
          "maxLength": 128
        },
        "country": {
          "description": "The two-letter country code of this Account's billing address.",
          "example": "US",
          "type": "string",
          "minLength": 2,
          "maxLength": 2
        },
        "email": {
          "description": "The email address of the person associated with this Account.",
          "example": "john.smith@linode.com",
          "type": "string",
          "maxLength": 128
        },
        "first_name": {
          "description": "The first name of the person associated with this Account.",
          "example": "John",
          "type": "string",
          "maxLength": 50
        },
        "last_name": {
          "description": "The last name of the person associated with this Account.",
          "example": "Smith",
          "type": "string",
          "maxLength": 50
        },
        "phone": {
          "description": "The phone number associated with this Account.",
          "example": "215-555-1212",
          "type": "string",
          "maxLength": 32
        },
        "state": {
          "description": "If billing address is in the United States, this is the State portion of the Account's billing address. If the address is outside the US, this is the Province associated with the Account's billing address.",
          "example": "Pennsylvania",
          "type": "string",
          "maxLength": 24
        },
        "tax_id": {
          "description": "The tax identification number associated with this Account, for tax calculations in some countries. If you do not live in a country that collects tax, this should be `null`.",
          "example": "ATU99999999",
          "type": "string",
          "maxLength": 100
        },
        "zip": {
          "description": "The zip code of this Account's billing address.",
          "example": "19102",
          "type": "string",
          "maxLength": 16
        }
      }
    },
    "AccountSettings": {
      "title": "AccountSettings",
      "description": "Account Settings object",
      "type": "object",
      "properties": {
        "managed": {
          "description": "Our 24/7 incident response service. This robust, multi-homed monitoring system distributes monitoring checks to ensure that your servers remain online and available at all times. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. Once you add a service to Linode Managed, we'll monitor it for connectivity, response, and total request time.",
          "example": true,
          "type": "boolean"
        },
        "longview_subscription": {
          "description": "The Longview Pro tier you are currently subscribed to. The value must a [Longview Subscription](#operation/getLongviewSubscriptions) ID or `null`.",
          "example": "longview-30",
          "type": "string"
        },
        "network_helper": {
          "description": "Enables network helper across all users by default for new Linodes and Linode Configs.",
          "example": false,
          "type": "boolean"
        },
        "backups_enabled": {
          "description": "Account-wide backups default.  If `true`, all Linodes created will automatically be enrolled in the Backups service.  If `false`, Linodes will not be enrolled by default, but may still be enrolled on creation or later.",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "AuthorizedApp": {
      "title": "AuthorizedApp",
      "description": "An application you have authorized access to your Account through OAuth.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This authorization's ID, used for revoking access.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The name of the application you've authorized.",
          "example": "example-app",
          "type": "string"
        },
        "thumbnail_url": {
          "description": "The URL at which this app's thumbnail may be accessed.",
          "type": "string"
        },
        "scopes": {
          "description": "The OAuth scopes this app was authorized with.  This defines what parts of your Account the app is allowed to access.",
          "example": "linodes:read_only",
          "type": "string"
        },
        "created": {
          "description": "When this app was authorized.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "expiry": {
          "description": "When this app's access token expires.  Please note that apps may still have active refresh tokens after this time passes.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "website": {
          "description": "The website where you can get more information about this app.",
          "example": "example.org",
          "type": "string"
        }
      }
    },
    "Backup": {
      "title": "Backup",
      "description": "An object representing a Backup or snapshot for a Linode with Backup service enabled.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Backup.",
          "example": 123456,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "created": {
          "description": "The date the Backup was taken.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "The date the Backup was most recently updated.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "finished": {
          "description": "The date the Backup completed.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "A label for Backups that are of type `snapshot`.",
          "example": "Webserver-Backup-2018",
          "type": "string"
        },
        "configs": {
          "description": "A list of the labels of the Configuration profiles that are part of the Backup.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disks": {
          "description": "A list of the disks that are part of the Backup.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk1"
          }
        }
      }
    },
    "CreditCard": {
      "title": "CreditCard",
      "description": "An object representing the credit card information you have on file with Linode to make Payments against your Account.",
      "type": "object",
      "properties": {
        "card_number": {
          "description": "Your credit card number. No spaces or dashes allowed.",
          "example": "4111111111111111",
          "type": "string",
          "minLength": 13,
          "maxLength": 23
        },
        "expiry_month": {
          "description": "A value from 1-12 representing the expiration month of your credit card.\n  * 1 = January\n  * 2 = February\n  * 3 = March\n  * Etc.",
          "example": 12,
          "type": "integer",
          "format": "int32"
        },
        "expiry_year": {
          "description": "A four-digit integer representing the expiration year of your credit card.\nThe combination of `expiry_month` and `expiry_year` must result in a month/year combination of the current month or in the future. An expiration date set in the past is invalid.",
          "example": 2020,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["card_number", "expiry_month", "expiry_year"]
    },
    "Device": {
      "title": "Device",
      "description": "Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only one type per slot allowed. Can be null.\nDevices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.",
      "type": "object",
      "properties": {
        "disk_id": {
          "description": "The Disk ID, or `null` if a Volume is assigned to this slot.",
          "example": 124458,
          "type": "integer",
          "format": "int32"
        },
        "volume_id": {
          "description": "The Volume ID, or `null` if a Disk is assigned to this slot.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Devices": {
      "title": "Devices",
      "type": "object",
      "properties": {
        "sda": {
          "$ref": "#/definitions/Device"
        },
        "sdb": {
          "$ref": "#/definitions/Device"
        },
        "sdc": {
          "$ref": "#/definitions/Device"
        },
        "sdd": {
          "$ref": "#/definitions/Device"
        },
        "sde": {
          "$ref": "#/definitions/Device"
        },
        "sdf": {
          "$ref": "#/definitions/Device"
        },
        "sdg": {
          "$ref": "#/definitions/Device"
        },
        "sdh": {
          "$ref": "#/definitions/Device"
        }
      }
    },
    "Disk": {
      "title": "Disk",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Disk's ID which must be provided for all operations impacting this Disk.",
          "example": 25674,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The Disk's label is for display purposes only.",
          "example": "Debian 9 Disk",
          "type": "string",
          "minLength": 1,
          "maxLength": 48
        },
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "size": {
          "description": "The size of the Disk in MB.",
          "example": 48640,
          "type": "integer",
          "format": "int32"
        },
        "filesystem": {
          "$ref": "#/definitions/filesystem"
        },
        "created": {
          "description": "When this Linode was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "When this Linode was last updated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DiskRequest": {
      "title": "DiskRequest",
      "description": "Disk object request.",
      "type": "object",
      "properties": {
        "size": {
          "example": 48640,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The Disk's label is for display purposes only.",
          "example": "Debian 9 Disk",
          "type": "string",
          "minLength": 1,
          "maxLength": 48
        },
        "filesystem": {
          "$ref": "#/definitions/filesystem"
        },
        "read_only": {
          "description": "If true, this Disk is read-only.",
          "example": false,
          "type": "boolean"
        },
        "image": {
          "description": "An Image ID to deploy the Disk from. Official Linode Images start with `linode/ `, while your Images start with `private/`.\nSee [/images](#operation/getImages) for more information on the Images available for you to use.",
          "example": "linode/debian9",
          "type": "string"
        },
        "authorized_keys": {
          "description": "A list of public SSH keys that will be automatically appended to the root user's `~/.ssh/authorized_keys` file.",
          "example": [
            "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorized_users": {
          "description": "A list of usernames that will have their SSH keys, if any, automatically appended to the root user's `~/.ssh/authorized_keys` file.",
          "example": ["myUser", "secondaryUser"],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "root_pass": {
          "description": "This will set the root user's password on the newly-created Linode.\nThe root password must conform to the following constraints:\n\n  * May only use alphanumerics, punctuation, spaces, and tabs.\n  * Must contain at least two of the following characters classes:\n    * Upper-case letters\n    * Lower-case letters\n    * Digits\n    * Punctuation",
          "example": "aComplexP@ssword",
          "type": "string",
          "minLength": 6,
          "maxLength": 128,
          "pattern": "^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[!\"#$%&'()*+,-.\\/:;<=>?@\\[\\]^_`{|}~\\\\]))|((?=.*[A-Z])(?=.*[!\"#$%&'()*+,-.\\/:;<=>?@\\[\\]^_`{|}~\\\\]))|((?=.*[0-9])(?=.*[!\"#$%&'()*+,-.\\/:;<=>?@\\[\\]^_`{|}~\\\\])))"
        },
        "stackscript_id": {
          "description": "A StackScript ID that will cause the referenced StackScript to be run during\ndeployment of this Linode. A compatible `image` is required to use a\nStackScript. To get a list of available StackScript and their permitted Images\nsee [/stackscripts](#operation/getStackScripts).\nThis field cannot be used when deploying from a Backup or a private Image.",
          "example": 10079,
          "type": "integer",
          "format": "int32"
        },
        "stackscript_data": {
          "description": "This field is required only if the StackScript being deployed requires input\ndata from the User for successful completion. See\n<a target=\"_top\" href=\"https://www.linode.com/docs/platform/stackscripts/#variables-and-udfs\">Variables and UDFs</a>\nfor more details. This field is required to be valid JSON.",
          "example": {
            "gh_username": "linode"
          },
          "type": "object"
        }
      },
      "required": ["size", "label"]
    },
    "Domain": {
      "title": "Domain",
      "description": "A domain zonefile in our DNS system.  You must own the domain name and tell your registrar to use Linode's nameservers in order for a domain in our system to be treated as authoritative.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Domain's unique ID",
          "example": 1234,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type1"
        },
        "domain": {
          "description": "The domain this Domain represents. These must be unique in our system; you cannot have two Domains representing the same domain.",
          "example": "example.org",
          "type": "string",
          "pattern": "([a-zA-Z0-9-_]+\\.)+([a-zA-Z]{2,3}\\.)?([a-zA-Z]{2,16}|XN--[a-zA-Z0-9]+)"
        },
        "group": {
          "description": "The group this Domain belongs to.  This is for display purposes only.",
          "type": "string",
          "minLength": 1,
          "maxLength": 50
        },
        "status": {
          "$ref": "#/definitions/Status2"
        },
        "description": {
          "description": "A description for this Domain. This is for display purposes only.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "soa_email": {
          "description": "Start of Authority email address. This is required for master Domains.",
          "example": "admin@example.org",
          "type": "string"
        },
        "retry_sec": {
          "description": "The interval, in seconds, at which a failed refresh should be retried. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.",
          "example": 300,
          "type": "integer",
          "format": "int32"
        },
        "master_ips": {
          "description": "The IP addresses representing the master DNS for this Domain.",
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "axfr_ips": {
          "description": "The list of IPs that may perform a zone transfer for this Domain. This is potentially dangerous, and should be set to an empty list unless you intend to use it.",
          "example": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expire_sec": {
          "description": "The amount of time in seconds that may pass before this Domain is no longer authoritative. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.",
          "example": 300,
          "type": "integer",
          "format": "int32"
        },
        "refresh_sec": {
          "description": "The amount of time in seconds before this Domain should be refreshed. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.",
          "example": 300,
          "type": "integer",
          "format": "int32"
        },
        "ttl_sec": {
          "description": "\"Time to Live\" - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.",
          "example": 300,
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "description": "An array of tags applied to this object.  Tags are for organizational purposes only.",
          "example": ["example tag", "another example"],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["id", "type", "domain"]
    },
    "DomainRecord": {
      "title": "DomainRecord",
      "description": "A single record on a Domain.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Record's unique ID.",
          "example": 123456,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "name": {
          "description": "The name of this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the subdomain being associated with an IP address.",
          "example": "test",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "target": {
          "description": "The target for this Record. This field's actual usage depends on the type of record this represents. For A and AAAA records, this is the address the named Domain should resolve to.",
          "example": "12.34.56.78",
          "type": "string"
        },
        "priority": {
          "description": "The priority of the target host. Lower values are preferred.",
          "example": 50,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 255.0,
          "format": "int32"
        },
        "weight": {
          "description": "The relative weight of this Record. Higher values are preferred.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "description": "The port this Record points to.",
          "example": 80,
          "type": "integer",
          "format": "int32"
        },
        "service": {
          "description": "The service this Record identified. Only valid for SRV records.",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol this Record's service communicates with. Only valid for SRV records.",
          "type": "string"
        },
        "ttl_sec": {
          "description": "\"Time to Live\" - the amount of time in seconds that this Domain's records may be cached by resolvers or other domain servers. Valid values are 300, 3600, 7200, 14400, 28800, 57600, 86400, 172800, 345600, 604800, 1209600, and 2419200 - any other value will be rounded to the nearest valid value.",
          "example": 604800,
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "description": "The tag portion of a CAA record. It is invalid to set this on other record types.",
          "type": "string"
        }
      }
    },
    "ErrorObject": {
      "title": "ErrorObject",
      "description": "An object for describing a single error that occurred during the processing of a request.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "What happened to cause this error. In most cases, this can be fixed immediately by changing the data you sent in the request, but in some cases you will be instructed to [open a Support Ticket](#operation/createTicket) or perform some other action before you can complete the request successfully.",
          "example": "fieldname must be a valid value",
          "type": "string"
        },
        "field": {
          "description": "The field in the request that caused this error. This may be a path, separated by periods in the case of nested fields. In some cases this may come back as \"null\" if the error is not specific to any single element of the request.",
          "example": "fieldname",
          "type": "string"
        }
      }
    },
    "Event": {
      "title": "Event",
      "description": "A collection of Event objects. An Event is an action taken against an entity related to your Account. For example, booting a Linode would create an Event.\nThe Events returned depends on your grants.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Event.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "$ref": "#/definitions/Action"
        },
        "created": {
          "description": "When this Event was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "entity": {
          "$ref": "#/definitions/Entity"
        },
        "percent_complete": {
          "description": "A percentage estimating the amount of time remaining for an Event.\nReturns `null` for notification events.",
          "type": "integer",
          "format": "int32"
        },
        "rate": {
          "description": "The rate of completion of the Event. Only some Events will return rate; for example, migration and resize Events.",
          "type": "string"
        },
        "read": {
          "description": "If this Event has been read.",
          "example": true,
          "type": "boolean"
        },
        "seen": {
          "description": "If this Event has been seen.",
          "example": true,
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/Status3"
        },
        "time_remaining": {
          "description": "The estimated time remaining until the completion of this Event. This value is only returned for some in-progress migration events. For all other in-progress events, the `percent_complete` attribute will indicate about how much more work is to be done.",
          "type": "string"
        },
        "username": {
          "description": "The username of the User who caused the Event.",
          "example": "exampleUser",
          "type": "string"
        }
      }
    },
    "Grant": {
      "title": "Grant",
      "description": "Represents the level of access a restricted User has to a specific resource on the Account.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the entity this grant applies to.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions"
        },
        "label": {
          "description": "The current label of the entity this grant applies to, for display purposes.",
          "example": "example-entity",
          "type": "string"
        }
      }
    },
    "GrantsResponse": {
      "title": "GrantsResponse",
      "description": "A structure representing all grants a restricted User has on the Account. Not available for unrestricted users, as they have access to everything without grants. If retrieved from the `/profile/grants` endpoint, entities to which a User has no access will be omitted.",
      "type": "object",
      "properties": {
        "global": {
          "$ref": "#/definitions/Global"
        },
        "linode": {
          "description": "The grants this User has pertaining to Linodes on this Account. There will be one entry per Linode on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        },
        "domain": {
          "description": "The grants this User has pertaining to Domains on this Account. There will be one entry per Domain on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        },
        "nodebalancer": {
          "description": "The grants this User has pertaining to NodeBalancers on this Account. There will be one entry per NodeBalancer on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        },
        "image": {
          "description": "The grants this User has pertaining to Images on this Account. There will be one entry per Image on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        },
        "longview": {
          "description": "The grants this User has pertaining to Longview Clients on this Account. There will be one entry per Longview Client on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        },
        "stackscript": {
          "description": "The grants this User has pertaining to StackScripts on this Account.  There will be one entry per StackScript on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        },
        "volume": {
          "description": "The grants this User has pertaining to Volumes on this Account. There will be one entry per Volume on the Account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grant"
          }
        }
      }
    },
    "ImagePrivate": {
      "title": "ImagePrivate",
      "description": "Private Image object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Image.",
          "example": "private/67848373",
          "type": "string"
        },
        "label": {
          "description": "A short description of the Image. Labels cannot contain special characters.",
          "example": "My gold-master image",
          "type": "string"
        },
        "created": {
          "description": "When this Image was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "description": "The name of the User who created this Image.",
          "example": "somename",
          "type": "string"
        },
        "deprecated": {
          "description": "Whether or not this Image is deprecated. Will only be True for deprecated public Images.",
          "example": false,
          "type": "boolean"
        },
        "description": {
          "description": "A detailed description of this Image.",
          "example": "The detailed description of my Image.",
          "type": "string"
        },
        "is_public": {
          "description": "True if the Image is public.",
          "example": false,
          "type": "boolean"
        },
        "size": {
          "description": "The minimum size this Image needs to deploy. Size is in MB.",
          "example": 2500,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type3"
        },
        "expiry": {
          "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.",
          "example": "8/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "vendor": {
          "description": "The upstream distribution vendor. `None` for private Images.",
          "type": "string"
        }
      }
    },
    "ImagePublic": {
      "title": "ImagePublic",
      "description": "Public Image object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Image.",
          "example": "linode/ubuntu17.10",
          "type": "string"
        },
        "label": {
          "description": "A short description of the Image.",
          "example": "Ubuntu 17.10",
          "type": "string"
        },
        "created": {
          "description": "When this Image was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "description": "The name of the User who created this Image, or \"linode\" for official Images.",
          "example": "linode",
          "type": "string"
        },
        "deprecated": {
          "description": "Whether or not this Image is deprecated. Will only be true for deprecated public Images.",
          "example": false,
          "type": "boolean"
        },
        "description": {
          "description": "A detailed description of this Image.",
          "type": "string"
        },
        "is_public": {
          "description": "True if the Image is public.",
          "example": true,
          "type": "boolean"
        },
        "size": {
          "description": "The minimum size this Image needs to deploy. Size is in MB.",
          "example": 2500,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type4"
        },
        "expiry": {
          "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.",
          "type": "string",
          "format": "date-time"
        },
        "vendor": {
          "description": "The upstream distribution vendor. `None` for private Images.",
          "example": "Ubuntu",
          "type": "string"
        }
      }
    },
    "Invoice": {
      "title": "Invoice",
      "description": "Account Invoice object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Invoice's unique ID.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "description": "When this Invoice was generated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "The Invoice's display label.",
          "example": "Invoice",
          "type": "string"
        },
        "total": {
          "description": "The amount of the Invoice in US Dollars.",
          "example": 120,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InvoiceItem": {
      "title": "InvoiceItem",
      "description": "An InvoiceItem object.",
      "type": "object",
      "properties": {
        "amount": {
          "description": "The price, in US dollars, of unit price multiplied by quantity.",
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "from": {
          "description": "The date the Invoice Item started, based on month.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "The Invoice Item's display label.",
          "example": "Linode 123",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of this Item for the specified Invoice.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "to": {
          "description": "The date the Invoice Item ended, based on month.",
          "example": "1/31/2018 11:59:59 AM",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/Type5"
        },
        "unitprice": {
          "description": "The monthly service fee in US Dollars for this Item.",
          "example": 10,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IPAddress": {
      "title": "IPAddress",
      "description": "An IP address that exists in Linode's system, either IPv4 or IPv6.",
      "type": "object",
      "properties": {
        "address": {
          "description": "The IP address.",
          "example": "97.107.143.141",
          "type": "string"
        },
        "gateway": {
          "description": "The default gateway for this address.",
          "example": "97.107.143.1",
          "type": "string"
        },
        "subnet_mask": {
          "description": "The mask that separates host bits from network bits for this address.",
          "example": "255.255.255.0",
          "type": "string"
        },
        "prefix": {
          "description": "The number of bits set in the subnet mask.",
          "example": 24,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type6"
        },
        "public": {
          "description": "Whether this is a public or private IP address.",
          "example": true,
          "type": "boolean"
        },
        "rdns": {
          "description": "The reverse DNS assigned to this address. For public IPv4 addresses, this will be set to a default value provided by Linode if not explicitly set.",
          "example": "test.example.org",
          "type": "string"
        },
        "linode_id": {
          "description": "The ID of the Linode this address currently belongs to. For IPv4 addresses, this is by default the Linode that this address was assigned to on creation, and these addresses my be moved using the [/networking/ipv4/assign](#operation/assignIPs) endpoint. For SLAAC and link-local addresses, this value may not be changed.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "description": "The Region this IP address resides in.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "IPAddressPrivate": {
      "title": "IPAddressPrivate",
      "description": "A private IPv4 address that exists in Linode's system.",
      "type": "object",
      "properties": {
        "address": {
          "description": "The private IPv4 address.",
          "example": "192.168.133.234",
          "type": "string"
        },
        "gateway": {
          "description": "The default gateway for this address.",
          "type": "string"
        },
        "subnet_mask": {
          "description": "The mask that separates host bits from network bits for this address.",
          "example": "255.255.128.0",
          "type": "string"
        },
        "prefix": {
          "description": "The number of bits set in the subnet mask.",
          "example": 17,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of address this is.",
          "example": "ipv4",
          "type": "string"
        },
        "public": {
          "description": "Whether this is a public or private IP address.",
          "example": false,
          "type": "boolean"
        },
        "rdns": {
          "description": "The reverse DNS assigned to this address.",
          "type": "string"
        },
        "linode_id": {
          "description": "The ID of the Linode this address currently belongs to.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "description": "The Region this address resides in.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "IPAddressV6LinkLocal": {
      "title": "IPAddressV6LinkLocal",
      "description": "A link-local IPv6 address that exists in Linode's system,.",
      "type": "object",
      "properties": {
        "address": {
          "description": "The IPv6 link-local address.",
          "example": "fe80::f03c:91ff:fe24:3a2f",
          "type": "string"
        },
        "gateway": {
          "description": "The default gateway for this address.",
          "example": "fe80::1",
          "type": "string"
        },
        "subnet_mask": {
          "description": "The subnet mask.",
          "example": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
          "type": "string"
        },
        "prefix": {
          "description": "The network prefix.",
          "example": 64,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of address this is.",
          "example": "ipv6",
          "type": "string"
        },
        "public": {
          "description": "Whether this is a public or private IP address.",
          "example": false,
          "type": "boolean"
        },
        "rdns": {
          "description": "The reverse DNS assigned to this address.",
          "type": "string"
        },
        "linode_id": {
          "description": "The ID of the Linode this address currently belongs to.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "description": "The Region this address resides in.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "IPAddressV6Slaac": {
      "title": "IPAddressV6Slaac",
      "description": "A SLAAC IPv6 address that exists in Linode's system.",
      "type": "object",
      "properties": {
        "address": {
          "description": "The address.",
          "example": "2600:3c03::f03c:91ff:fe24:3a2f",
          "type": "string"
        },
        "gateway": {
          "description": "The default gateway for this address.",
          "example": "fe80::1",
          "type": "string"
        },
        "subnet_mask": {
          "description": "The subnet mask.",
          "example": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
          "type": "string"
        },
        "prefix": {
          "description": "The network prefix.",
          "example": 64,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "The type of address this is.",
          "example": "ipv6",
          "type": "string"
        },
        "public": {
          "description": "Whether this is a public or private IP address.",
          "example": true,
          "type": "boolean"
        },
        "rdns": {
          "description": "The reverse DNS assigned to this address.",
          "type": "string"
        },
        "linode_id": {
          "description": "The ID of the Linode this address currently belongs to.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "description": "The Region this address resides in.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "IPv6Pool": {
      "title": "IPv6Pool",
      "description": "An object representing an IPv6 pool.",
      "type": "object",
      "properties": {
        "range": {
          "description": "The IPv6 pool",
          "example": "2600:3c01::02:5000::",
          "type": "string"
        },
        "prefix": {
          "description": "The prefix length of the address, denoting which addresses can be assigned from this pool.",
          "example": 124,
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "description": "A pool of IPv6 addresses that are routed to all of your Linodes in a single Region. Any Linode you own may bring up any address in this pool at any time, with no external configuration required.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "IPv6Range": {
      "title": "IPv6Range",
      "description": "An object representing an IPv6 range.",
      "type": "object",
      "properties": {
        "range": {
          "description": "The IPv6 range.",
          "example": "2600:3c01::02:5000::",
          "type": "string"
        },
        "region": {
          "description": "A range of IPv6 addresses routed to a single Linode in the given Region. Your Linode is responsible for routing individual addresses in the range, or handling traffic for all of the addresses in the range.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "Kernel": {
      "title": "Kernel",
      "description": "Linux kernel object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Kernel.",
          "example": "linode/latest-64bit",
          "type": "string"
        },
        "label": {
          "description": "The friendly name of this Kernel.",
          "example": "Latest 64 bit (4.15.7-x86_64-linode102)",
          "type": "string"
        },
        "version": {
          "description": "Linux Kernel version.",
          "example": "4.15.7",
          "type": "string"
        },
        "kvm": {
          "description": "If this Kernel is suitable for KVM Linodes.",
          "example": true,
          "type": "boolean"
        },
        "xen": {
          "description": "If this Kernel is suitable for Xen Linodes.",
          "example": false,
          "type": "boolean"
        },
        "architecture": {
          "$ref": "#/definitions/Architecture"
        },
        "pvops": {
          "description": "If this Kernel is suitable for paravirtualized operations.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Linode": {
      "title": "Linode",
      "allOf": [
        {
          "$ref": "#/definitions/LinodeBase"
        },
        {
          "type": "object",
          "properties": {
            "label": {
              "description": "The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.\nLinode labels have the following constraints:\n  * Must start with an alpha character.\n  * Must consist of alphanumeric characters, dashes (`-`), and underscores (`_`).\n  * Cannot have two dashes (`--`) or underscores (`__`) in a row.",
              "type": "object"
            },
            "region": {
              "description": "This is the location where the Linode was deployed. This cannot be changed without [opening a support ticket](#operation/createTicket).",
              "type": "object"
            },
            "image": {
              "type": "string"
            },
            "type": {
              "description": "This is the [Linode Type](#operation/getLinodeTypes) that this Linode was deployed with.\nTo change a Linode's Type, use [POST /linode/instances/{linodeId}/resize](#operation/resizeLinodeInstance).",
              "type": "object"
            },
            "group": {
              "description": "A deprecated property denoting a group label for this Linode.",
              "example": "Linode-Group",
              "type": "string"
            },
            "tags": {
              "description": "An array of tags applied to this object.  Tags are for organizational purposes only.",
              "example": ["example tag", "another example"],
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "id": {
              "description": "This Linode's ID which must be provided for all operations impacting this Linode.",
              "example": 123,
              "type": "integer",
              "format": "int32"
            },
            "status": {
              "$ref": "#/definitions/Status4"
            },
            "hypervisor": {
              "$ref": "#/definitions/Hypervisor"
            },
            "created": {
              "description": "When this Linode was created.",
              "example": "1/1/2018 12:01:01 AM",
              "type": "string",
              "format": "date-time"
            },
            "updated": {
              "description": "When this Linode was last updated.",
              "example": "1/1/2018 12:01:01 AM",
              "type": "string",
              "format": "date-time"
            },
            "ipv4": {
              "description": "This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address\nupon creation, and may get a single private IPv4 address if needed. You may need to\n[open a support ticket](#operation/createTicket)\nto get additional IPv4 addresses.\n\nIPv4 addresses may be reassigned between your Linodes, or shared with other Linodes.\nSee the [/networking](#tag/networking) endpoints for details.",
              "example": ["123.45.67.890"],
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ipv6": {
              "description": "This Linode's IPv6 SLAAC addresses. This address is specific to a Linode, and may not be shared.",
              "example": "c001:d00d::1234",
              "type": "string"
            },
            "specs": {
              "$ref": "#/definitions/Specs"
            },
            "alerts": {
              "$ref": "#/definitions/Alerts"
            },
            "backups": {
              "$ref": "#/definitions/Backups"
            },
            "watchdog_enabled": {
              "description": "The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and will reboot it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible.\nTo prevent a loop, Lassie will give up if there have been more than 5 boot jobs issued within 15 minutes.",
              "example": true,
              "type": "boolean"
            }
          }
        }
      ]
    },
    "LinodeBase": {
      "title": "LinodeBase",
      "description": "Common properties for Linode Request and Response objects.",
      "type": "object",
      "properties": {
        "label": {
          "description": "The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.\nLinode labels have the following constraints:\n  * Must start with an alpha character.\n  * Must consist of alphanumeric characters, dashes (`-`), and underscores (`_`).\n  * Cannot have two dashes (`--`) or underscores (`__`) in a row.",
          "example": "linode123",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"
        },
        "group": {
          "description": "A deprecated property denoting a group label for this Linode.",
          "example": "Linode-Group",
          "type": "string"
        },
        "type": {
          "description": "The ID representing the Linode Type.",
          "example": "g6-standard-2",
          "type": "string"
        },
        "region": {
          "description": "The unique ID of this Region.",
          "example": "us-east",
          "type": "string"
        }
      }
    },
    "LinodeConfig": {
      "title": "LinodeConfig",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this Config.",
          "example": 23456,
          "type": "integer",
          "format": "int32"
        },
        "kernel": {
          "description": "A Kernel ID to boot a Linode with. Defaults to \"linode/latest-64bit\".",
          "example": "linode/latest-64bit",
          "type": "string"
        },
        "comments": {
          "description": "Optional field for arbitrary User comments on this Config.",
          "example": "This is my main Config",
          "type": "string"
        },
        "memory_limit": {
          "description": "Defaults to the total RAM of the Linode.",
          "example": 2048,
          "type": "integer",
          "format": "int32"
        },
        "run_level": {
          "$ref": "#/definitions/RunLevel"
        },
        "virt_mode": {
          "$ref": "#/definitions/VirtMode"
        },
        "helpers": {
          "$ref": "#/definitions/Helpers"
        },
        "label": {
          "description": "The Config's label is for display purposes only.",
          "example": "My Config",
          "type": "string",
          "minLength": 1,
          "maxLength": 48
        },
        "devices": {
          "$ref": "#/definitions/Devices"
        },
        "root_device": {
          "description": "The root device to boot. The corresponding disk must be attached.",
          "example": "/dev/sda",
          "type": "string"
        }
      },
      "required": ["label", "devices"]
    },
    "LinodeRequest": {
      "title": "LinodeRequest",
      "description": "Common properties for creating and rebuilding Linodes.",
      "type": "object",
      "properties": {
        "image": {
          "description": "An Image ID to deploy the Disk from. Official Linode Images start with `linode/ `, while your Images start with `private/`.\nSee [/images](#operation/getImages) for more information on the Images available for you to use.",
          "example": "linode/debian9",
          "type": "string"
        },
        "root_pass": {
          "description": "This will set the root user's password on the newly-created Linode.\nThe root password must conform to the following constraints:\n\n  * May only use alphanumerics, punctuation, spaces, and tabs.\n  * Must contain at least two of the following characters classes:\n    * Upper-case letters\n    * Lower-case letters\n    * Digits\n    * Punctuation",
          "example": "aComplexP@ssword",
          "type": "string",
          "minLength": 6,
          "maxLength": 128,
          "pattern": "^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[!\"#$%&'()*+,-.\\/:;<=>?@\\[\\]^_`{|}~\\\\]))|((?=.*[A-Z])(?=.*[!\"#$%&'()*+,-.\\/:;<=>?@\\[\\]^_`{|}~\\\\]))|((?=.*[0-9])(?=.*[!\"#$%&'()*+,-.\\/:;<=>?@\\[\\]^_`{|}~\\\\])))"
        },
        "authorized_keys": {
          "description": "A list of public SSH keys that will be automatically appended to the root user's `~/.ssh/authorized_keys` file.",
          "example": [
            "ssh-rsa AAAA_valid_public_ssh_key_123456785== user@their-computer"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorized_users": {
          "description": "A list of usernames that will have their SSH keys, if any, automatically appended to the root user's `~/.ssh/authorized_keys` file.",
          "example": ["myUser", "secondaryUser"],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stackscript_id": {
          "description": "A StackScript ID that will cause the referenced StackScript to be run during\ndeployment of this Linode. A compatible `image` is required to use a\nStackScript. To get a list of available StackScript and their permitted Images\nsee [/stackscripts](#operation/getStackScripts).\nThis field cannot be used when deploying from a Backup or a private Image.",
          "example": 10079,
          "type": "integer",
          "format": "int32"
        },
        "stackscript_data": {
          "description": "This field is required only if the StackScript being deployed requires input\ndata from the User for successful completion. See\n<a target=\"_top\" href=\"https://www.linode.com/docs/platform/stackscripts/#variables-and-udfs\">Variables and UDFs</a>\nfor more details. This field is required to be valid JSON.",
          "example": {
            "gh_username": "linode"
          },
          "type": "object"
        },
        "booted": {
          "description": "This field defaults to `true` if the Linode is created with an Image or from a Backup.\nIf it is deployed from an Image or a Backup and you wish it to remain `offline` after deployment, set this to `false`.",
          "type": "boolean"
        }
      }
    },
    "LinodeStats": {
      "title": "LinodeStats",
      "description": "CPU, IO, IPv4, and IPv6 statistics. Graph data, if available, is in \"[timestamp, reading]\" array format. Timestamp is a UNIX timestamp in EST.",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Percentage of CPU used.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "io": {
          "$ref": "#/definitions/Io"
        },
        "netv4": {
          "$ref": "#/definitions/Netv4"
        },
        "netv6": {
          "$ref": "#/definitions/Netv6"
        },
        "title": {
          "description": "The title for this data set.",
          "example": "linode.com - my-linode (linode123456) - day (5 min avg)",
          "type": "string"
        }
      }
    },
    "LinodeType": {
      "title": "LinodeType",
      "description": "Returns collection of Linode types, including pricing and specifications for each type. These are used when [creating](#operation/createLinodeInstance) or [resizing](#operation/resizeLinodeInstance) Linodes.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID representing the Linode Type.",
          "example": "g6-standard-2",
          "type": "string"
        },
        "label": {
          "description": "The Linode Type's label is for display purposes only.",
          "example": "Linode 4GB",
          "type": "string"
        },
        "disk": {
          "description": "The Disk size, in MB, of the Linode Type.",
          "example": 81920,
          "type": "integer",
          "format": "int32"
        },
        "class": {
          "$ref": "#/definitions/Class"
        },
        "price": {
          "$ref": "#/definitions/Price"
        },
        "addons": {
          "$ref": "#/definitions/Addons"
        },
        "network_out": {
          "description": "The Mbits outbound bandwidth allocation.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "memory": {
          "description": "Amount of RAM included in this Linode Type.",
          "example": 4096,
          "type": "integer",
          "format": "int32"
        },
        "successor": {
          "description": "The Linode Type that a [mutate](#operation/mutateLinodeInstance) will upgrade to for a Linode of this type.  If \"null\", a Linode of this type may not mutate.",
          "type": "string"
        },
        "transfer": {
          "description": "The monthly outbound transfer amount, in MB.",
          "example": 4000,
          "type": "integer",
          "format": "int32"
        },
        "vcpus": {
          "description": "The number of VCPU cores this Linode Type offers.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LongviewClient": {
      "title": "LongviewClient",
      "description": "A LongviewClient is a single monitor set up to track statistics about one of your servers.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Client's unique ID.",
          "example": 789,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "This Client's unique label. This is for display purposes only.",
          "example": "client789",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "[a-zA-Z0-9-_]{3,32}"
        },
        "api_key": {
          "description": "The API key for this Client, used when configuring the Longview Client application on your Linode.",
          "example": "BD1B4B54-D752-A76D-5A9BD8A17F39DB61",
          "type": "string"
        },
        "install_code": {
          "description": "The install code for this Client, used when configuring the Longview Client application on your Linode.",
          "example": "BD1B5605-BF5E-D385-BA07AD518BE7F321",
          "type": "string"
        },
        "apps": {
          "$ref": "#/definitions/Apps"
        },
        "created": {
          "description": "When this Longview Client was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "When this Longview Client was last updated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LongviewSubscription": {
      "title": "LongviewSubscription",
      "description": "A Longview Subscriptions represents a tier of Longview service you can subscribe to.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Subscription tier.",
          "example": "longview-10",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Price2"
        },
        "label": {
          "description": "A display name for this Subscription tier.",
          "example": "Longivew Pro 10 pack",
          "type": "string"
        },
        "clients_included": {
          "description": "The number of Longview Clients that may be created with this Subscription tier.",
          "example": 10,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedContact": {
      "title": "ManagedContact",
      "description": "Information about someone Linode's special forces may contact in case an issue is detected with a manager service.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Contact's unique ID.",
          "example": 567,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "The name of this Contact.",
          "example": "John Doe",
          "type": "string",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "[a-zA-Z0-9-_ ]{2,64}"
        },
        "email": {
          "description": "The address to email this Contact to alert them of issues.",
          "example": "john.doe@example.org",
          "type": "string"
        },
        "phone": {
          "$ref": "#/definitions/Phone"
        },
        "group": {
          "description": "A grouping for this Contact. This is for display purposes only.",
          "example": "on-call",
          "type": "string",
          "minLength": 2,
          "maxLength": 50
        },
        "updated": {
          "description": "When this Contact was last updated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ManagedCredential": {
      "title": "ManagedCredential",
      "description": "A securely-stored Credential that allows Linode's special forces to access a Managed server to respond to Issues.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Credential's unique ID.",
          "example": 9991,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The unique label for this Credential. This is for display purposes only.",
          "example": "prod-password-1",
          "type": "string",
          "minLength": 2,
          "maxLength": 75,
          "pattern": "[a-zA-Z0-9-_ \\.]{2,75}"
        }
      }
    },
    "ManagedIssue": {
      "title": "ManagedIssue",
      "description": "An Issue that was detected with a service Linode is managing.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Issue's unique ID.",
          "example": 823,
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "description": "When this Issue was created. Issues are created in response to issues detected with Managed Services, so this is also when the Issue was detected.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "services": {
          "description": "An array of Managed Service IDs that were affected by this Issue.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "entity": {
          "$ref": "#/definitions/Entity1"
        }
      }
    },
    "ManagedLinodeSettings": {
      "title": "ManagedLinodeSettings",
      "description": "Settings for a specific Linode related to Managed Services. There is one ManagedLinodeSettings object for each Linode on your Account.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the Linode these Settings are for.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The label of the Linode these Settings are for.",
          "example": "linode123",
          "type": "string"
        },
        "group": {
          "description": "The group of the Linode these Settings are for. This is for display purposes only.",
          "example": "linodes",
          "type": "string"
        },
        "ssh": {
          "$ref": "#/definitions/Ssh"
        }
      }
    },
    "ManagedService": {
      "title": "ManagedService",
      "description": "A service that Linode is monitoring as part of your Managed services. If issues are detected with this service, a ManagedIssue will be opened and, optionally, Linode special forces will attempt to resolve the Issue.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Service's unique ID.",
          "example": 9944,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/Status5"
        },
        "service_type": {
          "$ref": "#/definitions/ServiceType"
        },
        "label": {
          "description": "The label for this Service. This is for display purposes only.",
          "example": "prod-1",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "[a-zA-Z0-9-_ \\.]{3,64}"
        },
        "address": {
          "description": "The URL at which this Service is monitored.",
          "example": "https://example.org",
          "type": "string",
          "minLength": 3
        },
        "timeout": {
          "description": "How long to wait, in seconds, for a response before considering the Service to be down.",
          "example": 30,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 255.0,
          "format": "int32"
        },
        "body": {
          "description": "What to expect to find in the response body for the Service to be considered up.",
          "example": "it worked",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "consultation_group": {
          "description": "The group of ManagedContacts who should be notified or consulted with when an Issue is detected.",
          "example": "on-call",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "notes": {
          "description": "Any information relevant to the Service that Linode special forces should know when attempting to resolve Issues.",
          "example": "The service name is my-cool-application",
          "type": "string"
        },
        "region": {
          "description": "The Region in which this Service is located. This is required if address is a private IP, and may not be set otherwise.",
          "type": "string"
        },
        "credentials": {
          "description": "An array of ManagedCredential IDs that should be used when attempting to resolve issues with this Service.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "created": {
          "description": "When this Managed Service was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "When this Managed Service was last updated.",
          "example": "3/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NodeBalancer": {
      "title": "NodeBalancer",
      "description": "Linode's load balancing solution.  Can handle multiple ports, SSL termination, and any number of backends.  NodeBalancer ports are configured with NodeBalancer Configs, and each config is given one or more NodeBalancer Node that accepts traffic.  The traffic should be routed to the  NodeBalancer's ip address, the NodeBalancer will handle routing individual requests to backends.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This NodeBalancer's unique ID.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "This NodeBalancer's label. These must be unique on your Account.",
          "example": "balancer12345",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "[a-zA-Z0-9-_]{3,32}"
        },
        "region": {
          "description": "The Region where this NodeBalancer is located. NodeBalancers only support backends in the same Region.",
          "example": "us-east",
          "type": "string"
        },
        "hostname": {
          "description": "This NodeBalancer's hostname, ending with _.nodebalancer.linode.com_",
          "example": "nb-207-192-68-16.newark.nodebalancer.linode.com",
          "type": "string"
        },
        "ipv4": {
          "description": "This NodeBalancer's public IPv4 address.",
          "example": "12.34.56.78",
          "type": "string"
        },
        "ipv6": {
          "description": "This NodeBalancer's public IPv6 address.",
          "type": "string"
        },
        "created": {
          "description": "When this NodeBalancer was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "When this NodeBalancer was last updated.",
          "example": "3/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "client_conn_throttle": {
          "description": "Throttle connections per second.  Set to 0 (zero) to disable throttling.",
          "example": 0,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 20.0,
          "format": "int32"
        },
        "transfer": {
          "$ref": "#/definitions/Transfer2"
        },
        "tags": {
          "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.",
          "example": ["example tag", "another example"],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NodeBalancerConfig": {
      "title": "NodeBalancerConfig",
      "description": "A NodeBalancer config represents the configuration of this NodeBalancer on a single port.  For example, a NodeBalancer Config on port 80 would typically represent how this NodeBalancer response to HTTP requests.\n\nNodeBalancer configs have a list of backends, called \"nodes,\" that they forward requests between based on their configuration.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This config's unique ID",
          "example": 4567,
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "description": "The port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example).  While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443.",
          "example": 80,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 65535.0,
          "format": "int32"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "algorithm": {
          "$ref": "#/definitions/Algorithm"
        },
        "stickiness": {
          "$ref": "#/definitions/Stickiness"
        },
        "check": {
          "$ref": "#/definitions/Check"
        },
        "check_interval": {
          "description": "How often, in seconds, to check that backends are up and serving requests.",
          "example": 90,
          "type": "integer",
          "format": "int32"
        },
        "check_timeout": {
          "description": "How long, in seconds, to wait for a check attempt before considering it failed.",
          "example": 10,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 30.0,
          "format": "int32"
        },
        "check_attempts": {
          "description": "How many times to attempt a check before considering a backend to be down.",
          "example": 3,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 30.0,
          "format": "int32"
        },
        "check_path": {
          "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.",
          "example": "/test",
          "type": "string"
        },
        "check_body": {
          "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in the response body of a check request, the backend is considered to be down.",
          "example": "it works",
          "type": "string"
        },
        "check_passive": {
          "description": "If true, any response from this backend with a `5xx` status code will be enough for it to be considered unhealthy and taken out of rotation.",
          "example": true,
          "type": "boolean"
        },
        "cipher_suite": {
          "$ref": "#/definitions/CipherSuite"
        },
        "nodebalancer_id": {
          "description": "The ID for the NodeBalancer this config belongs to.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "ssl_commonname": {
          "description": "The common name for the SSL certification this port is serving if this port is not configured to use SSL.",
          "type": "string"
        },
        "ssl_fingerprint": {
          "description": "The fingerprint for the SSL certification this port is serving if this port is not configured to use SSL.",
          "type": "string"
        },
        "ssl_cert": {
          "description": "The certificate this port is serving. This is not returned. If set, this field will come back as \"&lt;REDACTED&gt;\".\nPlease use the `ssl_commonname` and `ssl_fingerprint` to identify the certificate.",
          "type": "string"
        },
        "ssl_key": {
          "description": "The private key corresponding to this port's certificate.  This is not returned. If set, this field will come back as \"&lt;REDACTED&gt;\".\nPlease use the `ssl_commonname` and `ssl_fingerprint` to identify the certificate.",
          "type": "string"
        },
        "nodes_status": {
          "$ref": "#/definitions/NodesStatus"
        }
      }
    },
    "NodeBalancerNode": {
      "title": "NodeBalancerNode",
      "description": "A NodeBalancerNode represents a single backend serving requests for a single port of a NodeBalancer.  Nodes are specific to NodeBalancer Configs, and serve traffic over their private IP.  If the same Linode is serving traffic for more than one port on the same NodeBalancer, one NodeBalancer Node is required for each config (port) it should serve requests on.  For example, if you have four backends, and each should response to both HTTP and HTTPS requests, you will need two NodeBalancerConfigs (port 80 and port 443) and four backends each - one for each of the Linodes serving requests for that port.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This node's unique ID.",
          "example": 54321,
          "type": "integer",
          "format": "int32"
        },
        "address": {
          "description": "The private IP Address where this backend can be reached. This _must_ be a private IP address.",
          "example": "192.168.210.120:80",
          "type": "string"
        },
        "label": {
          "description": "The label for this node.  This is for display purposes only.",
          "example": "node54321",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "status": {
          "$ref": "#/definitions/Status6"
        },
        "weight": {
          "description": "Used when picking a backend to serve a request and is not pinned to a single backend yet.  Nodes with a higher weight will receive more traffic.",
          "example": 50,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 255.0,
          "format": "int32"
        },
        "mode": {
          "$ref": "#/definitions/Mode"
        },
        "config_id": {
          "description": "The NodeBalancer Config ID that this Node belongs to.",
          "example": 4567,
          "type": "integer",
          "format": "int32"
        },
        "nodebalancer_id": {
          "description": "The NodeBalancer ID that this Node belongs to.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NodeBalancerStats": {
      "title": "NodeBalancerStats",
      "description": "Stats for this NodeBalancer.",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Data"
        },
        "title": {
          "description": "The title for the statistics generated in this response.",
          "example": "linode.com - balancer12345 (12345) - day (5 min avg)",
          "type": "string"
        }
      }
    },
    "Notification": {
      "title": "Notification",
      "description": "An important, often time-sensitive item related to your Account.",
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Entity2"
        },
        "label": {
          "description": "A short description of this Notification.",
          "example": "You have an important ticket open!",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the Notification.",
          "example": "You have an important ticket open!",
          "type": "string"
        },
        "body": {
          "description": "A full description of this Notification, in markdown format.  Not all Notifications include bodies.",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type8"
        },
        "severity": {
          "$ref": "#/definitions/Severity"
        },
        "when": {
          "description": "If this Notification is of an Event that will happen at a fixed, future time, this is when the named action will be taken. For example, if a Linode is to be migrated in response to a Security Advisory, this field will contain the approximate time the Linode will be taken offline for migration.",
          "type": "string",
          "format": "date-time"
        },
        "until": {
          "description": "If this Notification has a duration, this will be the ending time for the Event/action. For example, if there is scheduled maintenance for one of our systems, `until` would be set to the end of the maintenance window.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OAuthClient": {
      "title": "OAuthClient",
      "description": "A third-party application registered to Linode that users may log into with their Linode account through our authentication server at <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a>.  Using an OAuth Client, a third-party developer may be given access to some, or all, of a User's account for the purposes of their application.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The OAuth Client ID.  This is used to identify the client, and is a publicly-known value (it is not a secret).",
          "example": "2737bf16b39ab5d7b4a1",
          "type": "string"
        },
        "redirect_uri": {
          "description": "The location a successful log in from <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a> should be redirected to for this client.  The receiver of this redirect should be ready to accept an OAuth exchange code and finish the OAuth exchange.",
          "example": "https://example.org/oauth/callback",
          "type": "string"
        },
        "label": {
          "description": "The name of this application.  This will be presented to users when they are asked to grant it access to their Account.",
          "example": "Test_Client_1",
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        },
        "status": {
          "$ref": "#/definitions/Status7"
        },
        "secret": {
          "description": "The OAuth Client secret, used in the OAuth exchange.  This is returned as `<REDACTED>` except when an OAuth Client is created or its secret is reset.  This is a secret, and should not be shared or disclosed publicly.",
          "example": "<REDACTED>",
          "type": "string"
        },
        "thumbnail_url": {
          "description": "The URL where this client's thumbnail may be viewed, or `null` if this client does not have a thumbnail set.",
          "example": "https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail",
          "type": "string"
        },
        "public": {
          "description": "If this is a public or private OAuth Client.  Public clients have a slightly different authentication workflow than private clients.  See the <a target=\"_top\" href=\"https://oauth.net/2/\">OAuth spec</a> for more details.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "PaginationEnvelope": {
      "title": "PaginationEnvelope",
      "description": "An envelope for paginated response. When accessing a collection through a GET endpoint, the results are wrapped in this envelope which includes metadata about those results.",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["data", "pages", "page", "results"]
    },
    "Payment": {
      "title": "Payment",
      "description": "Payment object response.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the Payment.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "description": "When the Payment was made.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "usd": {
          "description": "The amount, in US dollars, of the Payment.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PaymentRequest": {
      "title": "PaymentRequest",
      "description": "Payment object request.",
      "type": "object",
      "properties": {
        "cvv": {
          "description": "CVV (Card Verification Value) of the credit card to be used for the Payment.",
          "example": "123",
          "type": "string"
        },
        "usd": {
          "description": "The amount in US Dollars of the Payment.",
          "example": "120.50",
          "type": "string"
        }
      },
      "required": ["usd"]
    },
    "PayPal": {
      "title": "PayPal",
      "description": "An object representing the staging of a Payment via PayPal.",
      "type": "object",
      "properties": {
        "cancel_url": {
          "description": "The URL to have PayPal redirect to when Payment is cancelled.",
          "example": "https://example.org",
          "type": "string"
        },
        "redirect_url": {
          "description": "The URL to have PayPal redirect to when Payment is approved.",
          "example": "https://example.org",
          "type": "string"
        },
        "usd": {
          "description": "The amount, in US dollars, of the Payment.",
          "example": "120.50",
          "type": "string"
        }
      },
      "required": ["cancel_url", "redirect_url", "usd"]
    },
    "PayPalExecute": {
      "title": "PayPalExecute",
      "description": "An object representing an execution of Payment to PayPal to capture the funds and credit your Linode Account.",
      "type": "object",
      "properties": {
        "payer_id": {
          "description": "The PayerID returned by PayPal during the transaction authorization process.",
          "example": "ABCDEFGHIJKLM",
          "type": "string"
        },
        "payment_id": {
          "description": "The PaymentID returned from [POST /account/payments/paypal](#operation/createPayPalPayment) that has been approved with PayPal.",
          "example": "PAY-1234567890ABCDEFGHIJKLMN",
          "type": "string"
        }
      },
      "required": ["payer_id", "payment_id"]
    },
    "PersonalAccessToken": {
      "title": "PersonalAccessToken",
      "description": "A Personal Access Token is a token generated manually to access the API without going through an OAuth login.  Personal Access Tokens can have scopes just like OAuth tokens do, and are commonly used to give access to command-line tools like the Linode CLI, or when writing your own integrations.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This token's unique ID, which can be used to revoke it.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "scopes": {
          "description": "The scopes this token was created with. These define what parts of the Account the token can be used to access. Many command-line tools, such as the <a target=\"_top\" href=\"https://github.com/linode/linode-cli\">Linode CLI</a>, require tokens with access to `*`. Tokens with more restrictive scopes are generally more secure.",
          "example": "*",
          "type": "string"
        },
        "created": {
          "description": "The date and time this token was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "This token's label.  This is for display purposes only, but can be used to more easily track what you're using each token for.",
          "example": "linode-cli",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "token": {
          "description": "The token used to access the API.  When the token is created, the full token is returned here.  Otherwise, only the first 16 characters are returned.",
          "example": "abcdefghijklmnop",
          "type": "string"
        },
        "expiry": {
          "description": "When this token will expire.  Personal Access Tokens cannot be renewed, so after this time the token will be completely unusable and a new token will need to be generated.  Tokens may be created with \"null\" as their expiry and will never expire unless revoked.",
          "example": "1/1/2018 1:46:32 PM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Profile": {
      "title": "Profile",
      "description": "A Profile represents your User in our system. This is where you can change information about your User. This information is available to any OAuth Client regardless of requested scopes, and can be used to populate User information in third-party applications.",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Your unique ID in our system. This value will never change, and can safely be used to identify your User.",
          "example": 1234,
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Your username, used for logging in to our system.",
          "example": "exampleUser",
          "type": "string"
        },
        "email": {
          "description": "Your email address.  This address will be used for communication with Linode as necessary.",
          "example": "example-user@gmail.com",
          "type": "string"
        },
        "timezone": {
          "description": "The timezone you prefer to see times in.  This is not used by the API, and is for the benefit of clients only.  All times the API returns are in UTC.",
          "example": "US/Eastern",
          "type": "string"
        },
        "email_notifications": {
          "description": "If true, you will receive email notifications about account activity.  If false, you may still receive business-critical communications through email.",
          "example": true,
          "type": "boolean"
        },
        "referrals": {
          "$ref": "#/definitions/Referrals"
        },
        "ip_whitelist_enabled": {
          "description": "If true, logins for your User will only be allowed from whitelisted IPs. This setting is currently deprecated, and cannot be enabled.\n\nIf you disable this setting, you will not be able to re-enable it.",
          "example": false,
          "type": "boolean"
        },
        "lish_auth_method": {
          "$ref": "#/definitions/LishAuthMethod"
        },
        "authorized_keys": {
          "description": "The list of SSH Keys authorized to use Lish for your User. This value is ignored if `lish_auth_method` is \"disabled.\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "two_factor_auth": {
          "description": "If true, logins from untrusted computers will require Two Factor Authentication.  See [/profile/tfa-enable](#operation/tfaEnable) to enable Two Factor Authentication.",
          "example": true,
          "type": "boolean"
        },
        "restricted": {
          "description": "If true, your User has restrictions on what can be accessed on your Account. To get details on what entities/actions you can access/perform, see [/profile/grants](#operation/getProfileGrants).",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Region": {
      "title": "Region",
      "description": "An area where Linode services are available.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Region.",
          "example": "us-east",
          "type": "string"
        },
        "country": {
          "description": "The country where this Region resides.",
          "example": "us",
          "type": "string"
        }
      }
    },
    "RescueDevices": {
      "title": "RescueDevices",
      "type": "object",
      "properties": {
        "sda": {
          "$ref": "#/definitions/Device"
        },
        "sdb": {
          "$ref": "#/definitions/Device"
        },
        "sdc": {
          "$ref": "#/definitions/Device"
        },
        "sdd": {
          "$ref": "#/definitions/Device"
        },
        "sde": {
          "$ref": "#/definitions/Device"
        },
        "sdf": {
          "$ref": "#/definitions/Device"
        },
        "sdg": {
          "$ref": "#/definitions/Device"
        }
      }
    },
    "StackScript": {
      "title": "StackScript",
      "description": "A StackScript enables you to quickly deploy a fully-configured application in an automated manner.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this StackScript.",
          "example": 10079,
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "The User who created the StackScript.",
          "example": "myuser",
          "type": "string"
        },
        "user_gravatar_id": {
          "description": "The Gravatar ID for the User who created the StackScript.",
          "example": "a445b305abda30ebc766bc7fda037c37",
          "type": "string"
        },
        "label": {
          "description": "The StackScript's label is for display purposes only.",
          "example": "a-stackscript",
          "type": "string",
          "minLength": 3,
          "maxLength": 128
        },
        "description": {
          "description": "A description for the StackScript.",
          "example": "This StackScript installs and configures MySQL\n",
          "type": "string"
        },
        "images": {
          "description": "An array of Image IDs representing the Images that this StackScript is compatible for deploying with.",
          "example": ["linode/debian9", "linode/debian8"],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deployments_total": {
          "description": "The total number of times this StackScript has been deployed.",
          "example": 12,
          "type": "integer",
          "format": "int32"
        },
        "deployments_active": {
          "description": "Count of currently active, deployed Linodes created from this StackScript.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "is_public": {
          "description": "This determines whether other users can use your StackScript. **Once a StackScript is made public, it cannot be made private.**",
          "example": true,
          "type": "boolean"
        },
        "created": {
          "description": "The date this StackScript was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "The date this StackScript was last updated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "rev_note": {
          "description": "This field allows you to add notes for the set of revisions made to this StackScript.",
          "example": "Set up MySQL",
          "type": "string"
        },
        "script": {
          "description": "The script to execute when provisioning a new Linode with this StackScript.",
          "example": "\"#!/bin/bash\"\n",
          "type": "string"
        },
        "user_defined_fields": {
          "description": "This is a list of fields defined with a special syntax inside this StackScript that allow for supplying customized parameters during deployment. See <a target=\"_top\" href=\"https://www.linode.com/docs/platform/stackscripts/#variables-and-udfs\">Variables and UDFs</a> for more information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDefinedField"
          }
        }
      }
    },
    "SupportTicket": {
      "title": "SupportTicket",
      "description": "A Support Ticket opened on your Account.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the Support Ticket.",
          "example": 11223344,
          "type": "integer",
          "format": "int32"
        },
        "attachments": {
          "description": "A list of filenames representing attached files associated with this Ticket.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "closed": {
          "description": "The date and time this Ticket was closed.",
          "example": "6/4/2015 4:07:03 PM",
          "type": "string",
          "format": "date-time"
        },
        "closable": {
          "description": "Whether the Support Ticket may be closed.",
          "example": false,
          "type": "boolean"
        },
        "description": {
          "description": "The full details of the issue or question.",
          "example": "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 65000
        },
        "entity": {
          "$ref": "#/definitions/Entity3"
        },
        "gravatar_id": {
          "description": "The Gravatar ID of the User who opened this Ticket.",
          "example": "474a1b7373ae0be4132649e69c36ce30",
          "type": "string"
        },
        "opened": {
          "description": "The date and time this Ticket was created.",
          "example": "6/4/2015 2:16:44 PM",
          "type": "string",
          "format": "date-time"
        },
        "opened_by": {
          "description": "The User who opened this Ticket.",
          "example": "some_user",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status8"
        },
        "summary": {
          "description": "The summary or title for this Ticket.",
          "example": "Having trouble resetting root password on my Linode\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "updated": {
          "description": "The date and time this Ticket was last updated.",
          "example": "6/4/2015 4:07:03 PM",
          "type": "string",
          "format": "date-time"
        },
        "updated_by": {
          "description": "The User who last updated this Ticket.",
          "example": "some_other_user",
          "type": "string"
        }
      }
    },
    "SupportTicketReply": {
      "title": "SupportTicketReply",
      "description": "An object representing a reply to a Support Ticket.",
      "type": "object",
      "properties": {
        "created": {
          "description": "The date and time this Ticket reply was created.",
          "example": "6/2/2015 2:31:41 PM",
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "description": "The User who submitted this reply.",
          "example": "John Q. Linode",
          "type": "string"
        },
        "description": {
          "description": "The body of this Support Ticket reply.",
          "example": "Hello,\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\n \\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\n\\nIf you have, please reply with any additional steps you have also taken.\\n\\nRegards, Linode Support Team\n",
          "type": "string"
        },
        "from_linode": {
          "description": "If set to true, this reply came from a Linode employee.",
          "example": true,
          "type": "boolean"
        },
        "gravatar_id": {
          "description": "The Gravatar ID of the User who created this reply.",
          "example": "474a1b7373ae0be4132649e69c36ce30",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of this Support Ticket reply.",
          "example": 11223345,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SupportTicketRequest": {
      "title": "SupportTicketRequest",
      "description": "An object representing a created Support Ticket - a question or issue and request for help from the Linode support team.\nOnly one of the ID attributes (`linode_id`, `domain_id`, etc.) can be set on a single Support Ticket.",
      "type": "object",
      "properties": {
        "description": {
          "description": "The full details of the issue or question.",
          "example": "I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 65000
        },
        "domain_id": {
          "description": "The ID of the Domain this ticket is regarding, if relevant.",
          "type": "integer",
          "format": "int32"
        },
        "linode_id": {
          "description": "The ID of the Linode this ticket is regarding, if relevant.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "longviewclient_id": {
          "description": "The ID of the Longview client this ticket is regarding, if relevant.",
          "type": "integer",
          "format": "int32"
        },
        "nodebalancer_id": {
          "description": "The ID of the NodeBalancer this ticket is regarding, if relevant.",
          "type": "integer",
          "format": "int32"
        },
        "summary": {
          "description": "The summary or title for this SupportTicket.",
          "example": "Having trouble resetting root password on my Linode\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "volume_id": {
          "description": "The ID of the Volume this ticket is regarding, if relevant.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["description", "summary"]
    },
    "Transfer": {
      "title": "Transfer",
      "description": "An object representing your network utilization for the current month, in Gigabytes.",
      "type": "object",
      "properties": {
        "billable": {
          "description": "The amount of your transfer pool that is billable this billing cycle.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "quota": {
          "description": "The amount of network usage allowed this billing cycle.",
          "example": 9141,
          "type": "integer",
          "format": "int32"
        },
        "used": {
          "description": "The amount of network usage you have used this billing cycle.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Tag": {
      "title": "Tag",
      "description": "A tag that has been applied to an object on your Account. Tags are currently for organizational purposes only.",
      "type": "object",
      "properties": {
        "label": {
          "description": "A Label used for organization of objects on your Account.",
          "example": "example tag",
          "type": "string"
        }
      }
    },
    "User": {
      "title": "User",
      "description": "A User on your Account. Unrestricted users can log in and access information about your Account, while restricted users may only access entities or perform actions they've been granted access to.",
      "type": "object",
      "properties": {
        "username": {
          "description": "This User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).",
          "example": "example_user",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[a-zA-Z0-9]((?![_-]{2,})[a-zA-Z0-9-_])+[a-zA-Z0-9]$"
        },
        "email": {
          "description": "The email address for this User, for account management communications, and may be used for other communications as configured.",
          "example": "example_user@linode.com",
          "type": "string"
        },
        "restricted": {
          "description": "If true, this User must be granted access to perform actions or access entities on this Account. See [/account/users/{username}/grants](#operation/getUserGrants) for details on how to configure grants for a restricted User.",
          "example": true,
          "type": "boolean"
        },
        "ssh_keys": {
          "description": "A list of SSH Key labels added by this User. These are the keys that will be deployed if this User is included in the `authorized_users` field of a [create Linode](#operation/createLinodeInstance), [rebuild Linode](#operation/rebuildLinodeInstance), or [create Disk](#operation/addLinodeDisk) request.",
          "example": ["home-pc", "laptop"],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserDefinedField": {
      "title": "UserDefinedField",
      "description": "A custom field defined by the User with a special syntax within a StackScript. Derived from the contents of the script.",
      "type": "object",
      "properties": {
        "label": {
          "description": "A human-readable label for the field that will serve as the input prompt for entering the value during deployment.",
          "example": "Enter the password",
          "type": "string"
        },
        "name": {
          "description": "The name of the field.",
          "example": "DB_PASSWORD",
          "type": "string"
        },
        "example": {
          "description": "An example value for the field.",
          "example": "hunter2",
          "type": "string"
        },
        "oneOf": {
          "description": "A list of acceptable single values for the field.",
          "example": "avalue,anothervalue,thirdvalue",
          "type": "string"
        },
        "manyOf": {
          "description": "A list of acceptable values for the field in any quantity, combination or order.",
          "example": "avalue,anothervalue,thirdvalue",
          "type": "string"
        },
        "default": {
          "description": "The default value.  If not specified, this value will be used.",
          "type": "string"
        }
      },
      "required": ["label", "name", "example"]
    },
    "TrustedDevice": {
      "title": "TrustedDevice",
      "description": "A trusted device object represents an active Remember Me session with <a target=\"_top\" href=\"https://login.linode.com\">login.linode.com</a>.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID for this TrustedDevice",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "description": "When this Remember Me session was started.  This corresponds to the time of login with the \"Remember Me\" box checked.",
          "example": "1/1/2018 1:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "expiry": {
          "description": "When this TrustedDevice session expires.  Sessions typically last 30 days.",
          "example": "1/31/2018 1:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "user_agent": {
          "description": "The User Agent of the browser that created this TrustedDevice session.",
          "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\n",
          "type": "string"
        },
        "last_authenticated": {
          "description": "The last time this TrustedDevice was successfully used to authenticate to <a target=\"_top\" href=\"https://login.linode.com\">login.linode.com</a>.",
          "example": "1/5/2018 12:57:12 PM",
          "type": "string",
          "format": "date-time"
        },
        "last_remote_addr": {
          "description": "The last IP Address to successfully authenticate with this TrustedDevice.",
          "example": "12.34.56.78",
          "type": "string"
        }
      }
    },
    "SSHKey": {
      "title": "SSHKey",
      "description": "A credential object for authenticating a User's secure shell connection to a Linode.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of an SSH Key object.",
          "example": 42,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "A label for the SSH Key.",
          "example": "My SSH Key",
          "type": "string",
          "minLength": 0,
          "maxLength": 64
        },
        "ssh_key": {
          "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.",
          "type": "string"
        },
        "created": {
          "description": "The date this key was added.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SSHKeyRequest": {
      "title": "SSHKeyRequest",
      "description": "An object consisting of a user identified name as the `label` and the generated key as the `ssh-key`.",
      "type": "object",
      "properties": {
        "label": {
          "description": "A label for the key.",
          "example": "My SSH Key",
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "ssh_key": {
          "description": "The public SSH Key, which is used to authenticate to the root user of the Linodes you deploy.",
          "type": "string"
        }
      }
    },
    "Volume": {
      "title": "Volume",
      "description": "A Block Storage Volume associated with your Account.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Volume.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The Volume's label is for display purposes only.",
          "example": "my-volume",
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"
        },
        "filesystem_path": {
          "description": "The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ + Volume label.",
          "example": "/dev/disk/by-id/scsi-0Linode_Volume_my-volume",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status9"
        },
        "size": {
          "description": "The Volume's size, in GiB.",
          "example": 30,
          "type": "integer",
          "maximum": 10240.0,
          "format": "int32"
        },
        "region": {
          "description": "The unique ID of this Region.",
          "example": "us-east",
          "type": "string"
        },
        "linode_id": {
          "description": "If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here.",
          "example": 12346,
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "description": "When this Volume was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "When this Volume was last updated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.",
          "example": ["example tag", "another example"],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["label"]
    },
    "AccountCreditCardRequest": {
      "title": "AccountCreditCardRequest",
      "type": "object",
      "properties": {
        "card_number": {
          "description": "Your credit card number. No spaces or dashes allowed.",
          "example": "4111111111111111",
          "type": "string",
          "minLength": 13,
          "maxLength": 23
        },
        "expiry_month": {
          "description": "A value from 1-12 representing the expiration month of your credit card.\n  * 1 = January\n  * 2 = February\n  * 3 = March\n  * Etc.",
          "example": 12,
          "type": "integer",
          "format": "int32"
        },
        "expiry_year": {
          "description": "A four-digit integer representing the expiration year of your credit card.\nThe combination of `expiry_month` and `expiry_year` must result in a month/year combination of the current month or in the future. An expiration date set in the past is invalid.",
          "example": 2020,
          "type": "integer",
          "format": "int32"
        },
        "cvv": {
          "description": "The Card Verification Value on the back of the card.",
          "example": "123",
          "type": "string"
        }
      },
      "required": ["card_number", "expiry_month", "expiry_year"]
    },
    "AccountEventsResponse": {
      "title": "AccountEventsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountInvoicesItemsResponse": {
      "title": "AccountInvoicesItemsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceItem"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountInvoicesResponse": {
      "title": "AccountInvoicesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Invoice"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountNotificationsResponse": {
      "title": "AccountNotificationsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountOauthClientsRequest": {
      "title": "AccountOauthClientsRequest",
      "type": "object",
      "properties": {
        "id": {
          "description": "The OAuth Client ID.  This is used to identify the client, and is a publicly-known value (it is not a secret).",
          "example": "2737bf16b39ab5d7b4a1",
          "type": "string"
        },
        "redirect_uri": {
          "description": "The location a successful log in from <a target=\"_top\" href=\"https://login.linode.com\">https://login.linode.com</a> should be redirected to for this client.  The receiver of this redirect should be ready to accept an OAuth exchange code and finish the OAuth exchange.",
          "example": "https://example.org/oauth/callback",
          "type": "string"
        },
        "label": {
          "description": "The name of this application.  This will be presented to users when they are asked to grant it access to their Account.",
          "example": "Test_Client_1",
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        },
        "status": {
          "$ref": "#/definitions/Status7"
        },
        "secret": {
          "description": "The OAuth Client secret, used in the OAuth exchange.  This is returned as `<REDACTED>` except when an OAuth Client is created or its secret is reset.  This is a secret, and should not be shared or disclosed publicly.",
          "example": "<REDACTED>",
          "type": "string"
        },
        "thumbnail_url": {
          "description": "The URL where this client's thumbnail may be viewed, or `null` if this client does not have a thumbnail set.",
          "example": "https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail",
          "type": "string"
        },
        "public": {
          "description": "If this is a public or private OAuth Client.  Public clients have a slightly different authentication workflow than private clients.  See the <a target=\"_top\" href=\"https://oauth.net/2/\">OAuth spec</a> for more details.",
          "example": false,
          "type": "boolean"
        }
      },
      "required": ["redirect_uri", "label"]
    },
    "AccountOauthClientsResponse": {
      "title": "AccountOauthClientsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OAuthClient"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountPaymentsPaypalResponse": {
      "title": "AccountPaymentsPaypalResponse",
      "type": "object",
      "properties": {
        "payment_id": {
          "description": "The paypal-generated ID for this Payment. Used when authorizing the Payment in PayPal's interface.",
          "example": "PAY-1234567890ABCDEFGHIJKLMN",
          "type": "string"
        }
      }
    },
    "AccountPaymentsResponse": {
      "title": "AccountPaymentsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountUsersRequest": {
      "title": "AccountUsersRequest",
      "type": "object",
      "properties": {
        "username": {
          "description": "The new User's username. This is used for logging in, and may also be displayed alongside actions the User performs (for example, in Events or public StackScripts).",
          "example": "example_user",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[a-zA-Z0-9]((?![_-]{2,})[a-zA-Z0-9-_])+[a-zA-Z0-9]$"
        },
        "email": {
          "description": "The new User's email address.",
          "example": "example_user@linode.com",
          "type": "string"
        },
        "restricted": {
          "description": "If true, the new User must be granted access to perform actions or access entities on this Account. See [/account/users/{username}/grants](#operation/getUserGrants) for details on how to configure grants for a restricted User.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": ["username", "email"]
    },
    "AccountUsersResponse": {
      "title": "AccountUsersResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountAccess": {
      "title": "AccountAccess",
      "description": "The level of access this User has to Account-level actions, like billing information. A restricted User will never be able to manage users.",
      "example": "read_only",
      "type": "string",
      "enum": ["read_only", "read_write"]
    },
    "Action": {
      "title": "Action",
      "description": "The action that caused this Event. New actions may be added in the future.",
      "example": "backups_enable",
      "type": "string",
      "enum": [
        "backups_enable",
        "backups_cancel",
        "backups_restore",
        "community_question_reply",
        "community_like",
        "credit_card_updated",
        "disk_create",
        "disk_delete",
        "disk_duplicate",
        "disk_imagize",
        "disk_resize",
        "dns_record_create",
        "dns_record_delete",
        "dns_zone_create",
        "dns_zone_delete",
        "image_delete",
        "linode_addip",
        "linode_boot",
        "linode_clone",
        "linode_create",
        "linode_delete",
        "linode_deleteip",
        "linode_migrate",
        "linode_mutate",
        "linode_reboot",
        "linode_rebuild",
        "linode_resize",
        "linode_shutdown",
        "linode_snapshot",
        "longviewclient_create",
        "longviewclient_delete",
        "managed_disabled",
        "managed_enabled",
        "managed_service_create",
        "managed_service_delete",
        "nodebalancer_create",
        "nodebalancer_delete",
        "nodebalancer_config_create",
        "nodebalancer_config_delete",
        "password_reset",
        "payment_submitted",
        "stackscript_create",
        "stackscript_delete",
        "stackscript_publicize",
        "stackscript_revise",
        "tfa_disabled",
        "tfa_enabled",
        "ticket_attachment_upload",
        "ticket_create",
        "ticket_update",
        "volume_attach",
        "volume_clone",
        "volume_create",
        "volume_delete",
        "volume_detach",
        "volume_resize"
      ]
    },
    "Addons": {
      "title": "Addons",
      "description": "A list of optional add-on services for Linodes and their associated costs.",
      "type": "object",
      "properties": {
        "backups": {
          "$ref": "#/definitions/Backups1"
        }
      }
    },
    "Alerts": {
      "title": "Alerts",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "The percentage of CPU usage required to trigger an alert. If the average CPU usage over two hours exceeds this value, we'll send you an alert. If this is set to 0, the alert is disabled.",
          "example": 90,
          "type": "integer",
          "format": "int32"
        },
        "network_in": {
          "description": "The amount of incoming traffic, in Mbit/s, required to trigger an alert. If the average incoming traffic over two hours exceeds this value, we'll send you an alert. If this is set to 0 (zero), the alert is disabled.",
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "network_out": {
          "description": "The amount of outbound traffic, in Mbit/s, required to trigger an alert. If the average outbound traffic over two hours exceeds this value, we'll send you an alert. If this is set to 0 (zero), the alert is disabled.",
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "transfer_quota": {
          "description": "The percentage of network transfer that may be used before an alert is triggered. When this value is exceeded, we'll alert you. If this is set to 0 (zero), the alert is disabled.",
          "example": 80,
          "type": "integer",
          "format": "int32"
        },
        "io": {
          "description": "The amount of disk IO operation per second required to trigger an alert. If the average disk IO over two hours exceeds this value, we'll send you an alert. If set to 0, this alert is disabled.",
          "example": 10000,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Algorithm": {
      "title": "Algorithm",
      "description": "What algorithm this NodeBalancer should use for routing traffic to backends.",
      "example": "roundrobin",
      "type": "string",
      "enum": ["roundrobin", "leastconn", "source"]
    },
    "Apps": {
      "title": "Apps",
      "description": "The apps this Client is monitoring on your Linode. This is configured when you install the Longview Client application, and is present here for information purposes only.",
      "type": "object",
      "properties": {
        "apache": {
          "description": "If True, the Apache Longview Client module is monitoring Apache on your server.",
          "example": true,
          "type": "boolean"
        },
        "nginx": {
          "description": "If True, the Nginx Longview Client module is monitoring Nginx on your server.",
          "example": false,
          "type": "boolean"
        },
        "mysql": {
          "description": "If True, the MySQL Longview Client modules is monitoring MySQL on your server.",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Architecture": {
      "title": "Architecture",
      "description": "The architecture of this Kernel.",
      "example": "x86_64",
      "type": "string",
      "enum": ["x86_64", "i386"]
    },
    "Assignment": {
      "title": "Assignment",
      "type": "object",
      "properties": {
        "address": {
          "description": "Ths IP Address for this assignment. Must be a IPv4 address you can access in the Region specified. May be a public or private address.",
          "example": "12.34.56.78",
          "type": "string"
        },
        "linode_id": {
          "description": "The ID of the Linode to assign this address to. The IP's previous Linode will lose this address, and must end up with at least one public address and no more than one private address once all assignments have been made.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Automatic": {
      "title": "Automatic",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Backup.",
          "example": 123456,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "created": {
          "description": "The date the Backup was taken.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "The date the Backup was most recently updated.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "finished": {
          "description": "The date the Backup completed.",
          "example": "1/15/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "A label for Backups that are of type `snapshot`.",
          "example": "Webserver-Backup-2018",
          "type": "string"
        },
        "configs": {
          "description": "A list of the labels of the Configuration profiles that are part of the Backup.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disks": {
          "description": "A list of the disks that are part of the Backup.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk1"
          }
        }
      }
    },
    "Backups": {
      "title": "Backups",
      "description": "Information about this Linode's backups status. For information about available backups, see [/linode/instances/{linodeId}/backups](#operation/getBackups).",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "If this Linode has the Backup service enabled. To enable backups, see [POST /linode/instances/{linodeId}/backups/enable](#operation/enableBackups).",
          "example": true,
          "type": "boolean"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule"
        }
      }
    },
    "Backups1": {
      "title": "Backups1",
      "description": "Information about the optional Backup service offered for Linodes.",
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#/definitions/Price1"
        }
      }
    },
    "Check": {
      "title": "Check",
      "description": "The type of check to perform against backends to ensure they are serving requests. This is used to determine if backends are up or down.\n* If `none` no check is performed.\n* `connection` requires only a connection to the backend to succeed.\n* `http` and `http_body` rely on the backend serving HTTP, and that  the response returned matches what is expected.",
      "example": "none",
      "type": "string",
      "enum": ["none", "connection", "http", "http_body"]
    },
    "CipherSuite": {
      "title": "CipherSuite",
      "description": "What ciphers to use for SSL connections served by this NodeBalancer.\n\n* `legacy` is considered insecure and should only be used if necessary.",
      "example": "recommended",
      "type": "string",
      "enum": ["recommended", "legacy"]
    },
    "Class": {
      "title": "Class",
      "description": "The class of the Linode Type. We currently offer four classes of Linodes:\n  * nanode - Our entry-level Linode Type.\n  * standard - Our flagship Linode Type.\n  * dedicated - Our Dedicated CPU Linode Type.\n  * highmem - A Linode Type featuring high memory availability.",
      "example": "nanode",
      "type": "string",
      "enum": ["nanode", "standard", "dedicated", "highmem"]
    },
    "Config": {
      "title": "Config",
      "type": "object",
      "properties": {
        "id": {
          "description": "This config's unique ID",
          "example": 4567,
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "description": "The port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example).  While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443.",
          "example": 80,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 65535.0,
          "format": "int32"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "algorithm": {
          "$ref": "#/definitions/Algorithm"
        },
        "stickiness": {
          "$ref": "#/definitions/Stickiness"
        },
        "check": {
          "$ref": "#/definitions/Check"
        },
        "check_interval": {
          "description": "How often, in seconds, to check that backends are up and serving requests.",
          "example": 90,
          "type": "integer",
          "format": "int32"
        },
        "check_timeout": {
          "description": "How long, in seconds, to wait for a check attempt before considering it failed.",
          "example": 10,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 30.0,
          "format": "int32"
        },
        "check_attempts": {
          "description": "How many times to attempt a check before considering a backend to be down.",
          "example": 3,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 30.0,
          "format": "int32"
        },
        "check_path": {
          "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.",
          "example": "/test",
          "type": "string"
        },
        "check_body": {
          "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in the response body of a check request, the backend is considered to be down.",
          "example": "it works",
          "type": "string"
        },
        "check_passive": {
          "description": "If true, any response from this backend with a `5xx` status code will be enough for it to be considered unhealthy and taken out of rotation.",
          "example": true,
          "type": "boolean"
        },
        "cipher_suite": {
          "$ref": "#/definitions/CipherSuite"
        },
        "nodebalancer_id": {
          "description": "The ID for the NodeBalancer this config belongs to.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "ssl_commonname": {
          "description": "The common name for the SSL certification this port is serving if this port is not configured to use SSL.",
          "type": "string"
        },
        "ssl_fingerprint": {
          "description": "The fingerprint for the SSL certification this port is serving if this port is not configured to use SSL.",
          "type": "string"
        },
        "ssl_cert": {
          "description": "The certificate this port is serving. This is not returned. If set, this field will come back as \"&lt;REDACTED&gt;\".\nPlease use the `ssl_commonname` and `ssl_fingerprint` to identify the certificate.",
          "type": "string"
        },
        "ssl_key": {
          "description": "The private key corresponding to this port's certificate.  This is not returned. If set, this field will come back as \"&lt;REDACTED&gt;\".\nPlease use the `ssl_commonname` and `ssl_fingerprint` to identify the certificate.",
          "type": "string"
        },
        "nodes_status": {
          "$ref": "#/definitions/NodesStatus"
        },
        "nodes": {
          "description": "The NodeBalancer Nodes that serve this port.  When creating a NodeBalancer this way, at least one Node is required per configured port.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeBalancerNode"
          }
        }
      }
    },
    "Config1": {
      "title": "Config1",
      "type": "object",
      "properties": {
        "id": {
          "description": "This config's unique ID",
          "example": 4567,
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "description": "The port this Config is for. These values must be unique across configs on a single NodeBalancer (you can't have two configs for port 80, for example).  While some ports imply some protocols, no enforcement is done and you may configure your NodeBalancer however is useful to you. For example, while port 443 is generally used for HTTPS, you do not need SSL configured to have a NodeBalancer listening on port 443.",
          "example": 80,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 65535.0,
          "format": "int32"
        },
        "protocol": {
          "$ref": "#/definitions/Protocol"
        },
        "algorithm": {
          "$ref": "#/definitions/Algorithm"
        },
        "stickiness": {
          "$ref": "#/definitions/Stickiness"
        },
        "check": {
          "$ref": "#/definitions/Check"
        },
        "check_interval": {
          "description": "How often, in seconds, to check that backends are up and serving requests.",
          "example": 90,
          "type": "integer",
          "format": "int32"
        },
        "check_timeout": {
          "description": "How long, in seconds, to wait for a check attempt before considering it failed.",
          "example": 10,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 30.0,
          "format": "int32"
        },
        "check_attempts": {
          "description": "How many times to attempt a check before considering a backend to be down.",
          "example": 3,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 30.0,
          "format": "int32"
        },
        "check_path": {
          "description": "The URL path to check on each backend. If the backend does not respond to this request it is considered to be down.",
          "example": "/test",
          "type": "string"
        },
        "check_body": {
          "description": "This value must be present in the response body of the check in order for it to pass. If this value is not present in the response body of a check request, the backend is considered to be down.",
          "example": "it works",
          "type": "string"
        },
        "check_passive": {
          "description": "If true, any response from this backend with a `5xx` status code will be enough for it to be considered unhealthy and taken out of rotation.",
          "example": true,
          "type": "boolean"
        },
        "cipher_suite": {
          "$ref": "#/definitions/CipherSuite"
        },
        "nodebalancer_id": {
          "description": "The ID for the NodeBalancer this config belongs to.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "ssl_commonname": {
          "description": "The common name for the SSL certification this port is serving if this port is not configured to use SSL.",
          "type": "string"
        },
        "ssl_fingerprint": {
          "description": "The fingerprint for the SSL certification this port is serving if this port is not configured to use SSL.",
          "type": "string"
        },
        "ssl_cert": {
          "description": "The certificate this port is serving. This is not returned. If set, this field will come back as \"&lt;REDACTED&gt;\".\nPlease use the `ssl_commonname` and `ssl_fingerprint` to identify the certificate.",
          "type": "string"
        },
        "ssl_key": {
          "description": "The private key corresponding to this port's certificate.  This is not returned. If set, this field will come back as \"&lt;REDACTED&gt;\".\nPlease use the `ssl_commonname` and `ssl_fingerprint` to identify the certificate.",
          "type": "string"
        },
        "nodes_status": {
          "$ref": "#/definitions/NodesStatus"
        },
        "nodes": {
          "description": "The NodeBalancer Node(s) that serve this port. At least one Node is required per configured port.\nSome considerations for Nodes when rebuilding a config:  * Current Nodes excluded from the request body will be deleted.\n  * Current Nodes (identified by their ID) will be updated.\n  * New Nodes (included without an ID) will be created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeBalancerNode"
          }
        }
      }
    },
    "CreditCard2": {
      "title": "CreditCard2",
      "description": "Credit Card information associated with this Account.",
      "type": "object",
      "properties": {
        "last_four": {
          "description": "The last four digits of the credit card associated with this Account.",
          "example": "1111",
          "type": "string"
        },
        "expiry": {
          "description": "The expiration month and year of the credit card.",
          "example": "11/2022",
          "type": "string"
        }
      }
    },
    "Data": {
      "title": "Data",
      "description": "The data returned about this NodeBalancers.",
      "type": "object",
      "properties": {
        "connections": {
          "description": "An array of key/value pairs representing unix timestamp and reading for connections to this NodeBalancer.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "traffic": {
          "$ref": "#/definitions/Traffic"
        }
      }
    },
    "Data1": {
      "title": "Data1",
      "type": "object",
      "properties": {
        "type": {
          "example": "linode",
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "Day": {
      "title": "Day",
      "description": "The day of the week that your Linode's weekly Backup is taken.\nIf not set manually, a day will be chosen for you. Backups\nare taken every day, but backups taken on this day are\npreferred when selecting backups to retain for a longer period.\n\n\nIf not set manually, then when backups are initially enabled, this\nmay come back as `Scheduling` until the `day` is automatically selected.",
      "example": "Scheduling",
      "type": "string",
      "enum": [
        "Scheduling",
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ]
    },
    "Disk1": {
      "title": "Disk1",
      "type": "object",
      "properties": {
        "size": {
          "example": 9001,
          "type": "integer",
          "format": "int32"
        },
        "filesystem": {
          "$ref": "#/definitions/filesystem"
        },
        "label": {
          "example": "My Debian 9 Disk",
          "type": "string"
        }
      }
    },
    "DomainsImportRequest": {
      "title": "DomainsImportRequest",
      "type": "object",
      "properties": {
        "domain": {
          "description": "The domain to import.",
          "example": "example.com",
          "type": "string"
        },
        "remote_nameserver": {
          "description": "The remote nameserver that allows zone transfers (AXFR).",
          "example": "examplenameserver.com",
          "type": "string"
        }
      }
    },
    "DomainsRecordsResponse": {
      "title": "DomainsRecordsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DomainRecord"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DomainsResponse": {
      "title": "DomainsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Domain"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Entity": {
      "title": "Entity",
      "description": "Detailed information about the Event's entity, including ID, type, label, and URL used to access it.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID for this Event's Entity.",
          "example": 11111,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The current label of this object. The label may reflect changes that occur with this Event.",
          "example": "Problem booting my Linode",
          "type": "string"
        },
        "type": {
          "description": "The type of entity this Event is related to.",
          "example": "ticket",
          "type": "string"
        },
        "url": {
          "description": "The URL where you can access the object this Event is for. If a relative URL, it is relative to the domain you retrieved the Event from.",
          "example": "/v4/support/tickets/11111",
          "type": "string"
        }
      }
    },
    "Entity1": {
      "title": "Entity1",
      "description": "The ticket this Managed Issue opened.",
      "type": "object",
      "properties": {
        "id": {
          "description": "This ticket's ID",
          "example": 98765,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type7"
        },
        "label": {
          "description": "The summary for this Ticket.",
          "example": "Managed Issue opened!",
          "type": "string"
        },
        "url": {
          "description": "The relative URL where you can access this Ticket.",
          "example": "/support/tickets/98765",
          "type": "string"
        }
      }
    },
    "Entity2": {
      "title": "Entity2",
      "description": "Detailed information about the Notification.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the Notification's entity, based on the entity type.",
          "example": 3456,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The current label for this Notification's entity.",
          "example": "Linode not booting.",
          "type": "string"
        },
        "type": {
          "description": "The type of entity this is related to.",
          "example": "ticket",
          "type": "string"
        },
        "url": {
          "description": "The URL where you can access the object this Notification is for. If a relative URL, it is relative to the domain you retrieved the Notification from.",
          "example": "/support/tickets/3456",
          "type": "string"
        }
      }
    },
    "Entity3": {
      "title": "Entity3",
      "description": "The entity this Ticket was opened for.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID for this Ticket's entity.",
          "example": 10400,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The current label of this entity.",
          "example": "linode123456",
          "type": "string"
        },
        "type": {
          "description": "The type of entity this is related to.",
          "example": "linode",
          "type": "string"
        },
        "url": {
          "description": "The URL where you can access the object this event is for. If a relative URL, it is relative to the domain you retrieved the entity from.",
          "example": "/v4/linode/instances/123456",
          "type": "string"
        }
      }
    },
    "filesystem": {
      "title": "filesystem",
      "description": "The Disk filesystem can be one of:\n  * raw - No filesystem, just a raw binary stream.\n  * swap - Linux swap area.\n  * ext3 - The ext3 journaling filesystem for Linux.\n  * ext4 - The ext4 journaling filesystem for Linux.\n  * initrd - initrd (uncompressed initrd, ext2, max 32 MB).",
      "example": "raw",
      "type": "string",
      "enum": ["raw", "swap", "ext3", "ext4", "initrd"]
    },
    "Global": {
      "title": "Global",
      "description": "A structure containing the Account-level grants a User has.",
      "type": "object",
      "properties": {
        "add_linodes": {
          "description": "If true, this User may create Linodes.",
          "example": true,
          "type": "boolean"
        },
        "add_longview": {
          "description": "If true, this User may create Longview clients.",
          "example": true,
          "type": "boolean"
        },
        "longview_subscription": {
          "description": "If true, this User may manage the Account's Longview subscription.",
          "example": true,
          "type": "boolean"
        },
        "account_access": {
          "$ref": "#/definitions/AccountAccess"
        },
        "cancel_account": {
          "description": "If true, this User may cancel the entire Account.",
          "example": false,
          "type": "boolean"
        },
        "add_domains": {
          "description": "If true, this User may add Domains.",
          "example": true,
          "type": "boolean"
        },
        "add_stackscripts": {
          "description": "If true, this User may add StackScripts.",
          "example": true,
          "type": "boolean"
        },
        "add_nodebalancers": {
          "description": "If true, this User may add NodeBalancers.",
          "example": true,
          "type": "boolean"
        },
        "add_images": {
          "description": "If true, this User may add Images.",
          "example": true,
          "type": "boolean"
        },
        "add_volumes": {
          "description": "If true, this User may add Volumes.",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Helpers": {
      "title": "Helpers",
      "description": "Helpers enabled when booting to this Linode Config.",
      "type": "object",
      "properties": {
        "updatedb_disabled": {
          "description": "Disables updatedb cron job to avoid disk thrashing.",
          "example": true,
          "type": "boolean"
        },
        "distro": {
          "description": "Helps maintain correct inittab/upstart console device.",
          "example": true,
          "type": "boolean"
        },
        "modules_dep": {
          "description": "Creates a modules dependency file for the Kernel you run.",
          "example": true,
          "type": "boolean"
        },
        "network": {
          "description": "Automatically configures static networking.",
          "example": true,
          "type": "boolean"
        },
        "devtmpfs_automount": {
          "description": "Populates the /dev directory early during boot without udev.  Defaults to false.",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Hypervisor": {
      "title": "Hypervisor",
      "description": "The virtualization software powering this Linode.",
      "example": "kvm",
      "type": "string",
      "enum": ["kvm"]
    },
    "ImagesRequest": {
      "title": "ImagesRequest",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Image.",
          "example": "private/67848373",
          "type": "string"
        },
        "label": {
          "description": "A short description of the Image. Labels cannot contain special characters.",
          "example": "My gold-master image",
          "type": "string"
        },
        "created": {
          "description": "When this Image was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "description": "The name of the User who created this Image.",
          "example": "somename",
          "type": "string"
        },
        "deprecated": {
          "description": "Whether or not this Image is deprecated. Will only be True for deprecated public Images.",
          "example": false,
          "type": "boolean"
        },
        "description": {
          "description": "A detailed description of this Image.",
          "example": "The detailed description of my Image.",
          "type": "string"
        },
        "is_public": {
          "description": "True if the Image is public.",
          "example": false,
          "type": "boolean"
        },
        "size": {
          "description": "The minimum size this Image needs to deploy. Size is in MB.",
          "example": 2500,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/Type3"
        },
        "expiry": {
          "description": "Only Images created automatically (from a deleted Linode; type=automatic) will expire.",
          "example": "8/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "vendor": {
          "description": "The upstream distribution vendor. `None` for private Images.",
          "type": "string"
        },
        "disk_id": {
          "description": "The ID of the Linode Disk that this Image will be created from.",
          "example": 42,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["disk_id"]
    },
    "ImagesResponse": {
      "title": "ImagesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImagePublic"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Io": {
      "title": "Io",
      "description": "Input/Output statistics.",
      "type": "object",
      "properties": {
        "io": {
          "description": "Block/s written.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "swap": {
          "description": "Block/s written.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "Ipv4": {
      "title": "Ipv4",
      "description": "Information about this Linode's IPv4 addresses.",
      "type": "object",
      "properties": {
        "public": {
          "description": "A list of public IP Address objects belonging to this Linode.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAddress"
          }
        },
        "private": {
          "description": "A list of private IP Address objects belonging to this Linode.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAddressPrivate"
          }
        },
        "shared": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAddress"
          }
        }
      }
    },
    "Ipv6": {
      "title": "Ipv6",
      "description": "Information about this Linode's IPv6 addresses.",
      "type": "object",
      "properties": {
        "link_local": {
          "$ref": "#/definitions/IPAddressV6LinkLocal"
        },
        "slaac": {
          "$ref": "#/definitions/IPAddressV6Slaac"
        },
        "global": {
          "$ref": "#/definitions/IPv6Pool"
        }
      }
    },
    "LinodeInstancesBackupsRequest": {
      "title": "LinodeInstancesBackupsRequest",
      "type": "object",
      "properties": {
        "label": {
          "example": "SnapshotLabel",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": ["label"]
    },
    "LinodeInstancesBackupsResponse": {
      "title": "LinodeInstancesBackupsResponse",
      "type": "object",
      "properties": {
        "automatic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Automatic"
          }
        },
        "snapshot": {
          "$ref": "#/definitions/Snapshot"
        }
      }
    },
    "LinodeInstancesBackupsRestoreRequest": {
      "title": "LinodeInstancesBackupsRestoreRequest",
      "type": "object",
      "properties": {
        "linode_id": {
          "description": "The ID of the Linode to restore a Backup to.",
          "example": 234,
          "type": "integer",
          "format": "int32"
        },
        "overwrite": {
          "description": "If True, deletes all Disks and Configs on the target Linode before restoring.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": ["linode_id"]
    },
    "LinodeInstancesBootRequest": {
      "title": "LinodeInstancesBootRequest",
      "type": "object",
      "properties": {
        "config_id": {
          "description": "The Linode Config ID to boot into. If omitted, we will attempt to select a config to use. (This will do the right thing in most cases.)",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeInstancesCloneRequest": {
      "title": "LinodeInstancesCloneRequest",
      "type": "object",
      "properties": {
        "region": {
          "description": "This is the Region where the Linode will be deployed.\nTo view all available Regions you can deploy to see [/regions](#operation/getRegions).\n* Region can only be provided when cloning to a new Linode.",
          "example": "us-east",
          "type": "string"
        },
        "type": {
          "description": "A Linode's Type determines what resources are available to\nit, including disk space, memory, and virtual cpus. The\namounts available to a specific Linode are returned as\n`specs` on the Linode object.\n\nTo view all available Linode Types you can deploy with\nsee [/linode/types](#operation/getLinodeTypes).\n\n* Type can only be provided when cloning to a new Linode.",
          "example": "g6-standard-2",
          "type": "string"
        },
        "linode_id": {
          "description": "If an existing Linode is to be the target for the clone, the ID of that Linode. The existing Linode must have enough resources to accept the clone.",
          "example": 124,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The label to assign this Linode when cloning to a new Linode.\n* Can only be provided when cloning to a new Linode. * Defaults to \"linode\".",
          "example": "cloned-linode",
          "type": "string"
        },
        "group": {
          "description": "A label used to group Linodes for display. Linodes are not required to have a group.",
          "example": "Linode-Group",
          "type": "string"
        },
        "backups_enabled": {
          "description": "If this field is set to `true`, the created Linode will\nautomatically be enrolled in the Linode Backup service. This\nwill incur an additional charge. Pricing is included in the\nresponse from\n[/linodes/types](#operation/getLinodeTypes).\n\n* Can only be included when cloning to a new Linode.",
          "example": true,
          "type": "boolean"
        },
        "disks": {
          "description": "All disks attached to configs will be cloned from the source Linode if not provided.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "configs": {
          "description": "All configs attached to will be cloned from the source Linode if not provided.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "LinodeInstancesConfigsResponse": {
      "title": "LinodeInstancesConfigsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinodeConfig"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeInstancesDisksPasswordRequest": {
      "title": "LinodeInstancesDisksPasswordRequest",
      "type": "object",
      "properties": {
        "password": {
          "description": "The new root password for the OS installed on this Disk.\nThe password must contain at least two of these four character classes:\n  * lowercase letters\n  * uppercase letters\n  * numbers\n  * punctuation",
          "example": "another@complex^Password123",
          "type": "string",
          "minLength": 6,
          "maxLength": 128
        }
      },
      "required": ["password"]
    },
    "LinodeInstancesDisksResizeRequest": {
      "title": "LinodeInstancesDisksResizeRequest",
      "type": "object",
      "properties": {
        "size": {
          "description": "The desired size, in MB, of the disk.",
          "example": 2048,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        }
      }
    },
    "LinodeInstancesDisksResponse": {
      "title": "LinodeInstancesDisksResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeInstancesIpsRequest": {
      "title": "LinodeInstancesIpsRequest",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of address you are allocating. Only IPv4 addresses may be allocated through this endpoint.",
          "example": "ipv4",
          "type": "string",
          "default": "ipv4"
        },
        "public": {
          "description": "Whether to create a public or private IPv4 address.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": ["type", "public"]
    },
    "LinodeInstancesIpsRequest1": {
      "title": "LinodeInstancesIpsRequest1",
      "type": "object",
      "properties": {
        "rdns": {
          "example": "linode.com",
          "type": "string"
        }
      }
    },
    "LinodeInstancesIpsResponse": {
      "title": "LinodeInstancesIpsResponse",
      "type": "object",
      "properties": {
        "ipv4": {
          "$ref": "#/definitions/Ipv4"
        },
        "ipv6": {
          "$ref": "#/definitions/Ipv6"
        }
      }
    },
    "LinodeInstancesRebootRequest": {
      "title": "LinodeInstancesRebootRequest",
      "type": "object",
      "properties": {
        "config_id": {
          "description": "The Linode Config ID to reboot into.  If null or omitted, the last booted config will be used.  If there was no last booted config and this Linode only has one config, it will be used.  If a config cannot be determined, an error will be returned.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeInstancesRebuildRequest": {
      "title": "LinodeInstancesRebuildRequest",
      "allOf": [
        {
          "$ref": "#/definitions/LinodeRequest"
        },
        {
          "type": "object",
          "properties": {
            "image": {
              "type": "string"
            },
            "root_pass": {
              "type": "string"
            }
          },
          "required": ["image", "root_pass"]
        }
      ]
    },
    "LinodeInstancesRequest": {
      "title": "LinodeInstancesRequest",
      "type": "object",
      "properties": {
        "backup_id": {
          "description": "A Backup ID from another Linode's available backups. Your User must have\n`read_write` access to that Linode, the Backup must have a `status` of\n`successful`, and the Linode must be deployed to the same `region` as the Backup.\nSee [/linode/instances/{linodeId}/backups](#operation/getBackups)\nfor a Linode's available backups.\n\nThis field and the `image` field are mutually exclusive.",
          "example": 1234,
          "type": "integer",
          "format": "int32"
        },
        "backups_enabled": {
          "description": "If this field is set to `true`, the created Linode will automatically be\nenrolled in the Linode Backup service. This will incur an additional charge.\nThe cost for the Backup service is dependent on the Type of Linode deployed.\n\nThis option is always treated as `true` if the account-wide `backups_enabled`\nsetting is `true`.  See [account settings](#operaton/getAccountSettings)\nfor more information.\n\nBackup pricing is included in the response from [/linodes/types](#operation/getLinodeTypes)",
          "type": "boolean"
        },
        "swap_size": {
          "description": "When deploying from an Image, this field is optional, otherwise it is ignored. This is used to set the swap disk size for the newly-created Linode.",
          "example": 512,
          "type": "integer",
          "default": 512,
          "format": "int32"
        },
        "type": {
          "description": "The [Linode Type](#operation/getLinodeTypes) of the Linode you are creating.",
          "example": "g6-standard-2",
          "type": "string"
        },
        "region": {
          "description": "The [Region](#operation/getRegions) where the Linode will be located.",
          "example": "us-east",
          "type": "string"
        },
        "image": {
          "description": "An Image ID to deploy the Disk from. Official Linode Images start with `linode/ `, while your Images start with `private/`.\nSee [/images](#operation/getImages) for more information on the Images available for you to use.",
          "example": "linode/debian9",
          "type": "string"
        },
        "root_pass": {
          "description": "The password for the root user on the newly-created Linode. Only accepted if \"image\" is provided.",
          "example": "s3cureP@ssw0rd",
          "type": "string"
        },
        "authorized_keys": {
          "description": "A list of SSH public keys to deploy for the root user on the newly-created Linode.  Only accepted if `image` is provided.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stackscript_id": {
          "description": "The StackScript to deploy to the newly-created Linode.  If provided, \"image\" must also be provided, and must be an Image that is compatible with this StackScript.",
          "example": 10079,
          "type": "integer",
          "format": "int32"
        },
        "stackscript_data": {
          "description": "An object containing responses to any User Defined Fields present in the StackScript being deployed to this Linode. Only accepted if `stackscript_id` is given.  The required values depend on the StackScript being deployed.",
          "type": "object"
        },
        "booted": {
          "description": "Whether to boot this Linode after the deploy is complete. Defaults to true if `image` is provided. Not accepted if not deploying from an Image.",
          "type": "boolean"
        },
        "label": {
          "description": "The Linode's label is for display purposes only. If no label is provided for a Linode, a default will be assigned.\nLinode labels have the following constraints:\n  * Must start with an alpha character.\n  * Must consist of alphanumeric characters, dashes (`-`), and underscores (`_`).\n  * Cannot have two dashes (`--`) or underscores (`__`) in a row.",
          "type": "object"
        },
        "tags": {
          "description": "An array of tags applied to this object.  Tags are for organizational purposes only.",
          "example": ["example tag", "another example"],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "description": "A deprecated property denoting a group label for this Linode.",
          "example": "Linode-Group",
          "type": "string"
        },
        "private_ip": {
          "description": "If true, the created Linode will have private networking enabled.",
          "example": true,
          "type": "boolean"
        },
        "authorized_users": {
          "description": "A list of usernames. If the usernames have associated SSH keys, the keys will be appended to the root users `~/.ssh/authorized_keys` file automatically.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["type", "region"]
    },
    "LinodeInstancesRescueRequest": {
      "title": "LinodeInstancesRescueRequest",
      "type": "object",
      "properties": {
        "devices": {
          "$ref": "#/definitions/RescueDevices"
        }
      }
    },
    "LinodeInstancesResizeRequest": {
      "title": "LinodeInstancesResizeRequest",
      "type": "object",
      "properties": {
        "type": {
          "description": "The ID representing the Linode Type.",
          "example": "g6-standard-2",
          "type": "string"
        }
      },
      "required": ["type"]
    },
    "LinodeInstancesResponse": {
      "title": "LinodeInstancesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Linode"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeInstancesVolumesResponse": {
      "title": "LinodeInstancesVolumesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeKernelsResponse": {
      "title": "LinodeKernelsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Kernel"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeStackscriptsResponse": {
      "title": "LinodeStackscriptsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackScript"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LinodeTypesResponse": {
      "title": "LinodeTypesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinodeType"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LishAuthMethod": {
      "title": "LishAuthMethod",
      "description": "What methods of authentication are allowed when connecting via Lish.  \"keys_only\" is the most secure if you intend to use Lish, and \"disabled\" is recommended if you do not intend to use Lish at all.",
      "example": "password_keys",
      "type": "string",
      "enum": ["password_keys", "keys_only", "disabled"]
    },
    "LongviewClientsResponse": {
      "title": "LongviewClientsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LongviewClient"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LongviewSubscriptionsResponse": {
      "title": "LongviewSubscriptionsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LongviewSubscription"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedContactsResponse": {
      "title": "ManagedContactsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedContact"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedCredentialsRequest": {
      "title": "ManagedCredentialsRequest",
      "type": "object",
      "properties": {
        "id": {
          "description": "This Credential's unique ID.",
          "example": 9991,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The unique label for this Credential. This is for display purposes only.",
          "example": "prod-password-1",
          "type": "string",
          "minLength": 2,
          "maxLength": 75,
          "pattern": "[a-zA-Z0-9-_ \\.]{2,75}"
        },
        "username": {
          "description": "The username to use when accessing the Managed Service.",
          "example": "johndoe",
          "type": "string",
          "minLength": 0,
          "maxLength": 5000
        },
        "password": {
          "description": "The password to use when accessing the Managed Service.",
          "example": "s3cur3P@ssw0rd",
          "type": "string",
          "minLength": 0,
          "maxLength": 5000
        }
      },
      "required": ["label"]
    },
    "ManagedCredentialsResponse": {
      "title": "ManagedCredentialsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedCredential"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedIssuesResponse": {
      "title": "ManagedIssuesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedIssue"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedLinodeSettingsResponse": {
      "title": "ManagedLinodeSettingsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedLinodeSettings"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedServicesResponse": {
      "title": "ManagedServicesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedService"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Mode": {
      "title": "Mode",
      "description": "The mode this NodeBalancer should use when sending traffic to this backend.\n* If set to `accept` this backend is accepting traffic.\n* If set to `reject` this backend will not receive traffic.\n* If set to `drain` this backend will not receive _new_ traffic, but connections already  pinned to it will continue to be routed to it.",
      "example": "accept",
      "type": "string",
      "enum": ["accept", "reject", "drain"]
    },
    "Netv4": {
      "title": "Netv4",
      "description": "IPv4 statistics.",
      "type": "object",
      "properties": {
        "in": {
          "description": "Input stats for IPv4, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "out": {
          "description": "Output stats for IPv4, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "private_in": {
          "description": "Private IPv4 input statistics, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "private_out": {
          "description": "Private IPv4 output statistics, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "Netv6": {
      "title": "Netv6",
      "description": "IPv6 statistics.",
      "type": "object",
      "properties": {
        "in": {
          "description": "Input stats for IPv6, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "out": {
          "description": "Output stats for IPv6, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "private_in": {
          "description": "Private IPv6 input statistics, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "private_out": {
          "description": "Private IPv6 output statistics, measured in bits/s (bits/second).",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "NetworkingIpsRequest": {
      "title": "NetworkingIpsRequest",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of address you are requesting. Only IPv4 addresses may be allocated through this endpoint.",
          "example": "ipv4",
          "type": "string",
          "default": "ipv4"
        },
        "public": {
          "description": "Whether to create a public or private IPv4 address.",
          "example": true,
          "type": "boolean"
        },
        "linode_id": {
          "description": "The ID of a Linode you you have access to that this address will be allocated to.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": ["type", "public", "linode_id"]
    },
    "NetworkingIpsResponse": {
      "title": "NetworkingIpsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAddress"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NetworkingIpv4AssignRequest": {
      "title": "NetworkingIpv4AssignRequest",
      "type": "object",
      "properties": {
        "region": {
          "description": "The ID of the Region in which these assignments are to take place.  All IPs and Linodes must exist in this Region.",
          "example": "us-east",
          "type": "string"
        },
        "assignments": {
          "description": "The list of assignments to make.  You must have read_write access to all IPs being assigned and all Linodes being assigned to in order for the assignments to succeed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Assignment"
          }
        }
      },
      "required": ["region", "assignments"]
    },
    "NetworkingIpv4ShareRequest": {
      "title": "NetworkingIpv4ShareRequest",
      "type": "object",
      "properties": {
        "linode_id": {
          "description": "The ID of the Linode that the addresses will be shared with.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "ips": {
          "description": "A list of IPs that will be shared with this Linode.  When this is finished, the given Linode will be able to bring up these addresses in addition to the Linodes that these addresses belong to.  You must have access to all of these addresses and they must be in the same Region as the Linode.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["linode_id", "ips"]
    },
    "NetworkingIpv6PoolsResponse": {
      "title": "NetworkingIpv6PoolsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPv6Pool"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NetworkingIpv6RangesResponse": {
      "title": "NetworkingIpv6RangesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPv6Range"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NodebalancersConfigsNodesResponse": {
      "title": "NodebalancersConfigsNodesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeBalancerNode"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NodebalancersConfigsRebuildRequest": {
      "title": "NodebalancersConfigsRebuildRequest",
      "type": "object",
      "properties": {
        "configs": {
          "description": "Each config must have a unique port and at least one Node. Additionally:  * Current Nodes excluded from the request body will be deleted.\n  * Current Nodes (identified by their ID) will be updated.\n  * New Nodes (included without an ID) will be created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config1"
          }
        }
      }
    },
    "NodebalancersConfigsResponse": {
      "title": "NodebalancersConfigsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeBalancerConfig"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NodebalancersRequest": {
      "title": "NodebalancersRequest",
      "type": "object",
      "properties": {
        "region": {
          "description": "The ID of the Region to create this NodeBalancer in.",
          "example": "us-east",
          "type": "string"
        },
        "label": {
          "description": "This NodeBalancer's label. These must be unique on your Account.",
          "example": "balancer12345",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "[a-zA-Z0-9-_]{3,32}"
        },
        "client_conn_throttle": {
          "description": "Throttle connections per second.  Set to 0 (zero) to disable throttling.",
          "example": 0,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 20.0,
          "format": "int32"
        },
        "configs": {
          "description": "The ports to configure this NodeBalancer with on creation. Each config must have a unique port and at least one Node.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config"
          }
        }
      },
      "required": ["region"]
    },
    "NodebalancersResponse": {
      "title": "NodebalancersResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeBalancer"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "NodesStatus": {
      "title": "NodesStatus",
      "description": "A structure containing information about the health of the backends for this port.  This information is updated periodically as checks are performed against backends.",
      "type": "object",
      "properties": {
        "up": {
          "description": "The number of backends considered to be \"UP\" and healthy, and that are serving requests.",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "down": {
          "description": "The number of backends considered to be \"DOWN\" and unhealthy.  These are not in rotation, and not serving requests.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Permissions": {
      "title": "Permissions",
      "description": "The level of access this User has to this entity.  If null, this User has no access.",
      "example": "read_only",
      "type": "string",
      "enum": ["read_only", "read_write"]
    },
    "Phone": {
      "title": "Phone",
      "description": "Information about how to reach this Contact by phone.",
      "type": "object",
      "properties": {
        "primary": {
          "description": "This Contact's primary phone number.",
          "example": "123-456-7890",
          "type": "string"
        },
        "secondary": {
          "description": "This Contact's secondary phone number.",
          "type": "string"
        }
      }
    },
    "Price": {
      "title": "Price",
      "description": "Cost in US dollars, broken down into hourly and monthly charges.",
      "type": "object",
      "properties": {
        "hourly": {
          "description": "Cost (in US dollars) per hour.",
          "type": "integer",
          "format": "int32"
        },
        "monthly": {
          "description": "Cost (in US dollars) per month.",
          "example": 20,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Price1": {
      "title": "Price1",
      "description": "Cost of enabling Backups for this Linode Type.",
      "type": "object",
      "properties": {
        "hourly": {
          "description": "The cost (in US dollars) per hour to add Backups service.",
          "type": "integer",
          "format": "int32"
        },
        "monthly": {
          "description": "The cost (in US dollars) per month to add Backups service.",
          "example": 5,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Price2": {
      "title": "Price2",
      "description": "Pricing information about this Subscription tier.",
      "type": "object",
      "properties": {
        "hourly": {
          "description": "The hourly price, in US dollars, for this Subscription tier.",
          "example": 0.06,
          "type": "number",
          "format": "double"
        },
        "monthly": {
          "description": "The maximum monthly price in US Dollars for this Subscription tier. You will never be charged more than this amount per month for this subscription.",
          "example": 40,
          "type": "number",
          "format": "double"
        }
      }
    },
    "ProfileAppsResponse": {
      "title": "ProfileAppsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthorizedApp"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProfileDevicesResponse": {
      "title": "ProfileDevicesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrustedDevice"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProfileSshkeysResponse": {
      "title": "ProfileSshkeysResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SSHKey"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProfileTfaEnableConfirmRequest": {
      "title": "ProfileTfaEnableConfirmRequest",
      "type": "object",
      "properties": {
        "tfa_code": {
          "description": "The Two Factor code you generated with your Two Factor secret. These codes are time-based, so be sure it is current.",
          "example": "213456",
          "type": "string"
        }
      }
    },
    "ProfileTfaEnableConfirmResponse": {
      "title": "ProfileTfaEnableConfirmResponse",
      "type": "object",
      "properties": {
        "scratch": {
          "description": "A one-use code that can be used in place of your Two Factor code, in case you are unable to generate one.  Keep this in a safe place to avoid being locked out of your Account.",
          "example": "sample two factor scratch",
          "type": "string"
        }
      }
    },
    "ProfileTfaEnableResponse": {
      "title": "ProfileTfaEnableResponse",
      "type": "object",
      "properties": {
        "secret": {
          "description": "Your Two Factor secret. This is used to generate time-based two factor codes required for logging in. Doing this will be required to confirm TFA an actually enable it.",
          "example": "5FXX6KLACOC33GTC",
          "type": "string"
        },
        "expiry": {
          "description": "When this Two Factor secret expires.",
          "example": "3/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProfileTokensRequest": {
      "title": "ProfileTokensRequest",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "The scopes to create the token with.  These cannot be changed after creation, and may not exceed the scopes of the acting token. If omitted, the new token will have the same scopes as the acting token.",
          "example": "*",
          "type": "string"
        },
        "expiry": {
          "description": "When this token should be valid until.  If omitted, the new token will be valid until it is manually revoked.",
          "type": "string",
          "format": "date-time"
        },
        "label": {
          "description": "This token's label.  This is for display purposes only, but can be used to more easily track what you're using each token for.",
          "example": "linode-cli",
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        }
      }
    },
    "ProfileTokensResponse": {
      "title": "ProfileTokensResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonalAccessToken"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Protocol": {
      "title": "Protocol",
      "description": "The protocol this port is configured to serve.\n* If this is set to `https` you must include an `ssl_cert` and an `ssl_key`.",
      "example": "http",
      "type": "string",
      "enum": ["http", "https", "tcp"]
    },
    "Referrals": {
      "title": "Referrals",
      "description": "Information about your status in our referral program.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Your referral code.  If others use this when signing up for Linode, you will receive account credit.",
          "example": "871be32f49c1411b14f29f618aaf0c14637fb8d3",
          "type": "string"
        },
        "url": {
          "description": "Your referral url, used to direct others to sign up for Linode with your referral code.",
          "example": "https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3",
          "type": "string"
        },
        "total": {
          "description": "The number of users who have signed up with your referral code.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "completed": {
          "description": "The number of completed signups with your referral code.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "pending": {
          "description": "The number of pending signups with your referral code.  You will not receive credit for these signups until they are completed.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "credit": {
          "description": "The amount of account credit in US Dollars issued to you through the referral program.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RegionsResponse": {
      "title": "RegionsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RunLevel": {
      "title": "RunLevel",
      "description": "Defines the state of your Linode after booting. Defaults to `default`.",
      "example": "default",
      "type": "string",
      "enum": ["default", "single", "binbash"]
    },
    "Schedule": {
      "title": "Schedule",
      "type": "object",
      "properties": {
        "day": {
          "$ref": "#/definitions/Day"
        },
        "window": {
          "$ref": "#/definitions/Window"
        }
      }
    },
    "ServiceType": {
      "title": "ServiceType",
      "description": "How this Service is monitored.",
      "example": "URL",
      "type": "string",
      "enum": ["URL", "TCP"]
    },
    "Severity": {
      "title": "Severity",
      "description": "The severity of this Notification.  This field can be used to decide how prominently to display the Notification, what color to make the display text, etc.",
      "example": "minor",
      "type": "string",
      "enum": ["minor", "major", "critical"]
    },
    "Snapshot": {
      "title": "Snapshot",
      "type": "object",
      "properties": {
        "in_progress": {
          "$ref": "#/definitions/Backup"
        },
        "current": {
          "$ref": "#/definitions/Backup"
        }
      }
    },
    "Specs": {
      "title": "Specs",
      "description": "Information about the resources available to this Linode.",
      "type": "object",
      "properties": {
        "disk": {
          "description": "The amount of storage space, in MB, this Linode has access to. A typical Linode will divide this space between a primary disk with an `image` deployed to it, and a swap disk, usually 512 MB. This is the default configuration created when deploying a Linode with an `image` through [POST /linode/instances](#operation/createLinodeInstance). While this configuration is suitable for 99% of use cases, if you need finer control over your Linode's disks, see the [/linode/instances/{linodeId}/disks](#operation/getLinodeDisks) endpoints.",
          "example": 30720,
          "type": "integer",
          "format": "int32"
        },
        "memory": {
          "description": "The amount of RAM, in MB, this Linode has access to. Typically a Linode will choose to boot with all of its available RAM, but this can be configured in a Config profile, see the [/linode/instances/{linodeId}/configs](#operation/getLinodeConfigs) endpoints and the LinodeConfig object for more information.",
          "example": 2048,
          "type": "integer",
          "format": "int32"
        },
        "vcpus": {
          "description": "The number of vcpus this Linode has access to. Typically a Linode will choose to boot with all of its available vcpus, but this can be configured in a Config Profile, see the [/linode/instances/{linodeId}/configs](#operation/getLinodeConfigs) endpoints and the LinodeConfig object for more information.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "transfer": {
          "description": "The amount of network transfer this Linode is allotted each month.",
          "example": 2000,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Ssh": {
      "title": "Ssh",
      "description": "The SSH settings for this Linode.",
      "type": "object",
      "properties": {
        "access": {
          "description": "If true, Linode special forces may access this Linode over ssh to respond to Issues.",
          "example": true,
          "type": "boolean"
        },
        "user": {
          "description": "The user Linode's special forces should use when accessing this Linode to respond to an issue.",
          "example": "linode",
          "type": "string",
          "minLength": 0,
          "maxLength": 32
        },
        "ip": {
          "description": "The IP Linode special forces should use to access this Linode when responding to an Issue.",
          "example": "12.34.56.78",
          "type": "string"
        },
        "port": {
          "description": "The port Linode special forces should use to access this Linode over ssh to respond to an Issue.",
          "example": 22,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 65535.0,
          "format": "int32"
        }
      }
    },
    "Status": {
      "title": "Status",
      "description": "The current state of a specific Backup.",
      "example": "paused",
      "type": "string",
      "enum": [
        "paused",
        "pending",
        "running",
        "needsPostProcessing",
        "successful",
        "failed",
        "userAborted"
      ]
    },
    "Status1": {
      "title": "Status1",
      "description": "A brief description of this Disk's current state. This field may change without direct action from you, as a result of operations performed to the Disk or the Linode containing the Disk.",
      "example": "ready",
      "type": "string",
      "enum": ["ready", "not ready", "deleting"]
    },
    "Status2": {
      "title": "Status2",
      "description": "Used to control whether this Domain is currently being rendered.",
      "example": "disabled",
      "type": "string",
      "enum": ["disabled", "active", "edit_mode", "has_errors"]
    },
    "Status3": {
      "title": "Status3",
      "description": "The current status of this Event.",
      "example": "failed",
      "type": "string",
      "enum": ["failed", "finished", "notification", "scheduled", "started"]
    },
    "Status4": {
      "title": "Status4",
      "description": "A brief description of this Linode's current state. This field may change without direct action from you. For instance, the status will change to \"running\" when the boot process completes.",
      "example": "running",
      "type": "string",
      "enum": [
        "running",
        "offline",
        "booting",
        "rebooting",
        "shutting_down",
        "provisioning",
        "deleting",
        "migrating",
        "rebuilding",
        "cloning",
        "restoring"
      ]
    },
    "Status5": {
      "title": "Status5",
      "description": "The current status of this Service.",
      "example": "disabled",
      "type": "string",
      "enum": ["disabled", "pending", "ok", "problem"]
    },
    "Status6": {
      "title": "Status6",
      "description": "The current status of this node, based on the configured checks of its NodeBalancer Config.",
      "example": "unknown",
      "type": "string",
      "enum": ["unknown", "UP", "DOWN"]
    },
    "Status7": {
      "title": "Status7",
      "description": "The status of this application.  `active` by default.",
      "example": "active",
      "type": "string",
      "enum": ["active", "disabled", "suspended"]
    },
    "Status8": {
      "title": "Status8",
      "description": "The current status of this Ticket.",
      "example": "closed",
      "type": "string",
      "enum": ["closed", "new", "open"]
    },
    "Status9": {
      "title": "Status9",
      "description": "The current status of the volume.  Can be one of:\n  * `creating` - the Volume is being created and is not yet available\n    for use.\n  * `active` - the Volume is online and available for use.\n  * `resizing` - the Volume is in the process of upgrading\n    its current capacity.\n  * `contact_support` - there is a problem with your Volume. Please\n    [open a Support Ticket](#operation/createTicket) to resolve the issue.",
      "example": "creating",
      "type": "string",
      "enum": ["creating", "active", "resizing", "contact_support"]
    },
    "Stickiness": {
      "title": "Stickiness",
      "description": "Controls how session stickiness is handled on this port.\n* If set to `none` connections will always be assigned a backend based on the algorithm configured.\n* If set to `table` sessions from the same remote address will be routed to the same  backend.\n\n* For HTTP or HTTPS clients, `http_cookie` allows sessions to be  routed to the same backend based on a cookie set by the NodeBalancer.",
      "example": "none",
      "type": "string",
      "enum": ["none", "table", "http_cookie"]
    },
    "SupportTicketsRepliesRequest": {
      "title": "SupportTicketsRepliesRequest",
      "type": "object",
      "properties": {
        "description": {
          "description": "The content of your reply.",
          "example": "Thank you for your help. I was able to figure out what the problem was and I successfully reset my password. You guys are the best!\n",
          "type": "string",
          "minLength": 1,
          "maxLength": 65535
        }
      },
      "required": ["description"]
    },
    "SupportTicketsRepliesResponse": {
      "title": "SupportTicketsRepliesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicketReply"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SupportTicketsResponse": {
      "title": "SupportTicketsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicket"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TagsRequest": {
      "title": "TagsRequest",
      "type": "object",
      "properties": {
        "label": {
          "description": "The new Tag.",
          "example": "example tag",
          "type": "string",
          "minLength": 3,
          "maxLength": 50
        },
        "linodes": {
          "description": "A list of Linode IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Linodes, or the Tag will not be created and an error will be returned.",
          "example": [123, 456],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "domains": {
          "description": "A list of Domain IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Domains, or the Tag will not be created and an error will be returned.",
          "example": [564, 565],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "volumes": {
          "description": "A list of Volume IDs to apply the new Tag to.  You must be allowed to `read_write` all of the requested Volumes, or the Tag will not be created and an error will be returned.",
          "example": [9082, 10003],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "nodebalancers": {
          "description": "A list of NodeBalancer IDs to apply the new Tag to. You must be allowed to `read_write` all of the requested NodeBalancers, or the Tag will not be created and an error will be returned.",
          "example": [10301, 10501],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": ["label"]
    },
    "TagsResponse": {
      "title": "TagsResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TagsResponse1": {
      "title": "TagsResponse1",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Data1"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Traffic": {
      "title": "Traffic",
      "description": "Traffic statistics for this NodeBalancer.",
      "type": "object",
      "properties": {
        "in": {
          "description": "An array of key/value pairs representing unix timestamp and reading for inbound traffic.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "out": {
          "description": "An array of key/value pairs representing unix timestamp and reading for outbound traffic.",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "Transfer2": {
      "title": "Transfer2",
      "description": "Information about the amount of transfer this NodeBalancer has had so far this month.",
      "type": "object",
      "properties": {
        "total": {
          "description": "The total transfer, in MB, used by this NodeBalancer this month.",
          "example": 32.4607810974121,
          "type": "number",
          "format": "double"
        },
        "out": {
          "description": "The total inbound transfer, in MB, used for this NodeBalancer this month.",
          "example": 3.54877281188965,
          "type": "number",
          "format": "double"
        },
        "in": {
          "description": "The total outbound transfer, in MB, used for this NodeBalancer this month.",
          "example": 28.9120082855225,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Type": {
      "title": "Type",
      "description": "This indicates whether the Backup is an automatic Backup or manual snapshot taken by the User at a specific point in time.",
      "example": "auto",
      "type": "string",
      "enum": ["auto", "snapshot"]
    },
    "Type1": {
      "title": "Type1",
      "description": "If this Domain represents the authoritative source of information for the domain it describes, or if it is a read-only copy of a master (also called a slave).",
      "example": "master",
      "type": "string",
      "enum": ["master", "slave"]
    },
    "Type2": {
      "title": "Type2",
      "description": "The type of Record this is in the DNS system. For example, A records associate a domain name with an IPv4 address, and AAAA records associate a domain name with an IPv6 address.",
      "example": "A",
      "type": "string",
      "enum": ["A", "AAAA", "NS", "MX", "CNAME", "TXT", "SRV", "PTR", "CAA"]
    },
    "Type3": {
      "title": "Type3",
      "description": "How the Image was created. \"Manual\" Images can be created at any time. \"Automatic\" images are created automatically from a deleted Linode.",
      "example": "manual",
      "type": "string",
      "enum": ["manual", "automatic"]
    },
    "Type4": {
      "title": "Type4",
      "description": "How the Image was created. Manual Images can be created at any time. \"Automatic\" Images are created automatically from a deleted Linode.",
      "example": "manual",
      "type": "string",
      "enum": ["manual", "automatic"]
    },
    "Type5": {
      "title": "Type5",
      "description": "The type of service, ether `prepay` or `misc`.",
      "example": "hourly",
      "type": "string",
      "enum": ["hourly", "prepay", "misc"]
    },
    "Type6": {
      "title": "Type6",
      "description": "The type of address this is.",
      "example": "ipv4",
      "type": "string",
      "enum": ["ipv4", "ipv6", "ipv6/pool", "ipv6/range"]
    },
    "Type7": {
      "title": "Type7",
      "description": "The type of entity this is. In this case, it is always a Ticket.",
      "example": "ticket",
      "type": "string",
      "enum": ["ticket"]
    },
    "Type8": {
      "title": "Type8",
      "description": "The type of Notification this is.",
      "example": "migration_scheduled",
      "type": "string",
      "enum": [
        "migration_scheduled",
        "migration_imminent",
        "migration_pending",
        "reboot_scheduled",
        "outage",
        "payment_due",
        "ticket_important",
        "ticket_abuse",
        "notice",
        "maintenance"
      ]
    },
    "VirtMode": {
      "title": "VirtMode",
      "description": "Controls the virtualization mode. Defaults to `paravirt`.\n* `paravirt` is suitable for most cases. Linodes running in paravirt mode  share some qualities with the host, ultimately making it run faster since\n  there is less transition between it and the host.\n* `full_virt` affords more customization, but is slower because 100% of the VM  is virtualized.",
      "example": "paravirt",
      "type": "string",
      "enum": ["paravirt", "fullvirt"]
    },
    "VolumesAttachRequest": {
      "title": "VolumesAttachRequest",
      "type": "object",
      "properties": {
        "linode_id": {
          "type": "integer",
          "format": "int32"
        },
        "config_id": {
          "description": "The ID of the Linode Config to include this Volume in. Must belong to the Linode referenced by `linode_id`. If not given, the last booted Config will be chosen.",
          "example": 23456,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VolumesCloneRequest": {
      "title": "VolumesCloneRequest",
      "type": "object",
      "properties": {
        "label": {
          "description": "The Volume's label is for display purposes only.",
          "example": "my-volume",
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"
        }
      },
      "required": ["label"]
    },
    "VolumesRequest": {
      "title": "VolumesRequest",
      "type": "object",
      "properties": {
        "region": {
          "description": "The Region to deploy this Volume in. This is only required if a linode_id is not given.",
          "type": "string"
        },
        "linode_id": {
          "description": "The Linode this volume should be attached to upon creation. If not given, the volume will be created without an attachment.",
          "example": 123,
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "description": "The initial size of this volume, in GB.  Be aware that volumes may only be resized up after creation.",
          "example": 20,
          "type": "integer",
          "default": 20,
          "format": "int32"
        },
        "label": {
          "description": "The Volume's label, which is also used in the `filesystem_path` of the resulting volume.",
          "example": "my-volume",
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"
        },
        "config_id": {
          "description": "When creating a Volume attached to a Linode, the ID of the Linode Config to include the new Volume in. This Config must belong to the Linode referenced by `linode_id`. Must _not_ be provided if `linode_id` is not sent. If a `linode_id` is sent without a `config_id`, the volume will be attached:\n  * to the Linode's only config if it only has one config.\n  * to the Linode's last used config, if possible.\n\nIf no config can be selected for attachment, an error will be returned.",
          "example": 23456,
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.",
          "example": ["example tag", "another example"],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VolumesRequest1": {
      "title": "VolumesRequest1",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of this Volume.",
          "example": 12345,
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "description": "The Volume's label is for display purposes only.",
          "example": "my-volume",
          "type": "string",
          "minLength": 1,
          "maxLength": 32,
          "pattern": "^[a-zA-Z]((?!--|__)[a-zA-Z0-9-_])+$"
        },
        "filesystem_path": {
          "description": "The full filesystem path for the Volume based on the Volume's label. Path is /dev/disk/by-id/scsi-0Linode_Volume_ + Volume label.",
          "example": "/dev/disk/by-id/scsi-0Linode_Volume_my-volume",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status9"
        },
        "size": {
          "description": "The Volume's size, in GiB.",
          "example": 30,
          "type": "integer",
          "maximum": 10240.0,
          "format": "int32"
        },
        "region": {
          "description": "The unique ID of this Region.",
          "example": "us-east",
          "type": "string"
        },
        "linode_id": {
          "description": "If a Volume is attached to a specific Linode, the ID of that Linode will be displayed here.",
          "example": 12346,
          "type": "integer",
          "format": "int32"
        },
        "created": {
          "description": "When this Volume was created.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "updated": {
          "description": "When this Volume was last updated.",
          "example": "1/1/2018 12:01:01 AM",
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "description": "An array of Tags applied to this object.  Tags are for organizational purposes only.",
          "example": ["example tag", "another example"],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["label"]
    },
    "VolumesResize0Error": {
      "title": "VolumesResize0Error",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorObject"
          }
        }
      }
    },
    "VolumesResizeRequest": {
      "title": "VolumesResizeRequest",
      "type": "object",
      "properties": {
        "size": {
          "description": "The Volume's size, in GiB.",
          "example": 30,
          "type": "integer",
          "maximum": 10240.0,
          "format": "int32"
        }
      },
      "required": ["size"]
    },
    "VolumesResponse": {
      "title": "VolumesResponse",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "page": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Window": {
      "title": "Window",
      "description": "The window in which your backups will be taken, in UTC. A\nbackups window is a two-hour span of time in which the backup\nmay occur.\n\n\nFor example, `W10` indicates that your backups should be\ntaken between 10:00 and 12:00. If you do not choose a backup\nwindow, one will be selected for you automatically.\n\n\nIf not set manually, when backups are initially enabled this\nmay come back as `Scheduling` until the `window` is automatically selected.",
      "example": "Scheduling",
      "type": "string",
      "enum": [
        "Scheduling",
        "W0",
        "W2",
        "W4",
        "W8",
        "W10",
        "W12",
        "W14",
        "W16",
        "W18",
        "W20",
        "W22"
      ]
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": ""
    },
    {
      "name": "Domains",
      "description": ""
    },
    {
      "name": "Images",
      "description": ""
    },
    {
      "name": "Linode Instances",
      "description": ""
    },
    {
      "name": "StackScripts",
      "description": ""
    },
    {
      "name": "Linode Types",
      "description": ""
    },
    {
      "name": "Longview",
      "description": ""
    },
    {
      "name": "Managed",
      "description": ""
    },
    {
      "name": "Networking",
      "description": ""
    },
    {
      "name": "NodeBalancers",
      "description": ""
    },
    {
      "name": "Profile",
      "description": ""
    },
    {
      "name": "Regions",
      "description": ""
    },
    {
      "name": "Support",
      "description": ""
    },
    {
      "name": "Tags",
      "description": ""
    },
    {
      "name": "Volumes",
      "description": ""
    }
  ]
}
